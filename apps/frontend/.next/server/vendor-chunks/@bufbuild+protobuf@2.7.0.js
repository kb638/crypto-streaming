"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@bufbuild+protobuf@2.7.0";
exports.ids = ["vendor-chunks/@bufbuild+protobuf@2.7.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/boot.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/boot.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boot: () => (/* binding */ boot),\n/* harmony export */   bootFileDescriptorProto: () => (/* binding */ bootFileDescriptorProto)\n/* harmony export */ });\n/* harmony import */ var _restore_json_names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./restore-json-names.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/restore-json-names.js\");\n/* harmony import */ var _registry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../registry.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/registry.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Hydrate a file descriptor for google/protobuf/descriptor.proto from a plain\n * object.\n *\n * See createFileDescriptorProtoBoot() for details.\n *\n * @private\n */\nfunction boot(boot) {\n    const root = bootFileDescriptorProto(boot);\n    root.messageType.forEach(_restore_json_names_js__WEBPACK_IMPORTED_MODULE_0__.restoreJsonNames);\n    const reg = (0,_registry_js__WEBPACK_IMPORTED_MODULE_1__.createFileRegistry)(root, () => undefined);\n    // biome-ignore lint/style/noNonNullAssertion: non-null assertion because we just created the registry from the file we look up\n    return reg.getFile(root.name);\n}\n/**\n * Creates the message google.protobuf.FileDescriptorProto from an object literal.\n *\n * See createFileDescriptorProtoBoot() for details.\n *\n * @private\n */\nfunction bootFileDescriptorProto(init) {\n    const proto = Object.create({\n        syntax: \"\",\n        edition: 0,\n    });\n    return Object.assign(proto, Object.assign(Object.assign({ $typeName: \"google.protobuf.FileDescriptorProto\", dependency: [], publicDependency: [], weakDependency: [], optionDependency: [], service: [], extension: [] }, init), { messageType: init.messageType.map(bootDescriptorProto), enumType: init.enumType.map(bootEnumDescriptorProto) }));\n}\nfunction bootDescriptorProto(init) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const proto = Object.create({\n        visibility: 0,\n    });\n    return Object.assign(proto, {\n        $typeName: \"google.protobuf.DescriptorProto\",\n        name: init.name,\n        field: (_b = (_a = init.field) === null || _a === void 0 ? void 0 : _a.map(bootFieldDescriptorProto)) !== null && _b !== void 0 ? _b : [],\n        extension: [],\n        nestedType: (_d = (_c = init.nestedType) === null || _c === void 0 ? void 0 : _c.map(bootDescriptorProto)) !== null && _d !== void 0 ? _d : [],\n        enumType: (_f = (_e = init.enumType) === null || _e === void 0 ? void 0 : _e.map(bootEnumDescriptorProto)) !== null && _f !== void 0 ? _f : [],\n        extensionRange: (_h = (_g = init.extensionRange) === null || _g === void 0 ? void 0 : _g.map((e) => (Object.assign({ $typeName: \"google.protobuf.DescriptorProto.ExtensionRange\" }, e)))) !== null && _h !== void 0 ? _h : [],\n        oneofDecl: [],\n        reservedRange: [],\n        reservedName: [],\n    });\n}\nfunction bootFieldDescriptorProto(init) {\n    const proto = Object.create({\n        label: 1,\n        typeName: \"\",\n        extendee: \"\",\n        defaultValue: \"\",\n        oneofIndex: 0,\n        jsonName: \"\",\n        proto3Optional: false,\n    });\n    return Object.assign(proto, Object.assign(Object.assign({ $typeName: \"google.protobuf.FieldDescriptorProto\" }, init), { options: init.options ? bootFieldOptions(init.options) : undefined }));\n}\nfunction bootFieldOptions(init) {\n    var _a, _b, _c;\n    const proto = Object.create({\n        ctype: 0,\n        packed: false,\n        jstype: 0,\n        lazy: false,\n        unverifiedLazy: false,\n        deprecated: false,\n        weak: false,\n        debugRedact: false,\n        retention: 0,\n    });\n    return Object.assign(proto, Object.assign(Object.assign({ $typeName: \"google.protobuf.FieldOptions\" }, init), { targets: (_a = init.targets) !== null && _a !== void 0 ? _a : [], editionDefaults: (_c = (_b = init.editionDefaults) === null || _b === void 0 ? void 0 : _b.map((e) => (Object.assign({ $typeName: \"google.protobuf.FieldOptions.EditionDefault\" }, e)))) !== null && _c !== void 0 ? _c : [], uninterpretedOption: [] }));\n}\nfunction bootEnumDescriptorProto(init) {\n    const proto = Object.create({\n        visibility: 0,\n    });\n    return Object.assign(proto, {\n        $typeName: \"google.protobuf.EnumDescriptorProto\",\n        name: init.name,\n        reservedName: [],\n        reservedRange: [],\n        value: init.value.map((e) => (Object.assign({ $typeName: \"google.protobuf.EnumValueDescriptorProto\" }, e))),\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9ib290LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMyRDtBQUNQO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNkJBQTZCLG9FQUFnQjtBQUM3QyxnQkFBZ0IsZ0VBQWtCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsOERBQThELDhKQUE4SixXQUFXLDhHQUE4RztBQUNyVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkhBQTZILDZEQUE2RDtBQUMxTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsOERBQThELG1EQUFtRCxXQUFXLG9FQUFvRTtBQUNoTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw4REFBOEQsMkNBQTJDLFdBQVcseUxBQXlMLDBEQUEwRCxzRUFBc0U7QUFDN2E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCx1REFBdUQ7QUFDN0csS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9jb2RlZ2VudjIvYm9vdC5qcz9hYjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyByZXN0b3JlSnNvbk5hbWVzIH0gZnJvbSBcIi4vcmVzdG9yZS1qc29uLW5hbWVzLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVGaWxlUmVnaXN0cnkgfSBmcm9tIFwiLi4vcmVnaXN0cnkuanNcIjtcbi8qKlxuICogSHlkcmF0ZSBhIGZpbGUgZGVzY3JpcHRvciBmb3IgZ29vZ2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8gZnJvbSBhIHBsYWluXG4gKiBvYmplY3QuXG4gKlxuICogU2VlIGNyZWF0ZUZpbGVEZXNjcmlwdG9yUHJvdG9Cb290KCkgZm9yIGRldGFpbHMuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvb3QoYm9vdCkge1xuICAgIGNvbnN0IHJvb3QgPSBib290RmlsZURlc2NyaXB0b3JQcm90byhib290KTtcbiAgICByb290Lm1lc3NhZ2VUeXBlLmZvckVhY2gocmVzdG9yZUpzb25OYW1lcyk7XG4gICAgY29uc3QgcmVnID0gY3JlYXRlRmlsZVJlZ2lzdHJ5KHJvb3QsICgpID0+IHVuZGVmaW5lZCk7XG4gICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3R5bGUvbm9Ob25OdWxsQXNzZXJ0aW9uOiBub24tbnVsbCBhc3NlcnRpb24gYmVjYXVzZSB3ZSBqdXN0IGNyZWF0ZWQgdGhlIHJlZ2lzdHJ5IGZyb20gdGhlIGZpbGUgd2UgbG9vayB1cFxuICAgIHJldHVybiByZWcuZ2V0RmlsZShyb290Lm5hbWUpO1xufVxuLyoqXG4gKiBDcmVhdGVzIHRoZSBtZXNzYWdlIGdvb2dsZS5wcm90b2J1Zi5GaWxlRGVzY3JpcHRvclByb3RvIGZyb20gYW4gb2JqZWN0IGxpdGVyYWwuXG4gKlxuICogU2VlIGNyZWF0ZUZpbGVEZXNjcmlwdG9yUHJvdG9Cb290KCkgZm9yIGRldGFpbHMuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvb3RGaWxlRGVzY3JpcHRvclByb3RvKGluaXQpIHtcbiAgICBjb25zdCBwcm90byA9IE9iamVjdC5jcmVhdGUoe1xuICAgICAgICBzeW50YXg6IFwiXCIsXG4gICAgICAgIGVkaXRpb246IDAsXG4gICAgfSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvdG8sIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7ICR0eXBlTmFtZTogXCJnb29nbGUucHJvdG9idWYuRmlsZURlc2NyaXB0b3JQcm90b1wiLCBkZXBlbmRlbmN5OiBbXSwgcHVibGljRGVwZW5kZW5jeTogW10sIHdlYWtEZXBlbmRlbmN5OiBbXSwgb3B0aW9uRGVwZW5kZW5jeTogW10sIHNlcnZpY2U6IFtdLCBleHRlbnNpb246IFtdIH0sIGluaXQpLCB7IG1lc3NhZ2VUeXBlOiBpbml0Lm1lc3NhZ2VUeXBlLm1hcChib290RGVzY3JpcHRvclByb3RvKSwgZW51bVR5cGU6IGluaXQuZW51bVR5cGUubWFwKGJvb3RFbnVtRGVzY3JpcHRvclByb3RvKSB9KSk7XG59XG5mdW5jdGlvbiBib290RGVzY3JpcHRvclByb3RvKGluaXQpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oO1xuICAgIGNvbnN0IHByb3RvID0gT2JqZWN0LmNyZWF0ZSh7XG4gICAgICAgIHZpc2liaWxpdHk6IDAsXG4gICAgfSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvdG8sIHtcbiAgICAgICAgJHR5cGVOYW1lOiBcImdvb2dsZS5wcm90b2J1Zi5EZXNjcmlwdG9yUHJvdG9cIixcbiAgICAgICAgbmFtZTogaW5pdC5uYW1lLFxuICAgICAgICBmaWVsZDogKF9iID0gKF9hID0gaW5pdC5maWVsZCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm1hcChib290RmllbGREZXNjcmlwdG9yUHJvdG8pKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXSxcbiAgICAgICAgZXh0ZW5zaW9uOiBbXSxcbiAgICAgICAgbmVzdGVkVHlwZTogKF9kID0gKF9jID0gaW5pdC5uZXN0ZWRUeXBlKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubWFwKGJvb3REZXNjcmlwdG9yUHJvdG8pKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBbXSxcbiAgICAgICAgZW51bVR5cGU6IChfZiA9IChfZSA9IGluaXQuZW51bVR5cGUpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5tYXAoYm9vdEVudW1EZXNjcmlwdG9yUHJvdG8pKSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiBbXSxcbiAgICAgICAgZXh0ZW5zaW9uUmFuZ2U6IChfaCA9IChfZyA9IGluaXQuZXh0ZW5zaW9uUmFuZ2UpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy5tYXAoKGUpID0+IChPYmplY3QuYXNzaWduKHsgJHR5cGVOYW1lOiBcImdvb2dsZS5wcm90b2J1Zi5EZXNjcmlwdG9yUHJvdG8uRXh0ZW5zaW9uUmFuZ2VcIiB9LCBlKSkpKSAhPT0gbnVsbCAmJiBfaCAhPT0gdm9pZCAwID8gX2ggOiBbXSxcbiAgICAgICAgb25lb2ZEZWNsOiBbXSxcbiAgICAgICAgcmVzZXJ2ZWRSYW5nZTogW10sXG4gICAgICAgIHJlc2VydmVkTmFtZTogW10sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBib290RmllbGREZXNjcmlwdG9yUHJvdG8oaW5pdCkge1xuICAgIGNvbnN0IHByb3RvID0gT2JqZWN0LmNyZWF0ZSh7XG4gICAgICAgIGxhYmVsOiAxLFxuICAgICAgICB0eXBlTmFtZTogXCJcIixcbiAgICAgICAgZXh0ZW5kZWU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICAgICAgb25lb2ZJbmRleDogMCxcbiAgICAgICAganNvbk5hbWU6IFwiXCIsXG4gICAgICAgIHByb3RvM09wdGlvbmFsOiBmYWxzZSxcbiAgICB9KTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihwcm90bywgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgJHR5cGVOYW1lOiBcImdvb2dsZS5wcm90b2J1Zi5GaWVsZERlc2NyaXB0b3JQcm90b1wiIH0sIGluaXQpLCB7IG9wdGlvbnM6IGluaXQub3B0aW9ucyA/IGJvb3RGaWVsZE9wdGlvbnMoaW5pdC5vcHRpb25zKSA6IHVuZGVmaW5lZCB9KSk7XG59XG5mdW5jdGlvbiBib290RmllbGRPcHRpb25zKGluaXQpIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBjb25zdCBwcm90byA9IE9iamVjdC5jcmVhdGUoe1xuICAgICAgICBjdHlwZTogMCxcbiAgICAgICAgcGFja2VkOiBmYWxzZSxcbiAgICAgICAganN0eXBlOiAwLFxuICAgICAgICBsYXp5OiBmYWxzZSxcbiAgICAgICAgdW52ZXJpZmllZExhenk6IGZhbHNlLFxuICAgICAgICBkZXByZWNhdGVkOiBmYWxzZSxcbiAgICAgICAgd2VhazogZmFsc2UsXG4gICAgICAgIGRlYnVnUmVkYWN0OiBmYWxzZSxcbiAgICAgICAgcmV0ZW50aW9uOiAwLFxuICAgIH0pO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHByb3RvLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oeyAkdHlwZU5hbWU6IFwiZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9uc1wiIH0sIGluaXQpLCB7IHRhcmdldHM6IChfYSA9IGluaXQudGFyZ2V0cykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10sIGVkaXRpb25EZWZhdWx0czogKF9jID0gKF9iID0gaW5pdC5lZGl0aW9uRGVmYXVsdHMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5tYXAoKGUpID0+IChPYmplY3QuYXNzaWduKHsgJHR5cGVOYW1lOiBcImdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMuRWRpdGlvbkRlZmF1bHRcIiB9LCBlKSkpKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBbXSwgdW5pbnRlcnByZXRlZE9wdGlvbjogW10gfSkpO1xufVxuZnVuY3Rpb24gYm9vdEVudW1EZXNjcmlwdG9yUHJvdG8oaW5pdCkge1xuICAgIGNvbnN0IHByb3RvID0gT2JqZWN0LmNyZWF0ZSh7XG4gICAgICAgIHZpc2liaWxpdHk6IDAsXG4gICAgfSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvdG8sIHtcbiAgICAgICAgJHR5cGVOYW1lOiBcImdvb2dsZS5wcm90b2J1Zi5FbnVtRGVzY3JpcHRvclByb3RvXCIsXG4gICAgICAgIG5hbWU6IGluaXQubmFtZSxcbiAgICAgICAgcmVzZXJ2ZWROYW1lOiBbXSxcbiAgICAgICAgcmVzZXJ2ZWRSYW5nZTogW10sXG4gICAgICAgIHZhbHVlOiBpbml0LnZhbHVlLm1hcCgoZSkgPT4gKE9iamVjdC5hc3NpZ24oeyAkdHlwZU5hbWU6IFwiZ29vZ2xlLnByb3RvYnVmLkVudW1WYWx1ZURlc2NyaXB0b3JQcm90b1wiIH0sIGUpKSksXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/boot.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/enum.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/enum.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enumDesc: () => (/* binding */ enumDesc),\n/* harmony export */   tsEnum: () => (/* binding */ tsEnum)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate an enum descriptor.\n *\n * @private\n */\nfunction enumDesc(file, path, ...paths) {\n    if (paths.length == 0) {\n        return file.enums[path];\n    }\n    const e = paths.pop(); // we checked length above\n    return paths.reduce((acc, cur) => acc.nestedMessages[cur], file.messages[path]).nestedEnums[e];\n}\n/**\n * Construct a TypeScript enum object at runtime from a descriptor.\n */\nfunction tsEnum(desc) {\n    const enumObject = {};\n    for (const value of desc.values) {\n        enumObject[value.localName] = value.number;\n        enumObject[value.number] = value.localName;\n    }\n    return enumObject;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9lbnVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9lbnVtLmpzP2QzYWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogSHlkcmF0ZSBhbiBlbnVtIGRlc2NyaXB0b3IuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVudW1EZXNjKGZpbGUsIHBhdGgsIC4uLnBhdGhzKSB7XG4gICAgaWYgKHBhdGhzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHJldHVybiBmaWxlLmVudW1zW3BhdGhdO1xuICAgIH1cbiAgICBjb25zdCBlID0gcGF0aHMucG9wKCk7IC8vIHdlIGNoZWNrZWQgbGVuZ3RoIGFib3ZlXG4gICAgcmV0dXJuIHBhdGhzLnJlZHVjZSgoYWNjLCBjdXIpID0+IGFjYy5uZXN0ZWRNZXNzYWdlc1tjdXJdLCBmaWxlLm1lc3NhZ2VzW3BhdGhdKS5uZXN0ZWRFbnVtc1tlXTtcbn1cbi8qKlxuICogQ29uc3RydWN0IGEgVHlwZVNjcmlwdCBlbnVtIG9iamVjdCBhdCBydW50aW1lIGZyb20gYSBkZXNjcmlwdG9yLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHNFbnVtKGRlc2MpIHtcbiAgICBjb25zdCBlbnVtT2JqZWN0ID0ge307XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiBkZXNjLnZhbHVlcykge1xuICAgICAgICBlbnVtT2JqZWN0W3ZhbHVlLmxvY2FsTmFtZV0gPSB2YWx1ZS5udW1iZXI7XG4gICAgICAgIGVudW1PYmplY3RbdmFsdWUubnVtYmVyXSA9IHZhbHVlLmxvY2FsTmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIGVudW1PYmplY3Q7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/enum.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/file.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/file.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fileDesc: () => (/* binding */ fileDesc)\n/* harmony export */ });\n/* harmony import */ var _wire_base64_encoding_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../wire/base64-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/base64-encoding.js\");\n/* harmony import */ var _wkt_gen_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../wkt/gen/google/protobuf/descriptor_pb.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/descriptor_pb.js\");\n/* harmony import */ var _registry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../registry.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/registry.js\");\n/* harmony import */ var _restore_json_names_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./restore-json-names.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/restore-json-names.js\");\n/* harmony import */ var _from_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../from-binary.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-binary.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Hydrate a file descriptor.\n *\n * @private\n */\nfunction fileDesc(b64, imports) {\n    var _a;\n    const root = (0,_from_binary_js__WEBPACK_IMPORTED_MODULE_0__.fromBinary)(_wkt_gen_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FileDescriptorProtoSchema, (0,_wire_base64_encoding_js__WEBPACK_IMPORTED_MODULE_2__.base64Decode)(b64));\n    root.messageType.forEach(_restore_json_names_js__WEBPACK_IMPORTED_MODULE_3__.restoreJsonNames);\n    root.dependency = (_a = imports === null || imports === void 0 ? void 0 : imports.map((f) => f.proto.name)) !== null && _a !== void 0 ? _a : [];\n    const reg = (0,_registry_js__WEBPACK_IMPORTED_MODULE_4__.createFileRegistry)(root, (protoFileName) => imports === null || imports === void 0 ? void 0 : imports.find((f) => f.proto.name === protoFileName));\n    // biome-ignore lint/style/noNonNullAssertion: non-null assertion because we just created the registry from the file we look up\n    return reg.getFile(root.name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9maWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBEO0FBQzhCO0FBQ3BDO0FBQ087QUFDWjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGlCQUFpQiwyREFBVSxDQUFDLGdHQUF5QixFQUFFLHNFQUFZO0FBQ25FLDZCQUE2QixvRUFBZ0I7QUFDN0M7QUFDQSxnQkFBZ0IsZ0VBQWtCO0FBQ2xDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHV0by9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGJ1ZmJ1aWxkK3Byb3RvYnVmQDIuNy4wL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vY29kZWdlbnYyL2ZpbGUuanM/MzFhNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI1IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgYmFzZTY0RGVjb2RlIH0gZnJvbSBcIi4uL3dpcmUvYmFzZTY0LWVuY29kaW5nLmpzXCI7XG5pbXBvcnQgeyBGaWxlRGVzY3JpcHRvclByb3RvU2NoZW1hIH0gZnJvbSBcIi4uL3drdC9nZW4vZ29vZ2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3JfcGIuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUZpbGVSZWdpc3RyeSB9IGZyb20gXCIuLi9yZWdpc3RyeS5qc1wiO1xuaW1wb3J0IHsgcmVzdG9yZUpzb25OYW1lcyB9IGZyb20gXCIuL3Jlc3RvcmUtanNvbi1uYW1lcy5qc1wiO1xuaW1wb3J0IHsgZnJvbUJpbmFyeSB9IGZyb20gXCIuLi9mcm9tLWJpbmFyeS5qc1wiO1xuLyoqXG4gKiBIeWRyYXRlIGEgZmlsZSBkZXNjcmlwdG9yLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaWxlRGVzYyhiNjQsIGltcG9ydHMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgcm9vdCA9IGZyb21CaW5hcnkoRmlsZURlc2NyaXB0b3JQcm90b1NjaGVtYSwgYmFzZTY0RGVjb2RlKGI2NCkpO1xuICAgIHJvb3QubWVzc2FnZVR5cGUuZm9yRWFjaChyZXN0b3JlSnNvbk5hbWVzKTtcbiAgICByb290LmRlcGVuZGVuY3kgPSAoX2EgPSBpbXBvcnRzID09PSBudWxsIHx8IGltcG9ydHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGltcG9ydHMubWFwKChmKSA9PiBmLnByb3RvLm5hbWUpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICBjb25zdCByZWcgPSBjcmVhdGVGaWxlUmVnaXN0cnkocm9vdCwgKHByb3RvRmlsZU5hbWUpID0+IGltcG9ydHMgPT09IG51bGwgfHwgaW1wb3J0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW1wb3J0cy5maW5kKChmKSA9PiBmLnByb3RvLm5hbWUgPT09IHByb3RvRmlsZU5hbWUpKTtcbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9zdHlsZS9ub05vbk51bGxBc3NlcnRpb246IG5vbi1udWxsIGFzc2VydGlvbiBiZWNhdXNlIHdlIGp1c3QgY3JlYXRlZCB0aGUgcmVnaXN0cnkgZnJvbSB0aGUgZmlsZSB3ZSBsb29rIHVwXG4gICAgcmV0dXJuIHJlZy5nZXRGaWxlKHJvb3QubmFtZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/file.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/message.js":
/*!***********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/message.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messageDesc: () => (/* binding */ messageDesc)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate a message descriptor.\n *\n * @private\n */\nfunction messageDesc(file, path, ...paths) {\n    return paths.reduce((acc, cur) => acc.nestedMessages[cur], file.messages[path]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9tZXNzYWdlLmpzPzBmOGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogSHlkcmF0ZSBhIG1lc3NhZ2UgZGVzY3JpcHRvci5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVzc2FnZURlc2MoZmlsZSwgcGF0aCwgLi4ucGF0aHMpIHtcbiAgICByZXR1cm4gcGF0aHMucmVkdWNlKChhY2MsIGN1cikgPT4gYWNjLm5lc3RlZE1lc3NhZ2VzW2N1cl0sIGZpbGUubWVzc2FnZXNbcGF0aF0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/message.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/restore-json-names.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/restore-json-names.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   restoreJsonNames: () => (/* binding */ restoreJsonNames)\n/* harmony export */ });\n/* harmony import */ var _reflect_names_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../reflect/names.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/names.js\");\n/* harmony import */ var _reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../reflect/unsafe.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @private\n */\nfunction restoreJsonNames(message) {\n    for (const f of message.field) {\n        if (!(0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeIsSetExplicit)(f, \"jsonName\")) {\n            f.jsonName = (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.protoCamelCase)(f.name);\n        }\n    }\n    message.nestedType.forEach(restoreJsonNames);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9yZXN0b3JlLWpzb24tbmFtZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDcUQ7QUFDTTtBQUMzRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSx1RUFBbUI7QUFDaEMseUJBQXlCLGlFQUFjO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9jb2RlZ2VudjIvcmVzdG9yZS1qc29uLW5hbWVzLmpzPzUzZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IHByb3RvQ2FtZWxDYXNlIH0gZnJvbSBcIi4uL3JlZmxlY3QvbmFtZXMuanNcIjtcbmltcG9ydCB7IHVuc2FmZUlzU2V0RXhwbGljaXQgfSBmcm9tIFwiLi4vcmVmbGVjdC91bnNhZmUuanNcIjtcbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc3RvcmVKc29uTmFtZXMobWVzc2FnZSkge1xuICAgIGZvciAoY29uc3QgZiBvZiBtZXNzYWdlLmZpZWxkKSB7XG4gICAgICAgIGlmICghdW5zYWZlSXNTZXRFeHBsaWNpdChmLCBcImpzb25OYW1lXCIpKSB7XG4gICAgICAgICAgICBmLmpzb25OYW1lID0gcHJvdG9DYW1lbENhc2UoZi5uYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBtZXNzYWdlLm5lc3RlZFR5cGUuZm9yRWFjaChyZXN0b3JlSnNvbk5hbWVzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/restore-json-names.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/service.js":
/*!***********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/service.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serviceDesc: () => (/* binding */ serviceDesc)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Hydrate a service descriptor.\n *\n * @private\n */\nfunction serviceDesc(file, path, ...paths) {\n    if (paths.length > 0) {\n        throw new Error();\n    }\n    return file.services[path];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9zZXJ2aWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW52Mi9zZXJ2aWNlLmpzPzU5MWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogSHlkcmF0ZSBhIHNlcnZpY2UgZGVzY3JpcHRvci5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VydmljZURlc2MoZmlsZSwgcGF0aCwgLi4ucGF0aHMpIHtcbiAgICBpZiAocGF0aHMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICB9XG4gICAgcmV0dXJuIGZpbGUuc2VydmljZXNbcGF0aF07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/service.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js":
/*!************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create)\n/* harmony export */ });\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-message.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _reflect_scalar_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reflect/scalar.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\");\n/* harmony import */ var _reflect_guard_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reflect/guard.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/guard.js\");\n/* harmony import */ var _reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect/unsafe.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js\");\n/* harmony import */ var _wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./wkt/wrappers.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO3: const $name: Edition.$localName = $number;\nconst EDITION_PROTO3 = 999;\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO2: const $name: Edition.$localName = $number;\nconst EDITION_PROTO2 = 998;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n/**\n * Create a new message instance.\n *\n * The second argument is an optional initializer object, where all fields are\n * optional.\n */\nfunction create(schema, init) {\n    if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(init, schema)) {\n        return init;\n    }\n    const message = createZeroMessage(schema);\n    if (init !== undefined) {\n        initMessage(schema, message, init);\n    }\n    return message;\n}\n/**\n * Sets field values from a MessageInitShape on a zero message.\n */\nfunction initMessage(messageDesc, message, init) {\n    for (const member of messageDesc.members) {\n        let value = init[member.localName];\n        if (value == null) {\n            // intentionally ignore undefined and null\n            continue;\n        }\n        let field;\n        if (member.kind == \"oneof\") {\n            const oneofField = (0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_1__.unsafeOneofCase)(init, member);\n            if (!oneofField) {\n                continue;\n            }\n            field = oneofField;\n            value = (0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_1__.unsafeGet)(init, oneofField);\n        }\n        else {\n            field = member;\n        }\n        switch (field.fieldKind) {\n            case \"message\":\n                value = toMessage(field, value);\n                break;\n            case \"scalar\":\n                value = initScalar(field, value);\n                break;\n            case \"list\":\n                value = initList(field, value);\n                break;\n            case \"map\":\n                value = initMap(field, value);\n                break;\n        }\n        (0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_1__.unsafeSet)(message, field, value);\n    }\n    return message;\n}\nfunction initScalar(field, value) {\n    if (field.scalar == _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n        return toU8Arr(value);\n    }\n    return value;\n}\nfunction initMap(field, value) {\n    if ((0,_reflect_guard_js__WEBPACK_IMPORTED_MODULE_3__.isObject)(value)) {\n        if (field.scalar == _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n            return convertObjectValues(value, toU8Arr);\n        }\n        if (field.mapKind == \"message\") {\n            return convertObjectValues(value, (val) => toMessage(field, val));\n        }\n    }\n    return value;\n}\nfunction initList(field, value) {\n    if (Array.isArray(value)) {\n        if (field.scalar == _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n            return value.map(toU8Arr);\n        }\n        if (field.listKind == \"message\") {\n            return value.map((item) => toMessage(field, item));\n        }\n    }\n    return value;\n}\nfunction toMessage(field, value) {\n    if (field.fieldKind == \"message\" &&\n        !field.oneof &&\n        (0,_wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.isWrapperDesc)(field.message)) {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return initScalar(field.message.fields[0], value);\n    }\n    if ((0,_reflect_guard_js__WEBPACK_IMPORTED_MODULE_3__.isObject)(value)) {\n        if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName !== \"google.protobuf.Value\") {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            return value;\n        }\n        if (!(0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(value, field.message)) {\n            return create(field.message, value);\n        }\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(value) {\n    return Array.isArray(value) ? new Uint8Array(value) : value;\n}\nfunction convertObjectValues(obj, fn) {\n    const ret = {};\n    for (const entry of Object.entries(obj)) {\n        ret[entry[0]] = fn(entry[1]);\n    }\n    return ret;\n}\nconst tokenZeroMessageField = Symbol();\nconst messagePrototypes = new WeakMap();\n/**\n * Create a zero message.\n */\nfunction createZeroMessage(desc) {\n    let msg;\n    if (!needsPrototypeChain(desc)) {\n        msg = {\n            $typeName: desc.typeName,\n        };\n        for (const member of desc.members) {\n            if (member.kind == \"oneof\" || member.presence == IMPLICIT) {\n                msg[member.localName] = createZeroField(member);\n            }\n        }\n    }\n    else {\n        // Support default values and track presence via the prototype chain\n        const cached = messagePrototypes.get(desc);\n        let prototype;\n        let members;\n        if (cached) {\n            ({ prototype, members } = cached);\n        }\n        else {\n            prototype = {};\n            members = new Set();\n            for (const member of desc.members) {\n                if (member.kind == \"oneof\") {\n                    // we can only put immutable values on the prototype,\n                    // oneof ADTs are mutable\n                    continue;\n                }\n                if (member.fieldKind != \"scalar\" && member.fieldKind != \"enum\") {\n                    // only scalar and enum values are immutable, map, list, and message\n                    // are not\n                    continue;\n                }\n                if (member.presence == IMPLICIT) {\n                    // implicit presence tracks field presence by zero values - e.g. 0, false, \"\", are unset, 1, true, \"x\" are set.\n                    // message, map, list fields are mutable, and also have IMPLICIT presence.\n                    continue;\n                }\n                members.add(member);\n                prototype[member.localName] = createZeroField(member);\n            }\n            messagePrototypes.set(desc, { prototype, members });\n        }\n        msg = Object.create(prototype);\n        msg.$typeName = desc.typeName;\n        for (const member of desc.members) {\n            if (members.has(member)) {\n                continue;\n            }\n            if (member.kind == \"field\") {\n                if (member.fieldKind == \"message\") {\n                    continue;\n                }\n                if (member.fieldKind == \"scalar\" || member.fieldKind == \"enum\") {\n                    if (member.presence != IMPLICIT) {\n                        continue;\n                    }\n                }\n            }\n            msg[member.localName] = createZeroField(member);\n        }\n    }\n    return msg;\n}\n/**\n * Do we need the prototype chain to track field presence?\n */\nfunction needsPrototypeChain(desc) {\n    switch (desc.file.edition) {\n        case EDITION_PROTO3:\n            // proto3 always uses implicit presence, we never need the prototype chain.\n            return false;\n        case EDITION_PROTO2:\n            // proto2 never uses implicit presence, we always need the prototype chain.\n            return true;\n        default:\n            // If a message uses scalar or enum fields with explicit presence, we need\n            // the prototype chain to track presence. This rule does not apply to fields\n            // in a oneof group - they use a different mechanism to track presence.\n            return desc.fields.some((f) => f.presence != IMPLICIT && f.fieldKind != \"message\" && !f.oneof);\n    }\n}\n/**\n * Returns a zero value for oneof groups, and for every field kind except\n * messages. Scalar and enum fields can have default values.\n */\nfunction createZeroField(field) {\n    if (field.kind == \"oneof\") {\n        return { case: undefined };\n    }\n    if (field.fieldKind == \"list\") {\n        return [];\n    }\n    if (field.fieldKind == \"map\") {\n        return {}; // Object.create(null) would be desirable here, but is unsupported by react https://react.dev/reference/react/use-server#serializable-parameters-and-return-values\n    }\n    if (field.fieldKind == \"message\") {\n        return tokenZeroMessageField;\n    }\n    const defaultValue = field.getDefaultValue();\n    if (defaultValue !== undefined) {\n        return field.fieldKind == \"scalar\" && field.longAsString\n            ? defaultValue.toString()\n            : defaultValue;\n    }\n    return field.fieldKind == \"scalar\"\n        ? (0,_reflect_scalar_js__WEBPACK_IMPORTED_MODULE_5__.scalarZeroValue)(field.scalar, field.longAsString)\n        : field.enum.values[0].number;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js":
/*!*****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScalarType: () => (/* binding */ ScalarType)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2Rlc2NyaXB0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9kZXNjcmlwdG9ycy5qcz8zN2M1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIFNjYWxhciB2YWx1ZSB0eXBlcy4gVGhpcyBpcyBhIHN1YnNldCBvZiBmaWVsZCB0eXBlcyBkZWNsYXJlZCBieSBwcm90b2J1ZlxuICogZW51bSBnb29nbGUucHJvdG9idWYuRmllbGREZXNjcmlwdG9yUHJvdG8uVHlwZSBUaGUgdHlwZXMgR1JPVVAgYW5kIE1FU1NBR0VcbiAqIGFyZSBvbWl0dGVkLCBidXQgdGhlIG51bWVyaWNhbCB2YWx1ZXMgYXJlIGlkZW50aWNhbC5cbiAqL1xuZXhwb3J0IHZhciBTY2FsYXJUeXBlO1xuKGZ1bmN0aW9uIChTY2FsYXJUeXBlKSB7XG4gICAgLy8gMCBpcyByZXNlcnZlZCBmb3IgZXJyb3JzLlxuICAgIC8vIE9yZGVyIGlzIHdlaXJkIGZvciBoaXN0b3JpY2FsIHJlYXNvbnMuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiRE9VQkxFXCJdID0gMV0gPSBcIkRPVUJMRVwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIkZMT0FUXCJdID0gMl0gPSBcIkZMT0FUXCI7XG4gICAgLy8gTm90IFppZ1phZyBlbmNvZGVkLiAgTmVnYXRpdmUgbnVtYmVycyB0YWtlIDEwIGJ5dGVzLiAgVXNlIFRZUEVfU0lOVDY0IGlmXG4gICAgLy8gbmVnYXRpdmUgdmFsdWVzIGFyZSBsaWtlbHkuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiSU5UNjRcIl0gPSAzXSA9IFwiSU5UNjRcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJVSU5UNjRcIl0gPSA0XSA9IFwiVUlOVDY0XCI7XG4gICAgLy8gTm90IFppZ1phZyBlbmNvZGVkLiAgTmVnYXRpdmUgbnVtYmVycyB0YWtlIDEwIGJ5dGVzLiAgVXNlIFRZUEVfU0lOVDMyIGlmXG4gICAgLy8gbmVnYXRpdmUgdmFsdWVzIGFyZSBsaWtlbHkuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiSU5UMzJcIl0gPSA1XSA9IFwiSU5UMzJcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJGSVhFRDY0XCJdID0gNl0gPSBcIkZJWEVENjRcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJGSVhFRDMyXCJdID0gN10gPSBcIkZJWEVEMzJcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJCT09MXCJdID0gOF0gPSBcIkJPT0xcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJTVFJJTkdcIl0gPSA5XSA9IFwiU1RSSU5HXCI7XG4gICAgLy8gVGFnLWRlbGltaXRlZCBhZ2dyZWdhdGUuXG4gICAgLy8gR3JvdXAgdHlwZSBpcyBkZXByZWNhdGVkIGFuZCBub3Qgc3VwcG9ydGVkIGluIHByb3RvMy4gSG93ZXZlciwgUHJvdG8zXG4gICAgLy8gaW1wbGVtZW50YXRpb25zIHNob3VsZCBzdGlsbCBiZSBhYmxlIHRvIHBhcnNlIHRoZSBncm91cCB3aXJlIGZvcm1hdCBhbmRcbiAgICAvLyB0cmVhdCBncm91cCBmaWVsZHMgYXMgdW5rbm93biBmaWVsZHMuXG4gICAgLy8gVFlQRV9HUk9VUCA9IDEwLFxuICAgIC8vIFRZUEVfTUVTU0FHRSA9IDExLCAgLy8gTGVuZ3RoLWRlbGltaXRlZCBhZ2dyZWdhdGUuXG4gICAgLy8gTmV3IGluIHZlcnNpb24gMi5cbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJCWVRFU1wiXSA9IDEyXSA9IFwiQllURVNcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJVSU5UMzJcIl0gPSAxM10gPSBcIlVJTlQzMlwiO1xuICAgIC8vIFRZUEVfRU5VTSA9IDE0LFxuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNGSVhFRDMyXCJdID0gMTVdID0gXCJTRklYRUQzMlwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNGSVhFRDY0XCJdID0gMTZdID0gXCJTRklYRUQ2NFwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNJTlQzMlwiXSA9IDE3XSA9IFwiU0lOVDMyXCI7XG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiU0lOVDY0XCJdID0gMThdID0gXCJTSU5UNjRcIjtcbn0pKFNjYWxhclR5cGUgfHwgKFNjYWxhclR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/extensions.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/extensions.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearExtension: () => (/* binding */ clearExtension),\n/* harmony export */   createExtensionContainer: () => (/* binding */ createExtensionContainer),\n/* harmony export */   getExtension: () => (/* binding */ getExtension),\n/* harmony export */   getOption: () => (/* binding */ getOption),\n/* harmony export */   hasExtension: () => (/* binding */ hasExtension),\n/* harmony export */   hasOption: () => (/* binding */ hasOption),\n/* harmony export */   setExtension: () => (/* binding */ setExtension)\n/* harmony export */ });\n/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./create.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js\");\n/* harmony import */ var _from_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./from-binary.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-binary.js\");\n/* harmony import */ var _reflect_reflect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reflect/reflect.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js\");\n/* harmony import */ var _reflect_scalar_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reflect/scalar.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\");\n/* harmony import */ var _to_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./to-binary.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-binary.js\");\n/* harmony import */ var _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wire/binary-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js\");\n/* harmony import */ var _wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wkt/wrappers.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction getExtension(message, extension) {\n    assertExtendee(extension, message);\n    const ufs = filterUnknownFields(message.$unknown, extension);\n    const [container, field, get] = createExtensionContainer(extension);\n    for (const uf of ufs) {\n        (0,_from_binary_js__WEBPACK_IMPORTED_MODULE_0__.readField)(container, new _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(uf.data), field, uf.wireType, {\n            readUnknownFields: true,\n        });\n    }\n    return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction setExtension(message, extension, value) {\n    var _a;\n    assertExtendee(extension, message);\n    const ufs = ((_a = message.$unknown) !== null && _a !== void 0 ? _a : []).filter((uf) => uf.no !== extension.number);\n    const [container, field] = createExtensionContainer(extension, value);\n    const writer = new _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter();\n    (0,_to_binary_js__WEBPACK_IMPORTED_MODULE_2__.writeField)(writer, { writeUnknownFields: true }, container, field);\n    const reader = new _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(writer.finish());\n    while (reader.pos < reader.len) {\n        const [no, wireType] = reader.tag();\n        const data = reader.skip(wireType, no);\n        ufs.push({ no, wireType, data });\n    }\n    message.$unknown = ufs;\n}\n/**\n * Remove an extension value from a message.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction clearExtension(message, extension) {\n    assertExtendee(extension, message);\n    if (message.$unknown === undefined) {\n        return;\n    }\n    message.$unknown = message.$unknown.filter((uf) => uf.no !== extension.number);\n}\n/**\n * Check whether an extension is set on a message.\n */\nfunction hasExtension(message, extension) {\n    var _a;\n    return (extension.extendee.typeName === message.$typeName &&\n        !!((_a = message.$unknown) === null || _a === void 0 ? void 0 : _a.find((uf) => uf.no === extension.number)));\n}\n/**\n * Check whether an option is set on a descriptor.\n *\n * Options are extensions to the `google.protobuf.*Options` messages defined in\n * google/protobuf/descriptor.proto. This function gets the option message from\n * the descriptor, and calls hasExtension().\n */\nfunction hasOption(element, option) {\n    const message = element.proto.options;\n    if (!message) {\n        return false;\n    }\n    return hasExtension(message, option);\n}\n/**\n * Retrieve an option value from a descriptor.\n *\n * Options are extensions to the `google.protobuf.*Options` messages defined in\n * google/protobuf/descriptor.proto. This function gets the option message from\n * the descriptor, and calls getExtension(). Same as getExtension(), this\n * function never returns undefined.\n */\nfunction getOption(element, option) {\n    const message = element.proto.options;\n    if (!message) {\n        const [, , get] = createExtensionContainer(option);\n        return get();\n    }\n    return getExtension(message, option);\n}\nfunction filterUnknownFields(unknownFields, extension) {\n    if (unknownFields === undefined)\n        return [];\n    if (extension.fieldKind === \"enum\" || extension.fieldKind === \"scalar\") {\n        // singular scalar fields do not merge, we pick the last\n        for (let i = unknownFields.length - 1; i >= 0; --i) {\n            if (unknownFields[i].no == extension.number) {\n                return [unknownFields[i]];\n            }\n        }\n        return [];\n    }\n    return unknownFields.filter((uf) => uf.no === extension.number);\n}\n/**\n * @private\n */\nfunction createExtensionContainer(extension, value) {\n    const localName = extension.typeName;\n    const field = Object.assign(Object.assign({}, extension), { kind: \"field\", parent: extension.extendee, localName });\n    const desc = Object.assign(Object.assign({}, extension.extendee), { fields: [field], members: [field], oneofs: [] });\n    const container = (0,_create_js__WEBPACK_IMPORTED_MODULE_3__.create)(desc, value !== undefined ? { [localName]: value } : undefined);\n    return [\n        (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_4__.reflect)(desc, container),\n        field,\n        () => {\n            const value = container[localName];\n            if (value === undefined) {\n                // biome-ignore lint/style/noNonNullAssertion: Only message fields are undefined, rest will have a zero value.\n                const desc = extension.message;\n                if ((0,_wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.isWrapperDesc)(desc)) {\n                    return (0,_reflect_scalar_js__WEBPACK_IMPORTED_MODULE_6__.scalarZeroValue)(desc.fields[0].scalar, desc.fields[0].longAsString);\n                }\n                return (0,_create_js__WEBPACK_IMPORTED_MODULE_3__.create)(desc);\n            }\n            return value;\n        },\n    ];\n}\nfunction assertExtendee(extension, message) {\n    if (extension.extendee.typeName != message.$typeName) {\n        throw new Error(`extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/extensions.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-binary.js":
/*!*****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-binary.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBinary: () => (/* binding */ fromBinary),\n/* harmony export */   mergeFromBinary: () => (/* binding */ mergeFromBinary),\n/* harmony export */   readField: () => (/* binding */ readField)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _reflect_scalar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reflect/scalar.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\");\n/* harmony import */ var _reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect/reflect.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js\");\n/* harmony import */ var _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wire/binary-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js\");\n/* harmony import */ var _wire_varint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wire/varint.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\n/**\n * Parse serialized binary data.\n */\nfunction fromBinary(schema, bytes, options) {\n    const msg = (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(schema, undefined, false);\n    readMessage(msg, new _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return msg.message;\n}\n/**\n * Parse from binary data, merging fields.\n *\n * Repeated fields are appended. Map entries are added, overwriting\n * existing keys.\n *\n * If a message field is already present, it will be merged with the\n * new data.\n */\nfunction mergeFromBinary(schema, target, bytes, options) {\n    readMessage((0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(schema, target, false), new _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return target;\n}\n/**\n * If `delimited` is false, read the length given in `lengthOrDelimitedFieldNo`.\n *\n * If `delimited` is true, read until an EndGroup tag. `lengthOrDelimitedFieldNo`\n * is the expected field number.\n *\n * @private\n */\nfunction readMessage(message, reader, options, delimited, lengthOrDelimitedFieldNo) {\n    var _a;\n    const end = delimited ? reader.len : reader.pos + lengthOrDelimitedFieldNo;\n    let fieldNo;\n    let wireType;\n    const unknownFields = (_a = message.getUnknown()) !== null && _a !== void 0 ? _a : [];\n    while (reader.pos < end) {\n        [fieldNo, wireType] = reader.tag();\n        if (delimited && wireType == _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.WireType.EndGroup) {\n            break;\n        }\n        const field = message.findNumber(fieldNo);\n        if (!field) {\n            const data = reader.skip(wireType, fieldNo);\n            if (options.readUnknownFields) {\n                unknownFields.push({ no: fieldNo, wireType, data });\n            }\n            continue;\n        }\n        readField(message, reader, field, wireType, options);\n    }\n    if (delimited) {\n        if (wireType != _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.WireType.EndGroup || fieldNo !== lengthOrDelimitedFieldNo) {\n            throw new Error(\"invalid end group tag\");\n        }\n    }\n    if (unknownFields.length > 0) {\n        message.setUnknown(unknownFields);\n    }\n}\n/**\n * @private\n */\nfunction readField(message, reader, field, wireType, options) {\n    var _a;\n    switch (field.fieldKind) {\n        case \"scalar\":\n            message.set(field, readScalar(reader, field.scalar));\n            break;\n        case \"enum\":\n            const val = readScalar(reader, _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32);\n            if (field.enum.open) {\n                message.set(field, val);\n            }\n            else {\n                const ok = field.enum.values.some((v) => v.number === val);\n                if (ok) {\n                    message.set(field, val);\n                }\n                else if (options.readUnknownFields) {\n                    const bytes = [];\n                    (0,_wire_varint_js__WEBPACK_IMPORTED_MODULE_3__.varint32write)(val, bytes);\n                    const unknownFields = (_a = message.getUnknown()) !== null && _a !== void 0 ? _a : [];\n                    unknownFields.push({\n                        no: field.number,\n                        wireType,\n                        data: new Uint8Array(bytes),\n                    });\n                    message.setUnknown(unknownFields);\n                }\n            }\n            break;\n        case \"message\":\n            message.set(field, readMessageField(reader, options, field, message.get(field)));\n            break;\n        case \"list\":\n            readListField(reader, wireType, message.get(field), options);\n            break;\n        case \"map\":\n            readMapEntry(reader, message.get(field), options);\n            break;\n    }\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(reader, map, options) {\n    const field = map.field();\n    let key;\n    let val;\n    // Read the length of the map entry, which is a varint.\n    const len = reader.uint32();\n    // WARNING: Calculate end AFTER advancing reader.pos (above), so that\n    //          reader.pos is at the start of the map entry.\n    const end = reader.pos + len;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.mapKey);\n                break;\n            case 2:\n                switch (field.mapKind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.scalar);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, options, field);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = (0,_reflect_scalar_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.mapKey, false);\n    }\n    if (val === undefined) {\n        switch (field.mapKind) {\n            case \"scalar\":\n                val = (0,_reflect_scalar_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.scalar, false);\n                break;\n            case \"enum\":\n                val = field.enum.values[0].number;\n                break;\n            case \"message\":\n                val = (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(field.message, undefined, false);\n                break;\n        }\n    }\n    map.set(key, val);\n}\nfunction readListField(reader, wireType, list, options) {\n    var _a;\n    const field = list.field();\n    if (field.listKind === \"message\") {\n        list.add(readMessageField(reader, options, field));\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32;\n    const packed = wireType == _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_1__.WireType.LengthDelimited &&\n        scalarType != _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING &&\n        scalarType != _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES;\n    if (!packed) {\n        list.add(readScalar(reader, scalarType));\n        return;\n    }\n    const e = reader.uint32() + reader.pos;\n    while (reader.pos < e) {\n        list.add(readScalar(reader, scalarType));\n    }\n}\nfunction readMessageField(reader, options, field, mergeMessage) {\n    const delimited = field.delimitedEncoding;\n    const message = mergeMessage !== null && mergeMessage !== void 0 ? mergeMessage : (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(field.message, undefined, false);\n    readMessage(message, reader, options, delimited, delimited ? field.number : reader.uint32());\n    return message;\n}\nfunction readScalar(reader, type) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            return reader.string();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            return reader.bool();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n            return reader.double();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            return reader.float();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n            return reader.int32();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64:\n            return reader.int64();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64:\n            return reader.uint64();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n            return reader.fixed64();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n            return reader.bytes();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n            return reader.fixed32();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT64:\n            return reader.sint64();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n            return reader.uint32();\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-binary.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-json.js":
/*!***************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-json.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enumFromJson: () => (/* binding */ enumFromJson),\n/* harmony export */   fromJson: () => (/* binding */ fromJson),\n/* harmony export */   fromJsonString: () => (/* binding */ fromJsonString),\n/* harmony export */   isEnumJson: () => (/* binding */ isEnumJson),\n/* harmony export */   mergeFromJson: () => (/* binding */ mergeFromJson),\n/* harmony export */   mergeFromJsonString: () => (/* binding */ mergeFromJsonString)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./proto-int64.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./create.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js\");\n/* harmony import */ var _reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect/reflect.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js\");\n/* harmony import */ var _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect/error.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/error.js\");\n/* harmony import */ var _reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflect/reflect-check.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect-check.js\");\n/* harmony import */ var _reflect_scalar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reflect/scalar.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\");\n/* harmony import */ var _wire_base64_encoding_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./wire/base64-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/base64-encoding.js\");\n/* harmony import */ var _wkt_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./wkt/index.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js\");\n/* harmony import */ var _wkt_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./wkt/index.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/any.js\");\n/* harmony import */ var _wkt_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./wkt/index.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/struct_pb.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensions.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/extensions.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\n/**\n * Parse a message from a JSON string.\n */\nfunction fromJsonString(schema, json, options) {\n    return fromJson(schema, parseJsonString(json, schema.typeName), options);\n}\n/**\n * Parse a message from a JSON string, merging fields.\n *\n * Repeated fields are appended. Map entries are added, overwriting\n * existing keys.\n *\n * If a message field is already present, it will be merged with the\n * new data.\n */\nfunction mergeFromJsonString(schema, target, json, options) {\n    return mergeFromJson(schema, target, parseJsonString(json, schema.typeName), options);\n}\n/**\n * Parse a message from a JSON value.\n */\nfunction fromJson(schema, json, options) {\n    const msg = (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(schema);\n    try {\n        readMessage(msg, json, makeReadOptions(options));\n    }\n    catch (e) {\n        if ((0,_reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.isFieldError)(e)) {\n            // @ts-expect-error we use the ES2022 error CTOR option \"cause\" for better stack traces\n            throw new Error(`cannot decode ${e.field()} from JSON: ${e.message}`, {\n                cause: e,\n            });\n        }\n        throw e;\n    }\n    return msg.message;\n}\n/**\n * Parse a message from a JSON value, merging fields.\n *\n * Repeated fields are appended. Map entries are added, overwriting\n * existing keys.\n *\n * If a message field is already present, it will be merged with the\n * new data.\n */\nfunction mergeFromJson(schema, target, json, options) {\n    try {\n        readMessage((0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(schema, target), json, makeReadOptions(options));\n    }\n    catch (e) {\n        if ((0,_reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.isFieldError)(e)) {\n            // @ts-expect-error we use the ES2022 error CTOR option \"cause\" for better stack traces\n            throw new Error(`cannot decode ${e.field()} from JSON: ${e.message}`, {\n                cause: e,\n            });\n        }\n        throw e;\n    }\n    return target;\n}\n/**\n * Parses an enum value from JSON.\n */\nfunction enumFromJson(descEnum, json) {\n    const val = readEnum(descEnum, json, false, false);\n    if (val === tokenIgnoredUnknownEnum) {\n        throw new Error(`cannot decode ${descEnum} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    return val;\n}\n/**\n * Is the given value a JSON enum value?\n */\nfunction isEnumJson(descEnum, value) {\n    return undefined !== descEnum.values.find((v) => v.name === value);\n}\nfunction readMessage(msg, json, opts) {\n    var _a;\n    if (tryWktFromJson(msg, json, opts)) {\n        return;\n    }\n    if (json == null || Array.isArray(json) || typeof json != \"object\") {\n        throw new Error(`cannot decode ${msg.desc} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    const oneofSeen = new Map();\n    const jsonNames = new Map();\n    for (const field of msg.desc.fields) {\n        jsonNames.set(field.name, field).set(field.jsonName, field);\n    }\n    for (const [jsonKey, jsonValue] of Object.entries(json)) {\n        const field = jsonNames.get(jsonKey);\n        if (field) {\n            if (field.oneof) {\n                if (jsonValue === null && field.fieldKind == \"scalar\") {\n                    // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                    continue;\n                }\n                const seen = oneofSeen.get(field.oneof);\n                if (seen !== undefined) {\n                    throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field.oneof, `oneof set multiple times by ${seen.name} and ${field.name}`);\n                }\n                oneofSeen.set(field.oneof, field);\n            }\n            readField(msg, field, jsonValue, opts);\n        }\n        else {\n            let extension = undefined;\n            if (jsonKey.startsWith(\"[\") &&\n                jsonKey.endsWith(\"]\") &&\n                // biome-ignore lint/suspicious/noAssignInExpressions: no\n                (extension = (_a = opts.registry) === null || _a === void 0 ? void 0 : _a.getExtension(jsonKey.substring(1, jsonKey.length - 1))) &&\n                extension.extendee.typeName === msg.desc.typeName) {\n                const [container, field, get] = (0,_extensions_js__WEBPACK_IMPORTED_MODULE_3__.createExtensionContainer)(extension);\n                readField(container, field, jsonValue, opts);\n                (0,_extensions_js__WEBPACK_IMPORTED_MODULE_3__.setExtension)(msg.message, extension, get());\n            }\n            if (!extension && !opts.ignoreUnknownFields) {\n                throw new Error(`cannot decode ${msg.desc} from JSON: key \"${jsonKey}\" is unknown`);\n            }\n        }\n    }\n}\nfunction readField(msg, field, json, opts) {\n    switch (field.fieldKind) {\n        case \"scalar\":\n            readScalarField(msg, field, json);\n            break;\n        case \"enum\":\n            readEnumField(msg, field, json, opts);\n            break;\n        case \"message\":\n            readMessageField(msg, field, json, opts);\n            break;\n        case \"list\":\n            readListField(msg.get(field), json, opts);\n            break;\n        case \"map\":\n            readMapField(msg.get(field), json, opts);\n            break;\n    }\n}\nfunction readMapField(map, json, opts) {\n    if (json === null) {\n        return;\n    }\n    const field = map.field();\n    if (typeof json != \"object\" || Array.isArray(json)) {\n        throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, \"expected object, got \" + (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json));\n    }\n    for (const [jsonMapKey, jsonMapValue] of Object.entries(json)) {\n        if (jsonMapValue === null) {\n            throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, \"map value must not be null\");\n        }\n        let value;\n        switch (field.mapKind) {\n            case \"message\":\n                const msgValue = (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(field.message);\n                readMessage(msgValue, jsonMapValue, opts);\n                value = msgValue;\n                break;\n            case \"enum\":\n                value = readEnum(field.enum, jsonMapValue, opts.ignoreUnknownFields, true);\n                if (value === tokenIgnoredUnknownEnum) {\n                    return;\n                }\n                break;\n            case \"scalar\":\n                value = scalarFromJson(field, jsonMapValue, true);\n                break;\n        }\n        const key = mapKeyFromJson(field.mapKey, jsonMapKey);\n        map.set(key, value);\n    }\n}\nfunction readListField(list, json, opts) {\n    if (json === null) {\n        return;\n    }\n    const field = list.field();\n    if (!Array.isArray(json)) {\n        throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, \"expected Array, got \" + (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json));\n    }\n    for (const jsonItem of json) {\n        if (jsonItem === null) {\n            throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, \"list item must not be null\");\n        }\n        switch (field.listKind) {\n            case \"message\":\n                const msgValue = (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(field.message);\n                readMessage(msgValue, jsonItem, opts);\n                list.add(msgValue);\n                break;\n            case \"enum\":\n                const enumValue = readEnum(field.enum, jsonItem, opts.ignoreUnknownFields, true);\n                if (enumValue !== tokenIgnoredUnknownEnum) {\n                    list.add(enumValue);\n                }\n                break;\n            case \"scalar\":\n                list.add(scalarFromJson(field, jsonItem, true));\n                break;\n        }\n    }\n}\nfunction readMessageField(msg, field, json, opts) {\n    if (json === null && field.message.typeName != \"google.protobuf.Value\") {\n        msg.clear(field);\n        return;\n    }\n    const msgValue = msg.isSet(field) ? msg.get(field) : (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(field.message);\n    readMessage(msgValue, json, opts);\n    msg.set(field, msgValue);\n}\nfunction readEnumField(msg, field, json, opts) {\n    const enumValue = readEnum(field.enum, json, opts.ignoreUnknownFields, false);\n    if (enumValue === tokenNull) {\n        msg.clear(field);\n    }\n    else if (enumValue !== tokenIgnoredUnknownEnum) {\n        msg.set(field, enumValue);\n    }\n}\nfunction readScalarField(msg, field, json) {\n    const scalarValue = scalarFromJson(field, json, false);\n    if (scalarValue === tokenNull) {\n        msg.clear(field);\n    }\n    else {\n        msg.set(field, scalarValue);\n    }\n}\nconst tokenIgnoredUnknownEnum = Symbol();\nfunction readEnum(desc, json, ignoreUnknownFields, nullAsZeroValue) {\n    if (json === null) {\n        if (desc.typeName == \"google.protobuf.NullValue\") {\n            return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n        }\n        return nullAsZeroValue ? desc.values[0].number : tokenNull;\n    }\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = desc.values.find((ev) => ev.name === json);\n            if (value !== undefined) {\n                return value.number;\n            }\n            if (ignoreUnknownFields) {\n                return tokenIgnoredUnknownEnum;\n            }\n            break;\n    }\n    throw new Error(`cannot decode ${desc} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n}\nconst tokenNull = Symbol();\nfunction scalarFromJson(field, json, nullAsZeroValue) {\n    if (json === null) {\n        if (nullAsZeroValue) {\n            return (0,_reflect_scalar_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.scalar, false);\n        }\n        return tokenNull;\n    }\n    // int64, sfixed64, sint64, fixed64, uint64: Reflect supports string and number.\n    // string, bool: Supported by reflect.\n    switch (field.scalar) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.DOUBLE:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.FLOAT:\n            if (json === \"NaN\")\n                return NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (typeof json == \"number\") {\n                if (Number.isNaN(json)) {\n                    // NaN must be encoded with string constants\n                    throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, \"unexpected NaN number\");\n                }\n                if (!Number.isFinite(json)) {\n                    // Infinity must be encoded with string constants\n                    throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, \"unexpected infinite number\");\n                }\n                break;\n            }\n            if (typeof json == \"string\") {\n                if (json === \"\") {\n                    // empty string is not a number\n                    break;\n                }\n                if (json.trim().length !== json.length) {\n                    // extra whitespace\n                    break;\n                }\n                const float = Number(json);\n                if (!Number.isFinite(float)) {\n                    // Infinity and NaN must be encoded with string constants\n                    break;\n                }\n                return float;\n            }\n            break;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.SINT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.UINT32:\n            return int32FromJson(json);\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.BYTES:\n            if (typeof json == \"string\") {\n                if (json === \"\") {\n                    return new Uint8Array(0);\n                }\n                try {\n                    return (0,_wire_base64_encoding_js__WEBPACK_IMPORTED_MODULE_6__.base64Decode)(json);\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : String(e);\n                    throw new _reflect_error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, message);\n                }\n            }\n            break;\n    }\n    return json;\n}\n/**\n * Try to parse a JSON value to a map key for the reflect API.\n *\n * Returns the input if the JSON value cannot be converted.\n */\nfunction mapKeyFromJson(type, json) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.BOOL:\n            switch (json) {\n                case \"true\":\n                    return true;\n                case \"false\":\n                    return false;\n            }\n            return json;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.UINT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_5__.ScalarType.SINT32:\n            return int32FromJson(json);\n        default:\n            return json;\n    }\n}\n/**\n * Try to parse a JSON value to a 32-bit integer for the reflect API.\n *\n * Returns the input if the JSON value cannot be converted.\n */\nfunction int32FromJson(json) {\n    if (typeof json == \"string\") {\n        if (json === \"\") {\n            // empty string is not a number\n            return json;\n        }\n        if (json.trim().length !== json.length) {\n            // extra whitespace\n            return json;\n        }\n        const num = Number(json);\n        if (Number.isNaN(num)) {\n            // not a number\n            return json;\n        }\n        return num;\n    }\n    return json;\n}\nfunction parseJsonString(jsonString, typeName) {\n    try {\n        return JSON.parse(jsonString);\n    }\n    catch (e) {\n        const message = e instanceof Error ? e.message : String(e);\n        throw new Error(`cannot decode message ${typeName} from JSON: ${message}`, \n        // @ts-expect-error we use the ES2022 error CTOR option \"cause\" for better stack traces\n        { cause: e });\n    }\n}\nfunction tryWktFromJson(msg, jsonValue, opts) {\n    if (!msg.desc.typeName.startsWith(\"google.protobuf.\")) {\n        return false;\n    }\n    switch (msg.desc.typeName) {\n        case \"google.protobuf.Any\":\n            anyFromJson(msg.message, jsonValue, opts);\n            return true;\n        case \"google.protobuf.Timestamp\":\n            timestampFromJson(msg.message, jsonValue);\n            return true;\n        case \"google.protobuf.Duration\":\n            durationFromJson(msg.message, jsonValue);\n            return true;\n        case \"google.protobuf.FieldMask\":\n            fieldMaskFromJson(msg.message, jsonValue);\n            return true;\n        case \"google.protobuf.Struct\":\n            structFromJson(msg.message, jsonValue);\n            return true;\n        case \"google.protobuf.Value\":\n            valueFromJson(msg.message, jsonValue);\n            return true;\n        case \"google.protobuf.ListValue\":\n            listValueFromJson(msg.message, jsonValue);\n            return true;\n        default:\n            if ((0,_wkt_index_js__WEBPACK_IMPORTED_MODULE_7__.isWrapperDesc)(msg.desc)) {\n                const valueField = msg.desc.fields[0];\n                if (jsonValue === null) {\n                    msg.clear(valueField);\n                }\n                else {\n                    msg.set(valueField, scalarFromJson(valueField, jsonValue, true));\n                }\n                return true;\n            }\n            return false;\n    }\n}\nfunction anyFromJson(any, json, opts) {\n    var _a;\n    if (json === null || Array.isArray(json) || typeof json != \"object\") {\n        throw new Error(`cannot decode message ${any.$typeName} from JSON: expected object but got ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    if (Object.keys(json).length == 0) {\n        return;\n    }\n    const typeUrl = json[\"@type\"];\n    if (typeof typeUrl != \"string\" || typeUrl == \"\") {\n        throw new Error(`cannot decode message ${any.$typeName} from JSON: \"@type\" is empty`);\n    }\n    const typeName = typeUrl.includes(\"/\")\n        ? typeUrl.substring(typeUrl.lastIndexOf(\"/\") + 1)\n        : typeUrl;\n    if (!typeName.length) {\n        throw new Error(`cannot decode message ${any.$typeName} from JSON: \"@type\" is invalid`);\n    }\n    const desc = (_a = opts.registry) === null || _a === void 0 ? void 0 : _a.getMessage(typeName);\n    if (!desc) {\n        throw new Error(`cannot decode message ${any.$typeName} from JSON: ${typeUrl} is not in the type registry`);\n    }\n    const msg = (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(desc);\n    if (typeName.startsWith(\"google.protobuf.\") &&\n        Object.prototype.hasOwnProperty.call(json, \"value\")) {\n        const value = json.value;\n        readMessage(msg, value, opts);\n    }\n    else {\n        const copy = Object.assign({}, json);\n        // biome-ignore lint/performance/noDelete: <explanation>\n        delete copy[\"@type\"];\n        readMessage(msg, copy, opts);\n    }\n    (0,_wkt_index_js__WEBPACK_IMPORTED_MODULE_8__.anyPack)(msg.desc, msg.message, any);\n}\nfunction timestampFromJson(timestamp, json) {\n    if (typeof json !== \"string\") {\n        throw new Error(`cannot decode message ${timestamp.$typeName} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]{1,9}))?(?:Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n    if (!matches) {\n        throw new Error(`cannot decode message ${timestamp.$typeName} from JSON: invalid RFC 3339 string`);\n    }\n    const ms = Date.parse(\n    // biome-ignore format: want this to read well\n    matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n    if (Number.isNaN(ms)) {\n        throw new Error(`cannot decode message ${timestamp.$typeName} from JSON: invalid RFC 3339 string`);\n    }\n    if (ms < Date.parse(\"0001-01-01T00:00:00Z\") ||\n        ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n        throw new Error(`cannot decode message ${timestamp.$typeName} from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n    }\n    timestamp.seconds = _proto_int64_js__WEBPACK_IMPORTED_MODULE_9__.protoInt64.parse(ms / 1000);\n    timestamp.nanos = 0;\n    if (matches[7]) {\n        timestamp.nanos =\n            parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) -\n                1000000000;\n    }\n}\nfunction durationFromJson(duration, json) {\n    if (typeof json !== \"string\") {\n        throw new Error(`cannot decode message ${duration.$typeName} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    const match = json.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n    if (match === null) {\n        throw new Error(`cannot decode message ${duration.$typeName} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    const longSeconds = Number(match[1]);\n    if (longSeconds > 315576000000 || longSeconds < -315576000000) {\n        throw new Error(`cannot decode message ${duration.$typeName} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    duration.seconds = _proto_int64_js__WEBPACK_IMPORTED_MODULE_9__.protoInt64.parse(longSeconds);\n    if (typeof match[2] !== \"string\") {\n        return;\n    }\n    const nanosStr = match[2] + \"0\".repeat(9 - match[2].length);\n    duration.nanos = parseInt(nanosStr);\n    if (longSeconds < 0 || Object.is(longSeconds, -0)) {\n        duration.nanos = -duration.nanos;\n    }\n}\nfunction fieldMaskFromJson(fieldMask, json) {\n    if (typeof json !== \"string\") {\n        throw new Error(`cannot decode message ${fieldMask.$typeName} from JSON: ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    if (json === \"\") {\n        return;\n    }\n    function camelToSnake(str) {\n        if (str.includes(\"_\")) {\n            throw new Error(`cannot decode message ${fieldMask.$typeName} from JSON: path names must be lowerCamelCase`);\n        }\n        const sc = str.replace(/[A-Z]/g, (letter) => \"_\" + letter.toLowerCase());\n        return sc[0] === \"_\" ? sc.substring(1) : sc;\n    }\n    fieldMask.paths = json.split(\",\").map(camelToSnake);\n}\nfunction structFromJson(struct, json) {\n    if (typeof json != \"object\" || json == null || Array.isArray(json)) {\n        throw new Error(`cannot decode message ${struct.$typeName} from JSON ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    for (const [k, v] of Object.entries(json)) {\n        const parsedV = (0,_create_js__WEBPACK_IMPORTED_MODULE_10__.create)(_wkt_index_js__WEBPACK_IMPORTED_MODULE_11__.ValueSchema);\n        valueFromJson(parsedV, v);\n        struct.fields[k] = parsedV;\n    }\n}\nfunction valueFromJson(value, json) {\n    switch (typeof json) {\n        case \"number\":\n            value.kind = { case: \"numberValue\", value: json };\n            break;\n        case \"string\":\n            value.kind = { case: \"stringValue\", value: json };\n            break;\n        case \"boolean\":\n            value.kind = { case: \"boolValue\", value: json };\n            break;\n        case \"object\":\n            if (json === null) {\n                value.kind = { case: \"nullValue\", value: _wkt_index_js__WEBPACK_IMPORTED_MODULE_11__.NullValue.NULL_VALUE };\n            }\n            else if (Array.isArray(json)) {\n                const listValue = (0,_create_js__WEBPACK_IMPORTED_MODULE_10__.create)(_wkt_index_js__WEBPACK_IMPORTED_MODULE_11__.ListValueSchema);\n                listValueFromJson(listValue, json);\n                value.kind = { case: \"listValue\", value: listValue };\n            }\n            else {\n                const struct = (0,_create_js__WEBPACK_IMPORTED_MODULE_10__.create)(_wkt_index_js__WEBPACK_IMPORTED_MODULE_11__.StructSchema);\n                structFromJson(struct, json);\n                value.kind = { case: \"structValue\", value: struct };\n            }\n            break;\n        default:\n            throw new Error(`cannot decode message ${value.$typeName} from JSON ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    return value;\n}\nfunction listValueFromJson(listValue, json) {\n    if (!Array.isArray(json)) {\n        throw new Error(`cannot decode message ${listValue.$typeName} from JSON ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(json)}`);\n    }\n    for (const e of json) {\n        const value = (0,_create_js__WEBPACK_IMPORTED_MODULE_10__.create)(_wkt_index_js__WEBPACK_IMPORTED_MODULE_11__.ValueSchema);\n        valueFromJson(value, e);\n        listValue.values.push(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-json.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/is-message.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/is-message.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMessage: () => (/* binding */ isMessage)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Determine whether the given `arg` is a message.\n * If `desc` is set, determine whether `arg` is this specific message.\n */\nfunction isMessage(arg, schema) {\n    const isMessage = arg !== null &&\n        typeof arg == \"object\" &&\n        \"$typeName\" in arg &&\n        typeof arg.$typeName == \"string\";\n    if (!isMessage) {\n        return false;\n    }\n    if (schema === undefined) {\n        return true;\n    }\n    return schema.typeName === arg.$typeName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2lzLW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHV0by9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGJ1ZmJ1aWxkK3Byb3RvYnVmQDIuNy4wL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vaXMtbWVzc2FnZS5qcz80NmI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIERldGVybWluZSB3aGV0aGVyIHRoZSBnaXZlbiBgYXJnYCBpcyBhIG1lc3NhZ2UuXG4gKiBJZiBgZGVzY2AgaXMgc2V0LCBkZXRlcm1pbmUgd2hldGhlciBgYXJnYCBpcyB0aGlzIHNwZWNpZmljIG1lc3NhZ2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc01lc3NhZ2UoYXJnLCBzY2hlbWEpIHtcbiAgICBjb25zdCBpc01lc3NhZ2UgPSBhcmcgIT09IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIGFyZyA9PSBcIm9iamVjdFwiICYmXG4gICAgICAgIFwiJHR5cGVOYW1lXCIgaW4gYXJnICYmXG4gICAgICAgIHR5cGVvZiBhcmcuJHR5cGVOYW1lID09IFwic3RyaW5nXCI7XG4gICAgaWYgKCFpc01lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoc2NoZW1hID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWEudHlwZU5hbWUgPT09IGFyZy4kdHlwZU5hbWU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/is-message.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js":
/*!*****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoInt64: () => (/* binding */ protoInt64)\n/* harmony export */ });\n/* harmony import */ var _wire_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wire/varint.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Int64Support for the current environment.\n */\nconst protoInt64 = /*@__PURE__*/ makeInt64Support();\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\");\n        const MAX = BigInt(\"9223372036854775807\");\n        const UMIN = BigInt(\"0\");\n        const UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`invalid int64: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`invalid uint64: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return (0,_wire_varint_js__WEBPACK_IMPORTED_MODULE_0__.int64FromString)(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return (0,_wire_varint_js__WEBPACK_IMPORTED_MODULE_0__.int64FromString)(value);\n        },\n        dec(lo, hi) {\n            return (0,_wire_varint_js__WEBPACK_IMPORTED_MODULE_0__.int64ToString)(lo, hi);\n        },\n        uDec(lo, hi) {\n            return (0,_wire_varint_js__WEBPACK_IMPORTED_MODULE_0__.uInt64ToString)(lo, hi);\n        },\n    };\n}\nfunction assertInt64String(value) {\n    if (!/^-?[0-9]+$/.test(value)) {\n        throw new Error(\"invalid int64: \" + value);\n    }\n}\nfunction assertUInt64String(value) {\n    if (!/^[0-9]+$/.test(value)) {\n        throw new Error(\"invalid uint64: \" + value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWludDY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUY7QUFDbkY7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdURBQXVELE1BQU07QUFDN0Q7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQWU7QUFDbEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQWU7QUFDbEMsU0FBUztBQUNUO0FBQ0EsbUJBQW1CLDhEQUFhO0FBQ2hDLFNBQVM7QUFDVDtBQUNBLG1CQUFtQiwrREFBYztBQUNqQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcm90by1pbnQ2NC5qcz84ZjlkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBpbnQ2NEZyb21TdHJpbmcsIGludDY0VG9TdHJpbmcsIHVJbnQ2NFRvU3RyaW5nLCB9IGZyb20gXCIuL3dpcmUvdmFyaW50LmpzXCI7XG4vKipcbiAqIEludDY0U3VwcG9ydCBmb3IgdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBwcm90b0ludDY0ID0gLypAX19QVVJFX18qLyBtYWtlSW50NjRTdXBwb3J0KCk7XG5mdW5jdGlvbiBtYWtlSW50NjRTdXBwb3J0KCkge1xuICAgIGNvbnN0IGR2ID0gbmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcig4KSk7XG4gICAgLy8gbm90ZSB0aGF0IFNhZmFyaSAxNCBpbXBsZW1lbnRzIEJpZ0ludCwgYnV0IG5vdCB0aGUgRGF0YVZpZXcgbWV0aG9kc1xuICAgIGNvbnN0IG9rID0gdHlwZW9mIEJpZ0ludCA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIHR5cGVvZiBkdi5nZXRCaWdJbnQ2NCA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIHR5cGVvZiBkdi5nZXRCaWdVaW50NjQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgZHYuc2V0QmlnSW50NjQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgZHYuc2V0QmlnVWludDY0ID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgKHR5cGVvZiBwcm9jZXNzICE9IFwib2JqZWN0XCIgfHxcbiAgICAgICAgICAgIHR5cGVvZiBwcm9jZXNzLmVudiAhPSBcIm9iamVjdFwiIHx8XG4gICAgICAgICAgICBwcm9jZXNzLmVudi5CVUZfQklHSU5UX0RJU0FCTEUgIT09IFwiMVwiKTtcbiAgICBpZiAob2spIHtcbiAgICAgICAgY29uc3QgTUlOID0gQmlnSW50KFwiLTkyMjMzNzIwMzY4NTQ3NzU4MDhcIik7XG4gICAgICAgIGNvbnN0IE1BWCA9IEJpZ0ludChcIjkyMjMzNzIwMzY4NTQ3NzU4MDdcIik7XG4gICAgICAgIGNvbnN0IFVNSU4gPSBCaWdJbnQoXCIwXCIpO1xuICAgICAgICBjb25zdCBVTUFYID0gQmlnSW50KFwiMTg0NDY3NDQwNzM3MDk1NTE2MTVcIik7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB6ZXJvOiBCaWdJbnQoMCksXG4gICAgICAgICAgICBzdXBwb3J0ZWQ6IHRydWUsXG4gICAgICAgICAgICBwYXJzZSh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJpID0gdHlwZW9mIHZhbHVlID09IFwiYmlnaW50XCIgPyB2YWx1ZSA6IEJpZ0ludCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGJpID4gTUFYIHx8IGJpIDwgTUlOKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBpbnQ2NDogJHt2YWx1ZX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVQYXJzZSh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJpID0gdHlwZW9mIHZhbHVlID09IFwiYmlnaW50XCIgPyB2YWx1ZSA6IEJpZ0ludCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGJpID4gVU1BWCB8fCBiaSA8IFVNSU4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIHVpbnQ2NDogJHt2YWx1ZX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVuYyh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGR2LnNldEJpZ0ludDY0KDAsIHRoaXMucGFyc2UodmFsdWUpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBsbzogZHYuZ2V0SW50MzIoMCwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgIGhpOiBkdi5nZXRJbnQzMig0LCB0cnVlKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVFbmModmFsdWUpIHtcbiAgICAgICAgICAgICAgICBkdi5zZXRCaWdJbnQ2NCgwLCB0aGlzLnVQYXJzZSh2YWx1ZSksIHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGxvOiBkdi5nZXRJbnQzMigwLCB0cnVlKSxcbiAgICAgICAgICAgICAgICAgICAgaGk6IGR2LmdldEludDMyKDQsIHRydWUpLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVjKGxvLCBoaSkge1xuICAgICAgICAgICAgICAgIGR2LnNldEludDMyKDAsIGxvLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBkdi5zZXRJbnQzMig0LCBoaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGR2LmdldEJpZ0ludDY0KDAsIHRydWUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVEZWMobG8sIGhpKSB7XG4gICAgICAgICAgICAgICAgZHYuc2V0SW50MzIoMCwgbG8sIHRydWUpO1xuICAgICAgICAgICAgICAgIGR2LnNldEludDMyKDQsIGhpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHYuZ2V0QmlnVWludDY0KDAsIHRydWUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgemVybzogXCIwXCIsXG4gICAgICAgIHN1cHBvcnRlZDogZmFsc2UsXG4gICAgICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NlcnRJbnQ2NFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIHVQYXJzZSh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW5jKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NlcnRJbnQ2NFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gaW50NjRGcm9tU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgdUVuYyh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiBpbnQ2NEZyb21TdHJpbmcodmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBkZWMobG8sIGhpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW50NjRUb1N0cmluZyhsbywgaGkpO1xuICAgICAgICB9LFxuICAgICAgICB1RGVjKGxvLCBoaSkge1xuICAgICAgICAgICAgcmV0dXJuIHVJbnQ2NFRvU3RyaW5nKGxvLCBoaSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGFzc2VydEludDY0U3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKCEvXi0/WzAtOV0rJC8udGVzdCh2YWx1ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBpbnQ2NDogXCIgKyB2YWx1ZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKCEvXlswLTldKyQvLnRlc3QodmFsdWUpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgdWludDY0OiBcIiArIHZhbHVlKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/error.js":
/*!*******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/error.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FieldError: () => (/* binding */ FieldError),\n/* harmony export */   isFieldError: () => (/* binding */ isFieldError)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst errorNames = [\n    \"FieldValueInvalidError\",\n    \"FieldListRangeError\",\n    \"ForeignFieldError\",\n];\nclass FieldError extends Error {\n    constructor(fieldOrOneof, message, name = \"FieldValueInvalidError\") {\n        super(message);\n        this.name = name;\n        this.field = () => fieldOrOneof;\n    }\n}\nfunction isFieldError(arg) {\n    return (arg instanceof Error &&\n        errorNames.includes(arg.name) &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3QvZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHV0by9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGJ1ZmJ1aWxkK3Byb3RvYnVmQDIuNy4wL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcmVmbGVjdC9lcnJvci5qcz81Y2NiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5jb25zdCBlcnJvck5hbWVzID0gW1xuICAgIFwiRmllbGRWYWx1ZUludmFsaWRFcnJvclwiLFxuICAgIFwiRmllbGRMaXN0UmFuZ2VFcnJvclwiLFxuICAgIFwiRm9yZWlnbkZpZWxkRXJyb3JcIixcbl07XG5leHBvcnQgY2xhc3MgRmllbGRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZE9yT25lb2YsIG1lc3NhZ2UsIG5hbWUgPSBcIkZpZWxkVmFsdWVJbnZhbGlkRXJyb3JcIikge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5maWVsZCA9ICgpID0+IGZpZWxkT3JPbmVvZjtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNGaWVsZEVycm9yKGFyZykge1xuICAgIHJldHVybiAoYXJnIGluc3RhbmNlb2YgRXJyb3IgJiZcbiAgICAgICAgZXJyb3JOYW1lcy5pbmNsdWRlcyhhcmcubmFtZSkgJiZcbiAgICAgICAgXCJmaWVsZFwiIGluIGFyZyAmJlxuICAgICAgICB0eXBlb2YgYXJnLmZpZWxkID09IFwiZnVuY3Rpb25cIik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/error.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/guard.js":
/*!*******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/guard.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isOneofADT: () => (/* binding */ isOneofADT),\n/* harmony export */   isReflectList: () => (/* binding */ isReflectList),\n/* harmony export */   isReflectMap: () => (/* binding */ isReflectMap),\n/* harmony export */   isReflectMessage: () => (/* binding */ isReflectMessage)\n/* harmony export */ });\n/* harmony import */ var _unsafe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unsafe.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction isObject(arg) {\n    return arg !== null && typeof arg == \"object\" && !Array.isArray(arg);\n}\nfunction isOneofADT(arg) {\n    return (arg !== null &&\n        typeof arg == \"object\" &&\n        \"case\" in arg &&\n        ((typeof arg.case == \"string\" && \"value\" in arg && arg.value != null) ||\n            (arg.case === undefined &&\n                (!(\"value\" in arg) || arg.value === undefined))));\n}\nfunction isReflectList(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        _unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal in arg &&\n        \"add\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field;\n            const b = arg.field();\n            return (a.listKind == b.listKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nfunction isReflectMap(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        _unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal in arg &&\n        \"has\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field, b = arg.field();\n            return (a.mapKey === b.mapKey &&\n                a.mapKind == b.mapKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nfunction isReflectMessage(arg, messageDesc) {\n    return (isObject(arg) &&\n        _unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal in arg &&\n        \"desc\" in arg &&\n        isObject(arg.desc) &&\n        arg.desc.kind === \"message\" &&\n        (messageDesc === undefined || arg.desc.typeName == messageDesc.typeName));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3QvZ3VhcmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEM7QUFDbkM7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9yZWZsZWN0L2d1YXJkLmpzP2VkMjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IHVuc2FmZUxvY2FsIH0gZnJvbSBcIi4vdW5zYWZlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gICAgcmV0dXJuIGFyZyAhPT0gbnVsbCAmJiB0eXBlb2YgYXJnID09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkoYXJnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09uZW9mQURUKGFyZykge1xuICAgIHJldHVybiAoYXJnICE9PSBudWxsICYmXG4gICAgICAgIHR5cGVvZiBhcmcgPT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBcImNhc2VcIiBpbiBhcmcgJiZcbiAgICAgICAgKCh0eXBlb2YgYXJnLmNhc2UgPT0gXCJzdHJpbmdcIiAmJiBcInZhbHVlXCIgaW4gYXJnICYmIGFyZy52YWx1ZSAhPSBudWxsKSB8fFxuICAgICAgICAgICAgKGFyZy5jYXNlID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoIShcInZhbHVlXCIgaW4gYXJnKSB8fCBhcmcudmFsdWUgPT09IHVuZGVmaW5lZCkpKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZWZsZWN0TGlzdChhcmcsIGZpZWxkKSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIGlmIChpc09iamVjdChhcmcpICYmXG4gICAgICAgIHVuc2FmZUxvY2FsIGluIGFyZyAmJlxuICAgICAgICBcImFkZFwiIGluIGFyZyAmJlxuICAgICAgICBcImZpZWxkXCIgaW4gYXJnICYmXG4gICAgICAgIHR5cGVvZiBhcmcuZmllbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGlmIChmaWVsZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBhID0gZmllbGQ7XG4gICAgICAgICAgICBjb25zdCBiID0gYXJnLmZpZWxkKCk7XG4gICAgICAgICAgICByZXR1cm4gKGEubGlzdEtpbmQgPT0gYi5saXN0S2luZCAmJlxuICAgICAgICAgICAgICAgIGEuc2NhbGFyID09PSBiLnNjYWxhciAmJlxuICAgICAgICAgICAgICAgICgoX2EgPSBhLm1lc3NhZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50eXBlTmFtZSkgPT09ICgoX2IgPSBiLm1lc3NhZ2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi50eXBlTmFtZSkgJiZcbiAgICAgICAgICAgICAgICAoKF9jID0gYS5lbnVtKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MudHlwZU5hbWUpID09PSAoKF9kID0gYi5lbnVtKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QudHlwZU5hbWUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVmbGVjdE1hcChhcmcsIGZpZWxkKSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIGlmIChpc09iamVjdChhcmcpICYmXG4gICAgICAgIHVuc2FmZUxvY2FsIGluIGFyZyAmJlxuICAgICAgICBcImhhc1wiIGluIGFyZyAmJlxuICAgICAgICBcImZpZWxkXCIgaW4gYXJnICYmXG4gICAgICAgIHR5cGVvZiBhcmcuZmllbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGlmIChmaWVsZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBhID0gZmllbGQsIGIgPSBhcmcuZmllbGQoKTtcbiAgICAgICAgICAgIHJldHVybiAoYS5tYXBLZXkgPT09IGIubWFwS2V5ICYmXG4gICAgICAgICAgICAgICAgYS5tYXBLaW5kID09IGIubWFwS2luZCAmJlxuICAgICAgICAgICAgICAgIGEuc2NhbGFyID09PSBiLnNjYWxhciAmJlxuICAgICAgICAgICAgICAgICgoX2EgPSBhLm1lc3NhZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50eXBlTmFtZSkgPT09ICgoX2IgPSBiLm1lc3NhZ2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi50eXBlTmFtZSkgJiZcbiAgICAgICAgICAgICAgICAoKF9jID0gYS5lbnVtKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MudHlwZU5hbWUpID09PSAoKF9kID0gYi5lbnVtKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QudHlwZU5hbWUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVmbGVjdE1lc3NhZ2UoYXJnLCBtZXNzYWdlRGVzYykge1xuICAgIHJldHVybiAoaXNPYmplY3QoYXJnKSAmJlxuICAgICAgICB1bnNhZmVMb2NhbCBpbiBhcmcgJiZcbiAgICAgICAgXCJkZXNjXCIgaW4gYXJnICYmXG4gICAgICAgIGlzT2JqZWN0KGFyZy5kZXNjKSAmJlxuICAgICAgICBhcmcuZGVzYy5raW5kID09PSBcIm1lc3NhZ2VcIiAmJlxuICAgICAgICAobWVzc2FnZURlc2MgPT09IHVuZGVmaW5lZCB8fCBhcmcuZGVzYy50eXBlTmFtZSA9PSBtZXNzYWdlRGVzYy50eXBlTmFtZSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/guard.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/names.js":
/*!*******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/names.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoCamelCase: () => (/* binding */ protoCamelCase),\n/* harmony export */   qualifiedName: () => (/* binding */ qualifiedName),\n/* harmony export */   safeObjectProperty: () => (/* binding */ safeObjectProperty)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Return a fully-qualified name for a Protobuf descriptor.\n * For a file descriptor, return the original file path.\n *\n * See https://protobuf.com/docs/language-spec#fully-qualified-names\n */\nfunction qualifiedName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n        case \"oneof\":\n        case \"rpc\":\n            return desc.parent.typeName + \".\" + desc.name;\n        case \"enum_value\": {\n            const p = desc.parent.parent\n                ? desc.parent.parent.typeName\n                : desc.parent.file.proto.package;\n            return p + (p.length > 0 ? \".\" : \"\") + desc.name;\n        }\n        case \"service\":\n        case \"message\":\n        case \"enum\":\n        case \"extension\":\n            return desc.typeName;\n        case \"file\":\n            return desc.proto.name;\n    }\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Escapes names that are reserved for ECMAScript built-in object properties.\n *\n * Also see safeIdentifier() from @bufbuild/protoplugin.\n */\nfunction safeObjectProperty(name) {\n    return reservedObjectProperties.has(name) ? name + \"$\" : name;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3QvbmFtZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9yZWZsZWN0L25hbWVzLmpzPzNiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogUmV0dXJuIGEgZnVsbHktcXVhbGlmaWVkIG5hbWUgZm9yIGEgUHJvdG9idWYgZGVzY3JpcHRvci5cbiAqIEZvciBhIGZpbGUgZGVzY3JpcHRvciwgcmV0dXJuIHRoZSBvcmlnaW5hbCBmaWxlIHBhdGguXG4gKlxuICogU2VlIGh0dHBzOi8vcHJvdG9idWYuY29tL2RvY3MvbGFuZ3VhZ2Utc3BlYyNmdWxseS1xdWFsaWZpZWQtbmFtZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1YWxpZmllZE5hbWUoZGVzYykge1xuICAgIHN3aXRjaCAoZGVzYy5raW5kKSB7XG4gICAgICAgIGNhc2UgXCJmaWVsZFwiOlxuICAgICAgICBjYXNlIFwib25lb2ZcIjpcbiAgICAgICAgY2FzZSBcInJwY1wiOlxuICAgICAgICAgICAgcmV0dXJuIGRlc2MucGFyZW50LnR5cGVOYW1lICsgXCIuXCIgKyBkZXNjLm5hbWU7XG4gICAgICAgIGNhc2UgXCJlbnVtX3ZhbHVlXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHAgPSBkZXNjLnBhcmVudC5wYXJlbnRcbiAgICAgICAgICAgICAgICA/IGRlc2MucGFyZW50LnBhcmVudC50eXBlTmFtZVxuICAgICAgICAgICAgICAgIDogZGVzYy5wYXJlbnQuZmlsZS5wcm90by5wYWNrYWdlO1xuICAgICAgICAgICAgcmV0dXJuIHAgKyAocC5sZW5ndGggPiAwID8gXCIuXCIgOiBcIlwiKSArIGRlc2MubmFtZTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwic2VydmljZVwiOlxuICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICBjYXNlIFwiZXh0ZW5zaW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gZGVzYy50eXBlTmFtZTtcbiAgICAgICAgY2FzZSBcImZpbGVcIjpcbiAgICAgICAgICAgIHJldHVybiBkZXNjLnByb3RvLm5hbWU7XG4gICAgfVxufVxuLyoqXG4gKiBDb252ZXJ0cyBzbmFrZV9jYXNlIHRvIHByb3RvQ2FtZWxDYXNlIGFjY29yZGluZyB0byB0aGUgY29udmVudGlvblxuICogdXNlZCBieSBwcm90b2MgdG8gY29udmVydCBhIGZpZWxkIG5hbWUgdG8gYSBKU09OIG5hbWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm90b0NhbWVsQ2FzZShzbmFrZUNhc2UpIHtcbiAgICBsZXQgY2FwTmV4dCA9IGZhbHNlO1xuICAgIGNvbnN0IGIgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNuYWtlQ2FzZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgYyA9IHNuYWtlQ2FzZS5jaGFyQXQoaSk7XG4gICAgICAgIHN3aXRjaCAoYykge1xuICAgICAgICAgICAgY2FzZSBcIl9cIjpcbiAgICAgICAgICAgICAgICBjYXBOZXh0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCIwXCI6XG4gICAgICAgICAgICBjYXNlIFwiMVwiOlxuICAgICAgICAgICAgY2FzZSBcIjJcIjpcbiAgICAgICAgICAgIGNhc2UgXCIzXCI6XG4gICAgICAgICAgICBjYXNlIFwiNFwiOlxuICAgICAgICAgICAgY2FzZSBcIjVcIjpcbiAgICAgICAgICAgIGNhc2UgXCI2XCI6XG4gICAgICAgICAgICBjYXNlIFwiN1wiOlxuICAgICAgICAgICAgY2FzZSBcIjhcIjpcbiAgICAgICAgICAgIGNhc2UgXCI5XCI6XG4gICAgICAgICAgICAgICAgYi5wdXNoKGMpO1xuICAgICAgICAgICAgICAgIGNhcE5leHQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKGNhcE5leHQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FwTmV4dCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBjID0gYy50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBiLnB1c2goYyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGIuam9pbihcIlwiKTtcbn1cbi8qKlxuICogTmFtZXMgdGhhdCBjYW5ub3QgYmUgdXNlZCBmb3Igb2JqZWN0IHByb3BlcnRpZXMgYmVjYXVzZSB0aGV5IGFyZSByZXNlcnZlZFxuICogYnkgYnVpbHQtaW4gSmF2YVNjcmlwdCBwcm9wZXJ0aWVzLlxuICovXG5jb25zdCByZXNlcnZlZE9iamVjdFByb3BlcnRpZXMgPSBuZXcgU2V0KFtcbiAgICAvLyBuYW1lcyByZXNlcnZlZCBieSBKYXZhU2NyaXB0XG4gICAgXCJjb25zdHJ1Y3RvclwiLFxuICAgIFwidG9TdHJpbmdcIixcbiAgICBcInRvSlNPTlwiLFxuICAgIFwidmFsdWVPZlwiLFxuXSk7XG4vKipcbiAqIEVzY2FwZXMgbmFtZXMgdGhhdCBhcmUgcmVzZXJ2ZWQgZm9yIEVDTUFTY3JpcHQgYnVpbHQtaW4gb2JqZWN0IHByb3BlcnRpZXMuXG4gKlxuICogQWxzbyBzZWUgc2FmZUlkZW50aWZpZXIoKSBmcm9tIEBidWZidWlsZC9wcm90b3BsdWdpbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVPYmplY3RQcm9wZXJ0eShuYW1lKSB7XG4gICAgcmV0dXJuIHJlc2VydmVkT2JqZWN0UHJvcGVydGllcy5oYXMobmFtZSkgPyBuYW1lICsgXCIkXCIgOiBuYW1lO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/names.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/nested-types.js":
/*!**************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/nested-types.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nestedTypes: () => (/* binding */ nestedTypes),\n/* harmony export */   parentTypes: () => (/* binding */ parentTypes),\n/* harmony export */   usedTypes: () => (/* binding */ usedTypes)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Iterate over all types - enumerations, extensions, services, messages -\n * and enumerations, extensions and messages nested in messages.\n */\nfunction* nestedTypes(desc) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const message of desc.messages) {\n                yield message;\n                yield* nestedTypes(message);\n            }\n            yield* desc.enums;\n            yield* desc.services;\n            yield* desc.extensions;\n            break;\n        case \"message\":\n            for (const message of desc.nestedMessages) {\n                yield message;\n                yield* nestedTypes(message);\n            }\n            yield* desc.nestedEnums;\n            yield* desc.nestedExtensions;\n            break;\n    }\n}\n/**\n * Iterate over types referenced by fields of the given message.\n *\n * For example:\n *\n * ```proto\n * syntax=\"proto3\";\n *\n * message Example {\n *   Msg singular = 1;\n *   repeated Level list = 2;\n * }\n *\n * message Msg {}\n *\n * enum Level {\n *   LEVEL_UNSPECIFIED = 0;\n * }\n * ```\n *\n * The message Example references the message Msg, and the enum Level.\n */\nfunction usedTypes(descMessage) {\n    return usedTypesInternal(descMessage, new Set());\n}\nfunction* usedTypesInternal(descMessage, seen) {\n    var _a, _b;\n    for (const field of descMessage.fields) {\n        const ref = (_b = (_a = field.enum) !== null && _a !== void 0 ? _a : field.message) !== null && _b !== void 0 ? _b : undefined;\n        if (!ref || seen.has(ref.typeName)) {\n            continue;\n        }\n        seen.add(ref.typeName);\n        yield ref;\n        if (ref.kind == \"message\") {\n            yield* usedTypesInternal(ref, seen);\n        }\n    }\n}\n/**\n * Returns the ancestors of a given Protobuf element, up to the file.\n */\nfunction parentTypes(desc) {\n    const parents = [];\n    while (desc.kind !== \"file\") {\n        const p = parent(desc);\n        desc = p;\n        parents.push(p);\n    }\n    return parents;\n}\nfunction parent(desc) {\n    var _a;\n    switch (desc.kind) {\n        case \"enum_value\":\n        case \"field\":\n        case \"oneof\":\n        case \"rpc\":\n            return desc.parent;\n        case \"service\":\n            return desc.file;\n        case \"extension\":\n        case \"enum\":\n        case \"message\":\n            return (_a = desc.parent) !== null && _a !== void 0 ? _a : desc.file;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3QvbmVzdGVkLXR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHV0by9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGJ1ZmJ1aWxkK3Byb3RvYnVmQDIuNy4wL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcmVmbGVjdC9uZXN0ZWQtdHlwZXMuanM/ZjBjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI1IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHR5cGVzIC0gZW51bWVyYXRpb25zLCBleHRlbnNpb25zLCBzZXJ2aWNlcywgbWVzc2FnZXMgLVxuICogYW5kIGVudW1lcmF0aW9ucywgZXh0ZW5zaW9ucyBhbmQgbWVzc2FnZXMgbmVzdGVkIGluIG1lc3NhZ2VzLlxuICovXG5leHBvcnQgZnVuY3Rpb24qIG5lc3RlZFR5cGVzKGRlc2MpIHtcbiAgICBzd2l0Y2ggKGRlc2Mua2luZCkge1xuICAgICAgICBjYXNlIFwiZmlsZVwiOlxuICAgICAgICAgICAgZm9yIChjb25zdCBtZXNzYWdlIG9mIGRlc2MubWVzc2FnZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBtZXNzYWdlO1xuICAgICAgICAgICAgICAgIHlpZWxkKiBuZXN0ZWRUeXBlcyhtZXNzYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkKiBkZXNjLmVudW1zO1xuICAgICAgICAgICAgeWllbGQqIGRlc2Muc2VydmljZXM7XG4gICAgICAgICAgICB5aWVsZCogZGVzYy5leHRlbnNpb25zO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJtZXNzYWdlXCI6XG4gICAgICAgICAgICBmb3IgKGNvbnN0IG1lc3NhZ2Ugb2YgZGVzYy5uZXN0ZWRNZXNzYWdlcykge1xuICAgICAgICAgICAgICAgIHlpZWxkIG1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgeWllbGQqIG5lc3RlZFR5cGVzKG1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeWllbGQqIGRlc2MubmVzdGVkRW51bXM7XG4gICAgICAgICAgICB5aWVsZCogZGVzYy5uZXN0ZWRFeHRlbnNpb25zO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufVxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgdHlwZXMgcmVmZXJlbmNlZCBieSBmaWVsZHMgb2YgdGhlIGdpdmVuIG1lc3NhZ2UuXG4gKlxuICogRm9yIGV4YW1wbGU6XG4gKlxuICogYGBgcHJvdG9cbiAqIHN5bnRheD1cInByb3RvM1wiO1xuICpcbiAqIG1lc3NhZ2UgRXhhbXBsZSB7XG4gKiAgIE1zZyBzaW5ndWxhciA9IDE7XG4gKiAgIHJlcGVhdGVkIExldmVsIGxpc3QgPSAyO1xuICogfVxuICpcbiAqIG1lc3NhZ2UgTXNnIHt9XG4gKlxuICogZW51bSBMZXZlbCB7XG4gKiAgIExFVkVMX1VOU1BFQ0lGSUVEID0gMDtcbiAqIH1cbiAqIGBgYFxuICpcbiAqIFRoZSBtZXNzYWdlIEV4YW1wbGUgcmVmZXJlbmNlcyB0aGUgbWVzc2FnZSBNc2csIGFuZCB0aGUgZW51bSBMZXZlbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZWRUeXBlcyhkZXNjTWVzc2FnZSkge1xuICAgIHJldHVybiB1c2VkVHlwZXNJbnRlcm5hbChkZXNjTWVzc2FnZSwgbmV3IFNldCgpKTtcbn1cbmZ1bmN0aW9uKiB1c2VkVHlwZXNJbnRlcm5hbChkZXNjTWVzc2FnZSwgc2Vlbikge1xuICAgIHZhciBfYSwgX2I7XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiBkZXNjTWVzc2FnZS5maWVsZHMpIHtcbiAgICAgICAgY29uc3QgcmVmID0gKF9iID0gKF9hID0gZmllbGQuZW51bSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZmllbGQubWVzc2FnZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogdW5kZWZpbmVkO1xuICAgICAgICBpZiAoIXJlZiB8fCBzZWVuLmhhcyhyZWYudHlwZU5hbWUpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBzZWVuLmFkZChyZWYudHlwZU5hbWUpO1xuICAgICAgICB5aWVsZCByZWY7XG4gICAgICAgIGlmIChyZWYua2luZCA9PSBcIm1lc3NhZ2VcIikge1xuICAgICAgICAgICAgeWllbGQqIHVzZWRUeXBlc0ludGVybmFsKHJlZiwgc2Vlbik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGFuY2VzdG9ycyBvZiBhIGdpdmVuIFByb3RvYnVmIGVsZW1lbnQsIHVwIHRvIHRoZSBmaWxlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyZW50VHlwZXMoZGVzYykge1xuICAgIGNvbnN0IHBhcmVudHMgPSBbXTtcbiAgICB3aGlsZSAoZGVzYy5raW5kICE9PSBcImZpbGVcIikge1xuICAgICAgICBjb25zdCBwID0gcGFyZW50KGRlc2MpO1xuICAgICAgICBkZXNjID0gcDtcbiAgICAgICAgcGFyZW50cy5wdXNoKHApO1xuICAgIH1cbiAgICByZXR1cm4gcGFyZW50cztcbn1cbmZ1bmN0aW9uIHBhcmVudChkZXNjKSB7XG4gICAgdmFyIF9hO1xuICAgIHN3aXRjaCAoZGVzYy5raW5kKSB7XG4gICAgICAgIGNhc2UgXCJlbnVtX3ZhbHVlXCI6XG4gICAgICAgIGNhc2UgXCJmaWVsZFwiOlxuICAgICAgICBjYXNlIFwib25lb2ZcIjpcbiAgICAgICAgY2FzZSBcInJwY1wiOlxuICAgICAgICAgICAgcmV0dXJuIGRlc2MucGFyZW50O1xuICAgICAgICBjYXNlIFwic2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIGRlc2MuZmlsZTtcbiAgICAgICAgY2FzZSBcImV4dGVuc2lvblwiOlxuICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIChfYSA9IGRlc2MucGFyZW50KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBkZXNjLmZpbGU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/nested-types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect-check.js":
/*!***************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect-check.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkField: () => (/* binding */ checkField),\n/* harmony export */   checkListItem: () => (/* binding */ checkListItem),\n/* harmony export */   checkMapEntry: () => (/* binding */ checkMapEntry),\n/* harmony export */   formatVal: () => (/* binding */ formatVal)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../is-message.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/error.js\");\n/* harmony import */ var _guard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guard.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/guard.js\");\n/* harmony import */ var _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../wire/binary-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js\");\n/* harmony import */ var _wire_text_encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../wire/text-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-encoding.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../proto-int64.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n/**\n * Check whether the given field value is valid for the reflect API.\n */\nfunction checkField(field, value) {\n    const check = field.fieldKind == \"list\"\n        ? (0,_guard_js__WEBPACK_IMPORTED_MODULE_0__.isReflectList)(value, field)\n        : field.fieldKind == \"map\"\n            ? (0,_guard_js__WEBPACK_IMPORTED_MODULE_0__.isReflectMap)(value, field)\n            : checkSingular(field, value);\n    if (check === true) {\n        return undefined;\n    }\n    let reason;\n    switch (field.fieldKind) {\n        case \"list\":\n            reason = `expected ${formatReflectList(field)}, got ${formatVal(value)}`;\n            break;\n        case \"map\":\n            reason = `expected ${formatReflectMap(field)}, got ${formatVal(value)}`;\n            break;\n        default: {\n            reason = reasonSingular(field, value, check);\n        }\n    }\n    return new _error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, reason);\n}\n/**\n * Check whether the given list item is valid for the reflect API.\n */\nfunction checkListItem(field, index, value) {\n    const check = checkSingular(field, value);\n    if (check !== true) {\n        return new _error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, `list item #${index + 1}: ${reasonSingular(field, value, check)}`);\n    }\n    return undefined;\n}\n/**\n * Check whether the given map key and value are valid for the reflect API.\n */\nfunction checkMapEntry(field, key, value) {\n    const checkKey = checkScalarValue(key, field.mapKey);\n    if (checkKey !== true) {\n        return new _error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, `invalid map key: ${reasonSingular({ scalar: field.mapKey }, key, checkKey)}`);\n    }\n    const checkVal = checkSingular(field, value);\n    if (checkVal !== true) {\n        return new _error_js__WEBPACK_IMPORTED_MODULE_1__.FieldError(field, `map entry ${formatVal(key)}: ${reasonSingular(field, value, checkVal)}`);\n    }\n    return undefined;\n}\nfunction checkSingular(field, value) {\n    if (field.scalar !== undefined) {\n        return checkScalarValue(value, field.scalar);\n    }\n    if (field.enum !== undefined) {\n        if (field.enum.open) {\n            return Number.isInteger(value);\n        }\n        return field.enum.values.some((v) => v.number === value);\n    }\n    return (0,_guard_js__WEBPACK_IMPORTED_MODULE_0__.isReflectMessage)(value, field.message);\n}\nfunction checkScalarValue(value, scalar) {\n    switch (scalar) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n            return typeof value == \"number\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            if (typeof value != \"number\") {\n                return false;\n            }\n            if (Number.isNaN(value) || !Number.isFinite(value)) {\n                return true;\n            }\n            if (value > _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_3__.FLOAT32_MAX || value < _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_3__.FLOAT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            // signed\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_3__.INT32_MAX || value < _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_3__.INT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n            // unsigned\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_3__.UINT32_MAX || value < 0) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            return typeof value == \"boolean\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            if (typeof value != \"string\") {\n                return false;\n            }\n            return (0,_wire_text_encoding_js__WEBPACK_IMPORTED_MODULE_4__.getTextEncoding)().checkUtf8(value) || \"invalid UTF8\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n            return value instanceof Uint8Array;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT64:\n            // signed\n            if (typeof value == \"bigint\" ||\n                typeof value == \"number\" ||\n                (typeof value == \"string\" && value.length > 0)) {\n                try {\n                    _proto_int64_js__WEBPACK_IMPORTED_MODULE_5__.protoInt64.parse(value);\n                    return true;\n                }\n                catch (_) {\n                    return `${value} out of range`;\n                }\n            }\n            return false;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64:\n            // unsigned\n            if (typeof value == \"bigint\" ||\n                typeof value == \"number\" ||\n                (typeof value == \"string\" && value.length > 0)) {\n                try {\n                    _proto_int64_js__WEBPACK_IMPORTED_MODULE_5__.protoInt64.uParse(value);\n                    return true;\n                }\n                catch (_) {\n                    return `${value} out of range`;\n                }\n            }\n            return false;\n    }\n}\nfunction reasonSingular(field, val, details) {\n    details =\n        typeof details == \"string\" ? `: ${details}` : `, got ${formatVal(val)}`;\n    if (field.scalar !== undefined) {\n        return `expected ${scalarTypeDescription(field.scalar)}` + details;\n    }\n    if (field.enum !== undefined) {\n        return `expected ${field.enum.toString()}` + details;\n    }\n    return `expected ${formatReflectMessage(field.message)}` + details;\n}\nfunction formatVal(val) {\n    switch (typeof val) {\n        case \"object\":\n            if (val === null) {\n                return \"null\";\n            }\n            if (val instanceof Uint8Array) {\n                return `Uint8Array(${val.length})`;\n            }\n            if (Array.isArray(val)) {\n                return `Array(${val.length})`;\n            }\n            if ((0,_guard_js__WEBPACK_IMPORTED_MODULE_0__.isReflectList)(val)) {\n                return formatReflectList(val.field());\n            }\n            if ((0,_guard_js__WEBPACK_IMPORTED_MODULE_0__.isReflectMap)(val)) {\n                return formatReflectMap(val.field());\n            }\n            if ((0,_guard_js__WEBPACK_IMPORTED_MODULE_0__.isReflectMessage)(val)) {\n                return formatReflectMessage(val.desc);\n            }\n            if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_6__.isMessage)(val)) {\n                return `message ${val.$typeName}`;\n            }\n            return \"object\";\n        case \"string\":\n            return val.length > 30 ? \"string\" : `\"${val.split('\"').join('\\\\\"')}\"`;\n        case \"boolean\":\n            return String(val);\n        case \"number\":\n            return String(val);\n        case \"bigint\":\n            return String(val) + \"n\";\n        default:\n            // \"symbol\" | \"undefined\" | \"object\" | \"function\"\n            return typeof val;\n    }\n}\nfunction formatReflectMessage(desc) {\n    return `ReflectMessage (${desc.typeName})`;\n}\nfunction formatReflectList(field) {\n    switch (field.listKind) {\n        case \"message\":\n            return `ReflectList (${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectList (${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectList (${_descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[field.scalar]})`;\n    }\n}\nfunction formatReflectMap(field) {\n    switch (field.mapKind) {\n        case \"message\":\n            return `ReflectMap (${_descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[field.mapKey]}, ${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectMap (${_descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[field.mapKey]}, ${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectMap (${_descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[field.mapKey]}, ${_descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[field.scalar]})`;\n    }\n}\nfunction scalarTypeDescription(scalar) {\n    switch (scalar) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            return \"string\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            return \"boolean\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            return \"bigint (int64)\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n            return \"bigint (uint64)\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n            return \"Uint8Array\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n            return \"number (float64)\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            return \"number (float32)\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n            return \"number (uint32)\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            return \"number (int32)\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect-check.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js":
/*!*********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reflect: () => (/* binding */ reflect),\n/* harmony export */   reflectList: () => (/* binding */ reflectList),\n/* harmony export */   reflectMap: () => (/* binding */ reflectMap)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _reflect_check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reflect-check.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect-check.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/error.js\");\n/* harmony import */ var _unsafe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unsafe.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js\");\n/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../create.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js\");\n/* harmony import */ var _wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../wkt/wrappers.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scalar.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../proto-int64.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _guard_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./guard.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/guard.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n/**\n * Create a ReflectMessage.\n */\nfunction reflect(messageDesc, message, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMessageImpl(messageDesc, message, check);\n}\nclass ReflectMessageImpl {\n    get sortedFields() {\n        var _a;\n        return ((_a = this._sortedFields) !== null && _a !== void 0 ? _a : \n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        (this._sortedFields = this.desc.fields\n            .concat()\n            .sort((a, b) => a.number - b.number)));\n    }\n    constructor(messageDesc, message, check = true) {\n        this.lists = new Map();\n        this.maps = new Map();\n        this.check = check;\n        this.desc = messageDesc;\n        this.message = this[_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal] = message !== null && message !== void 0 ? message : (0,_create_js__WEBPACK_IMPORTED_MODULE_1__.create)(messageDesc);\n        this.fields = messageDesc.fields;\n        this.oneofs = messageDesc.oneofs;\n        this.members = messageDesc.members;\n    }\n    findNumber(number) {\n        if (!this._fieldsByNumber) {\n            this._fieldsByNumber = new Map(this.desc.fields.map((f) => [f.number, f]));\n        }\n        return this._fieldsByNumber.get(number);\n    }\n    oneofCase(oneof) {\n        assertOwn(this.message, oneof);\n        return (0,_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeOneofCase)(this.message, oneof);\n    }\n    isSet(field) {\n        assertOwn(this.message, field);\n        return (0,_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeIsSet)(this.message, field);\n    }\n    clear(field) {\n        assertOwn(this.message, field);\n        (0,_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeClear)(this.message, field);\n    }\n    get(field) {\n        assertOwn(this.message, field);\n        const value = (0,_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeGet)(this.message, field);\n        switch (field.fieldKind) {\n            case \"list\":\n                // eslint-disable-next-line no-case-declarations\n                let list = this.lists.get(field);\n                if (!list || list[_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal] !== value) {\n                    this.lists.set(field, \n                    // biome-ignore lint/suspicious/noAssignInExpressions: no\n                    (list = new ReflectListImpl(field, value, this.check)));\n                }\n                return list;\n            case \"map\":\n                let map = this.maps.get(field);\n                if (!map || map[_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal] !== value) {\n                    this.maps.set(field, \n                    // biome-ignore lint/suspicious/noAssignInExpressions: no\n                    (map = new ReflectMapImpl(field, value, this.check)));\n                }\n                return map;\n            case \"message\":\n                return messageToReflect(field, value, this.check);\n            case \"scalar\":\n                return (value === undefined\n                    ? (0,_scalar_js__WEBPACK_IMPORTED_MODULE_2__.scalarZeroValue)(field.scalar, false)\n                    : longToReflect(field, value));\n            case \"enum\":\n                return (value !== null && value !== void 0 ? value : field.enum.values[0].number);\n        }\n    }\n    set(field, value) {\n        assertOwn(this.message, field);\n        if (this.check) {\n            const err = (0,_reflect_check_js__WEBPACK_IMPORTED_MODULE_3__.checkField)(field, value);\n            if (err) {\n                throw err;\n            }\n        }\n        let local;\n        if (field.fieldKind == \"message\") {\n            local = messageToLocal(field, value);\n        }\n        else if ((0,_guard_js__WEBPACK_IMPORTED_MODULE_4__.isReflectMap)(value) || (0,_guard_js__WEBPACK_IMPORTED_MODULE_4__.isReflectList)(value)) {\n            local = value[_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal];\n        }\n        else {\n            local = longToLocal(field, value);\n        }\n        (0,_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeSet)(this.message, field, local);\n    }\n    getUnknown() {\n        return this.message.$unknown;\n    }\n    setUnknown(value) {\n        this.message.$unknown = value;\n    }\n}\nfunction assertOwn(owner, member) {\n    if (member.parent.typeName !== owner.$typeName) {\n        throw new _error_js__WEBPACK_IMPORTED_MODULE_5__.FieldError(member, `cannot use ${member.toString()} with message ${owner.$typeName}`, \"ForeignFieldError\");\n    }\n}\n/**\n * Create a ReflectList.\n */\nfunction reflectList(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectListImpl(field, unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : [], check);\n}\nclass ReflectListImpl {\n    field() {\n        return this._field;\n    }\n    get size() {\n        return this._arr.length;\n    }\n    constructor(field, unsafeInput, check) {\n        this._field = field;\n        this._arr = this[_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal] = unsafeInput;\n        this.check = check;\n    }\n    get(index) {\n        const item = this._arr[index];\n        return item === undefined\n            ? undefined\n            : listItemToReflect(this._field, item, this.check);\n    }\n    set(index, item) {\n        if (index < 0 || index >= this._arr.length) {\n            throw new _error_js__WEBPACK_IMPORTED_MODULE_5__.FieldError(this._field, `list item #${index + 1}: out of range`);\n        }\n        if (this.check) {\n            const err = (0,_reflect_check_js__WEBPACK_IMPORTED_MODULE_3__.checkListItem)(this._field, index, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr[index] = listItemToLocal(this._field, item);\n    }\n    add(item) {\n        if (this.check) {\n            const err = (0,_reflect_check_js__WEBPACK_IMPORTED_MODULE_3__.checkListItem)(this._field, this._arr.length, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr.push(listItemToLocal(this._field, item));\n        return undefined;\n    }\n    clear() {\n        this._arr.splice(0, this._arr.length);\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n    keys() {\n        return this._arr.keys();\n    }\n    *values() {\n        for (const item of this._arr) {\n            yield listItemToReflect(this._field, item, this.check);\n        }\n    }\n    *entries() {\n        for (let i = 0; i < this._arr.length; i++) {\n            yield [i, listItemToReflect(this._field, this._arr[i], this.check)];\n        }\n    }\n}\n/**\n * Create a ReflectMap.\n */\nfunction reflectMap(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMapImpl(field, unsafeInput, check);\n}\nclass ReflectMapImpl {\n    constructor(field, unsafeInput, check = true) {\n        this.obj = this[_unsafe_js__WEBPACK_IMPORTED_MODULE_0__.unsafeLocal] = unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : {};\n        this.check = check;\n        this._field = field;\n    }\n    field() {\n        return this._field;\n    }\n    set(key, value) {\n        if (this.check) {\n            const err = (0,_reflect_check_js__WEBPACK_IMPORTED_MODULE_3__.checkMapEntry)(this._field, key, value);\n            if (err) {\n                throw err;\n            }\n        }\n        this.obj[mapKeyToLocal(key)] = mapValueToLocal(this._field, value);\n        return this;\n    }\n    delete(key) {\n        const k = mapKeyToLocal(key);\n        const has = Object.prototype.hasOwnProperty.call(this.obj, k);\n        if (has) {\n            delete this.obj[k];\n        }\n        return has;\n    }\n    clear() {\n        for (const key of Object.keys(this.obj)) {\n            delete this.obj[key];\n        }\n    }\n    get(key) {\n        let val = this.obj[mapKeyToLocal(key)];\n        if (val !== undefined) {\n            val = mapValueToReflect(this._field, val, this.check);\n        }\n        return val;\n    }\n    has(key) {\n        return Object.prototype.hasOwnProperty.call(this.obj, mapKeyToLocal(key));\n    }\n    *keys() {\n        for (const objKey of Object.keys(this.obj)) {\n            yield mapKeyToReflect(objKey, this._field.mapKey);\n        }\n    }\n    *entries() {\n        for (const objEntry of Object.entries(this.obj)) {\n            yield [\n                mapKeyToReflect(objEntry[0], this._field.mapKey),\n                mapValueToReflect(this._field, objEntry[1], this.check),\n            ];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    get size() {\n        return Object.keys(this.obj).length;\n    }\n    *values() {\n        for (const val of Object.values(this.obj)) {\n            yield mapValueToReflect(this._field, val, this.check);\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        for (const mapEntry of this.entries()) {\n            callbackfn.call(thisArg, mapEntry[1], mapEntry[0], this);\n        }\n    }\n}\nfunction messageToLocal(field, value) {\n    if (!(0,_guard_js__WEBPACK_IMPORTED_MODULE_4__.isReflectMessage)(value)) {\n        return value;\n    }\n    if ((0,_wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.isWrapper)(value.message) &&\n        !field.oneof &&\n        field.fieldKind == \"message\") {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return value.message.value;\n    }\n    if (value.desc.typeName == \"google.protobuf.Struct\" &&\n        field.parent.typeName != \"google.protobuf.Value\") {\n        // google.protobuf.Struct is represented with JsonObject when used in a\n        // field, except when used in google.protobuf.Value.\n        return wktStructToLocal(value.message);\n    }\n    return value.message;\n}\nfunction messageToReflect(field, value, check) {\n    if (value !== undefined) {\n        if ((0,_wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.isWrapperDesc)(field.message) &&\n            !field.oneof &&\n            field.fieldKind == \"message\") {\n            // Types from google/protobuf/wrappers.proto are unwrapped when used in\n            // a singular field that is not part of a oneof group.\n            value = {\n                $typeName: field.message.typeName,\n                value: longToReflect(field.message.fields[0], value),\n            };\n        }\n        else if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName != \"google.protobuf.Value\" &&\n            (0,_guard_js__WEBPACK_IMPORTED_MODULE_4__.isObject)(value)) {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            value = wktStructToReflect(value);\n        }\n    }\n    return new ReflectMessageImpl(field.message, value, check);\n}\nfunction listItemToLocal(field, value) {\n    if (field.listKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction listItemToReflect(field, value, check) {\n    if (field.listKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return longToReflect(field, value);\n}\nfunction mapValueToLocal(field, value) {\n    if (field.mapKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction mapValueToReflect(field, value, check) {\n    if (field.mapKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return value;\n}\nfunction mapKeyToLocal(key) {\n    return typeof key == \"string\" || typeof key == \"number\" ? key : String(key);\n}\n/**\n * Converts a map key (any scalar value except float, double, or bytes) from its\n * representation in a message (string or number, the only possible object key\n * types) to the closest possible type in ECMAScript.\n */\nfunction mapKeyToReflect(key, type) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.STRING:\n            return key;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.UINT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.SINT32: {\n            const n = Number.parseInt(key);\n            if (Number.isFinite(n)) {\n                return n;\n            }\n            break;\n        }\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.BOOL:\n            switch (key) {\n                case \"true\":\n                    return true;\n                case \"false\":\n                    return false;\n            }\n            break;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.UINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.FIXED64:\n            try {\n                return _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__.protoInt64.uParse(key);\n            }\n            catch (_a) {\n                //\n            }\n            break;\n        default:\n            // INT64, SFIXED64, SINT64\n            try {\n                return _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__.protoInt64.parse(key);\n            }\n            catch (_b) {\n                //\n            }\n            break;\n    }\n    return key;\n}\nfunction longToReflect(field, value) {\n    switch (field.scalar) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.SINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__.protoInt64.parse(value);\n            }\n            break;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.UINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__.protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction longToLocal(field, value) {\n    switch (field.scalar) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.SINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__.protoInt64.parse(value);\n            }\n            break;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_7__.ScalarType.UINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = _proto_int64_js__WEBPACK_IMPORTED_MODULE_8__.protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction wktStructToReflect(json) {\n    const struct = {\n        $typeName: \"google.protobuf.Struct\",\n        fields: {},\n    };\n    if ((0,_guard_js__WEBPACK_IMPORTED_MODULE_4__.isObject)(json)) {\n        for (const [k, v] of Object.entries(json)) {\n            struct.fields[k] = wktValueToReflect(v);\n        }\n    }\n    return struct;\n}\nfunction wktStructToLocal(val) {\n    const json = {};\n    for (const [k, v] of Object.entries(val.fields)) {\n        json[k] = wktValueToLocal(v);\n    }\n    return json;\n}\nfunction wktValueToLocal(val) {\n    switch (val.kind.case) {\n        case \"structValue\":\n            return wktStructToLocal(val.kind.value);\n        case \"listValue\":\n            return val.kind.value.values.map(wktValueToLocal);\n        case \"nullValue\":\n        case undefined:\n            return null;\n        default:\n            return val.kind.value;\n    }\n}\nfunction wktValueToReflect(json) {\n    const value = {\n        $typeName: \"google.protobuf.Value\",\n        kind: { case: undefined },\n    };\n    switch (typeof json) {\n        case \"number\":\n            value.kind = { case: \"numberValue\", value: json };\n            break;\n        case \"string\":\n            value.kind = { case: \"stringValue\", value: json };\n            break;\n        case \"boolean\":\n            value.kind = { case: \"boolValue\", value: json };\n            break;\n        case \"object\":\n            if (json === null) {\n                const nullValue = 0;\n                value.kind = { case: \"nullValue\", value: nullValue };\n            }\n            else if (Array.isArray(json)) {\n                const listValue = {\n                    $typeName: \"google.protobuf.ListValue\",\n                    values: [],\n                };\n                if (Array.isArray(json)) {\n                    for (const e of json) {\n                        listValue.values.push(wktValueToReflect(e));\n                    }\n                }\n                value.kind = {\n                    case: \"listValue\",\n                    value: listValue,\n                };\n            }\n            else {\n                value.kind = {\n                    case: \"structValue\",\n                    value: wktStructToReflect(json),\n                };\n            }\n            break;\n    }\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isScalarZeroValue: () => (/* binding */ isScalarZeroValue),\n/* harmony export */   scalarEquals: () => (/* binding */ scalarEquals),\n/* harmony export */   scalarZeroValue: () => (/* binding */ scalarZeroValue)\n/* harmony export */ });\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto-int64.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nfunction scalarZeroValue(type, longAsString) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return \"\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return false;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FLOAT:\n            return 0.0;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            return (longAsString ? \"0\" : _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.zero);\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return new Uint8Array(0);\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nfunction isScalarZeroValue(type, value) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return value === false;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return value === \"\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3Qvc2NhbGFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0M7QUFDQTtBQUMvQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdURBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGNBQWM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsdURBQVU7QUFDdkIsYUFBYSx1REFBVTtBQUN2QixhQUFhLHVEQUFVO0FBQ3ZCLGFBQWEsdURBQVU7QUFDdkIsYUFBYSx1REFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLHVEQUFVO0FBQ3ZCO0FBQ0EsYUFBYSx1REFBVTtBQUN2QjtBQUNBLGFBQWEsdURBQVU7QUFDdkIsYUFBYSx1REFBVTtBQUN2QjtBQUNBLGFBQWEsdURBQVU7QUFDdkIsYUFBYSx1REFBVTtBQUN2QixhQUFhLHVEQUFVO0FBQ3ZCLGFBQWEsdURBQVU7QUFDdkIsYUFBYSx1REFBVTtBQUN2Qix5Q0FBeUMsdURBQVU7QUFDbkQsYUFBYSx1REFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsdURBQVU7QUFDdkI7QUFDQSxhQUFhLHVEQUFVO0FBQ3ZCO0FBQ0EsYUFBYSx1REFBVTtBQUN2QjtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3Qvc2NhbGFyLmpzPzVhNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IHByb3RvSW50NjQgfSBmcm9tIFwiLi4vcHJvdG8taW50NjQuanNcIjtcbmltcG9ydCB7IFNjYWxhclR5cGUgfSBmcm9tIFwiLi4vZGVzY3JpcHRvcnMuanNcIjtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJvdGggc2NhbGFyIHZhbHVlcyBhcmUgZXF1YWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzY2FsYXJFcXVhbHModHlwZSwgYSwgYikge1xuICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgIC8vIFRoaXMgY29ycmVjdGx5IG1hdGNoZXMgZXF1YWwgdmFsdWVzIGV4Y2VwdCBCWVRFUyBhbmQgKHBvc3NpYmx5KSA2NC1iaXQgaW50ZWdlcnMuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBTcGVjaWFsIGNhc2UgQllURVMgLSB3ZSBuZWVkIHRvIGNvbXBhcmUgZWFjaCBieXRlIGluZGl2aWR1YWxseVxuICAgIGlmICh0eXBlID09IFNjYWxhclR5cGUuQllURVMpIHtcbiAgICAgICAgaWYgKCEoYSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHx8ICEoYiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIFNwZWNpYWwgY2FzZSA2NC1iaXQgaW50ZWdlcnMgLSB3ZSBzdXBwb3J0IG51bWJlciwgc3RyaW5nIGFuZCBiaWdpbnQgcmVwcmVzZW50YXRpb24uXG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5VSU5UNjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5GSVhFRDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuSU5UNjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5TRklYRUQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlNJTlQ2NDpcbiAgICAgICAgICAgIC8vIExvb3NlIGNvbXBhcmlzb24gd2lsbCBtYXRjaCBiZXR3ZWVuIDBuLCAwIGFuZCBcIjBcIi5cbiAgICAgICAgICAgIHJldHVybiBhID09IGI7XG4gICAgfVxuICAgIC8vIEFueXRoaW5nIHRoYXQgaGFzbid0IGJlZW4gY2F1Z2h0IGJ5IHN0cmljdCBjb21wYXJpc29uIG9yIHNwZWNpYWwgY2FzZWRcbiAgICAvLyBCWVRFUyBhbmQgNjQtYml0IGludGVnZXJzIGlzIG5vdCBlcXVhbC5cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHplcm8gdmFsdWUgZm9yIHRoZSBnaXZlbiBzY2FsYXIgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNjYWxhclplcm9WYWx1ZSh0eXBlLCBsb25nQXNTdHJpbmcpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlNUUklORzpcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuQk9PTDpcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkRPVUJMRTpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkZMT0FUOlxuICAgICAgICAgICAgcmV0dXJuIDAuMDtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLklOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuVUlOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0ZJWEVENjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5GSVhFRDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0lOVDY0OlxuICAgICAgICAgICAgcmV0dXJuIChsb25nQXNTdHJpbmcgPyBcIjBcIiA6IHByb3RvSW50NjQuemVybyk7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5CWVRFUzpcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheSgwKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIC8vIEhhbmRsZXMgSU5UMzIsIFVJTlQzMiwgU0lOVDMyLCBGSVhFRDMyLCBTRklYRUQzMi5cbiAgICAgICAgICAgIC8vIFdlIGRvIG5vdCB1c2UgaW5kaXZpZHVhbCBjYXNlcyB0byBzYXZlIGEgZmV3IGJ5dGVzIGNvZGUgc2l6ZS5cbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgIH1cbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGZvciBhIHplcm8tdmFsdWUuIEZvciBleGFtcGxlLCBhbiBpbnRlZ2VyIGhhcyB0aGUgemVyby12YWx1ZSBgMGAsXG4gKiBhIGJvb2xlYW4gaXMgYGZhbHNlYCwgYSBzdHJpbmcgaXMgYFwiXCJgLCBhbmQgYnl0ZXMgaXMgYW4gZW1wdHkgVWludDhBcnJheS5cbiAqXG4gKiBJbiBwcm90bzMsIHplcm8tdmFsdWVzIGFyZSBub3Qgd3JpdHRlbiB0byB0aGUgd2lyZSwgdW5sZXNzIHRoZSBmaWVsZCBpc1xuICogb3B0aW9uYWwgb3IgcmVwZWF0ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NjYWxhclplcm9WYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuQk9PTDpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gZmFsc2U7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5TVFJJTkc6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPT09IFwiXCI7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5CWVRFUzpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgIXZhbHVlLmJ5dGVMZW5ndGg7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPT0gMDsgLy8gTG9vc2UgY29tcGFyaXNvbiBtYXRjaGVzIDBuLCAwIGFuZCBcIjBcIlxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unsafeClear: () => (/* binding */ unsafeClear),\n/* harmony export */   unsafeGet: () => (/* binding */ unsafeGet),\n/* harmony export */   unsafeIsSet: () => (/* binding */ unsafeIsSet),\n/* harmony export */   unsafeIsSetExplicit: () => (/* binding */ unsafeIsSetExplicit),\n/* harmony export */   unsafeLocal: () => (/* binding */ unsafeLocal),\n/* harmony export */   unsafeOneofCase: () => (/* binding */ unsafeOneofCase),\n/* harmony export */   unsafeSet: () => (/* binding */ unsafeSet)\n/* harmony export */ });\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scalar.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/scalar.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\nconst unsafeLocal = Symbol.for(\"reflect unsafe local\");\n/**\n * Return the selected field of a oneof group.\n *\n * @private\n */\nfunction unsafeOneofCase(\n// biome-ignore lint/suspicious/noExplicitAny: `any` is the best choice for dynamic access\ntarget, oneof) {\n    const c = target[oneof.localName].case;\n    if (c === undefined) {\n        return c;\n    }\n    return oneof.fields.find((f) => f.localName === c);\n}\n/**\n * Returns true if the field is set.\n *\n * @private\n */\nfunction unsafeIsSet(\n// biome-ignore lint/suspicious/noExplicitAny: `any` is the best choice for dynamic access\ntarget, field) {\n    const name = field.localName;\n    if (field.oneof) {\n        return target[field.oneof.localName].case === name;\n    }\n    if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3).\n        return (target[name] !== undefined &&\n            Object.prototype.hasOwnProperty.call(target, name));\n    }\n    switch (field.fieldKind) {\n        case \"list\":\n            return target[name].length > 0;\n        case \"map\":\n            return Object.keys(target[name]).length > 0;\n        case \"scalar\":\n            return !(0,_scalar_js__WEBPACK_IMPORTED_MODULE_0__.isScalarZeroValue)(field.scalar, target[name]);\n        case \"enum\":\n            return target[name] !== field.enum.values[0].number;\n    }\n    throw new Error(\"message field with implicit presence\");\n}\n/**\n * Returns true if the field is set, but only for singular fields with explicit\n * presence (proto2).\n *\n * @private\n */\nfunction unsafeIsSetExplicit(target, localName) {\n    return (Object.prototype.hasOwnProperty.call(target, localName) &&\n        target[localName] !== undefined);\n}\n/**\n * Return a field value, respecting oneof groups.\n *\n * @private\n */\nfunction unsafeGet(target, field) {\n    if (field.oneof) {\n        const oneof = target[field.oneof.localName];\n        if (oneof.case === field.localName) {\n            return oneof.value;\n        }\n        return undefined;\n    }\n    return target[field.localName];\n}\n/**\n * Set a field value, respecting oneof groups.\n *\n * @private\n */\nfunction unsafeSet(target, field, value) {\n    if (field.oneof) {\n        target[field.oneof.localName] = {\n            case: field.localName,\n            value: value,\n        };\n    }\n    else {\n        target[field.localName] = value;\n    }\n}\n/**\n * Resets the field, so that unsafeIsSet() will return false.\n *\n * @private\n */\nfunction unsafeClear(\n// biome-ignore lint/suspicious/noExplicitAny: `any` is the best choice for dynamic access\ntarget, field) {\n    const name = field.localName;\n    if (field.oneof) {\n        const oneofLocalName = field.oneof.localName;\n        if (target[oneofLocalName].case === name) {\n            target[oneofLocalName] = { case: undefined };\n        }\n    }\n    else if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3). By deleting their own\n        // property, the field is reset.\n        delete target[name];\n    }\n    else {\n        switch (field.fieldKind) {\n            case \"map\":\n                target[name] = {};\n                break;\n            case \"list\":\n                target[name] = [];\n                break;\n            case \"enum\":\n                target[name] = field.enum.values[0].number;\n                break;\n            case \"scalar\":\n                target[name] = (0,_scalar_js__WEBPACK_IMPORTED_MODULE_0__.scalarZeroValue)(field.scalar, field.longAsString);\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3JlZmxlY3QvdW5zYWZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUU7QUFDakU7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2REFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiwyREFBZTtBQUM5QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHV0by9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGJ1ZmJ1aWxkK3Byb3RvYnVmQDIuNy4wL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcmVmbGVjdC91bnNhZmUuanM/ODA5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI1IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgaXNTY2FsYXJaZXJvVmFsdWUsIHNjYWxhclplcm9WYWx1ZSB9IGZyb20gXCIuL3NjYWxhci5qc1wiO1xuLy8gYm9vdHN0cmFwLWluamVjdCBnb29nbGUucHJvdG9idWYuRmVhdHVyZVNldC5GaWVsZFByZXNlbmNlLklNUExJQ0lUOiBjb25zdCAkbmFtZTogRmVhdHVyZVNldF9GaWVsZFByZXNlbmNlLiRsb2NhbE5hbWUgPSAkbnVtYmVyO1xuY29uc3QgSU1QTElDSVQgPSAyO1xuZXhwb3J0IGNvbnN0IHVuc2FmZUxvY2FsID0gU3ltYm9sLmZvcihcInJlZmxlY3QgdW5zYWZlIGxvY2FsXCIpO1xuLyoqXG4gKiBSZXR1cm4gdGhlIHNlbGVjdGVkIGZpZWxkIG9mIGEgb25lb2YgZ3JvdXAuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZU9uZW9mQ2FzZShcbi8vIGJpb21lLWlnbm9yZSBsaW50L3N1c3BpY2lvdXMvbm9FeHBsaWNpdEFueTogYGFueWAgaXMgdGhlIGJlc3QgY2hvaWNlIGZvciBkeW5hbWljIGFjY2Vzc1xudGFyZ2V0LCBvbmVvZikge1xuICAgIGNvbnN0IGMgPSB0YXJnZXRbb25lb2YubG9jYWxOYW1lXS5jYXNlO1xuICAgIGlmIChjID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGM7XG4gICAgfVxuICAgIHJldHVybiBvbmVvZi5maWVsZHMuZmluZCgoZikgPT4gZi5sb2NhbE5hbWUgPT09IGMpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZpZWxkIGlzIHNldC5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5zYWZlSXNTZXQoXG4vLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IGBhbnlgIGlzIHRoZSBiZXN0IGNob2ljZSBmb3IgZHluYW1pYyBhY2Nlc3NcbnRhcmdldCwgZmllbGQpIHtcbiAgICBjb25zdCBuYW1lID0gZmllbGQubG9jYWxOYW1lO1xuICAgIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W2ZpZWxkLm9uZW9mLmxvY2FsTmFtZV0uY2FzZSA9PT0gbmFtZTtcbiAgICB9XG4gICAgaWYgKGZpZWxkLnByZXNlbmNlICE9IElNUExJQ0lUKSB7XG4gICAgICAgIC8vIEZpZWxkcyB3aXRoIGV4cGxpY2l0IHByZXNlbmNlIGhhdmUgcHJvcGVydGllcyBvbiB0aGUgcHJvdG90eXBlIGNoYWluXG4gICAgICAgIC8vIGZvciBkZWZhdWx0IC8gemVybyB2YWx1ZXMgKGV4Y2VwdCBmb3IgcHJvdG8zKS5cbiAgICAgICAgcmV0dXJuICh0YXJnZXRbbmFtZV0gIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwgbmFtZSkpO1xuICAgIH1cbiAgICBzd2l0Y2ggKGZpZWxkLmZpZWxkS2luZCkge1xuICAgICAgICBjYXNlIFwibGlzdFwiOlxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtuYW1lXS5sZW5ndGggPiAwO1xuICAgICAgICBjYXNlIFwibWFwXCI6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGFyZ2V0W25hbWVdKS5sZW5ndGggPiAwO1xuICAgICAgICBjYXNlIFwic2NhbGFyXCI6XG4gICAgICAgICAgICByZXR1cm4gIWlzU2NhbGFyWmVyb1ZhbHVlKGZpZWxkLnNjYWxhciwgdGFyZ2V0W25hbWVdKTtcbiAgICAgICAgY2FzZSBcImVudW1cIjpcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXRbbmFtZV0gIT09IGZpZWxkLmVudW0udmFsdWVzWzBdLm51bWJlcjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwibWVzc2FnZSBmaWVsZCB3aXRoIGltcGxpY2l0IHByZXNlbmNlXCIpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZpZWxkIGlzIHNldCwgYnV0IG9ubHkgZm9yIHNpbmd1bGFyIGZpZWxkcyB3aXRoIGV4cGxpY2l0XG4gKiBwcmVzZW5jZSAocHJvdG8yKS5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5zYWZlSXNTZXRFeHBsaWNpdCh0YXJnZXQsIGxvY2FsTmFtZSkge1xuICAgIHJldHVybiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwgbG9jYWxOYW1lKSAmJlxuICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSAhPT0gdW5kZWZpbmVkKTtcbn1cbi8qKlxuICogUmV0dXJuIGEgZmllbGQgdmFsdWUsIHJlc3BlY3Rpbmcgb25lb2YgZ3JvdXBzLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bnNhZmVHZXQodGFyZ2V0LCBmaWVsZCkge1xuICAgIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICBjb25zdCBvbmVvZiA9IHRhcmdldFtmaWVsZC5vbmVvZi5sb2NhbE5hbWVdO1xuICAgICAgICBpZiAob25lb2YuY2FzZSA9PT0gZmllbGQubG9jYWxOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gb25lb2YudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldFtmaWVsZC5sb2NhbE5hbWVdO1xufVxuLyoqXG4gKiBTZXQgYSBmaWVsZCB2YWx1ZSwgcmVzcGVjdGluZyBvbmVvZiBncm91cHMuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVNldCh0YXJnZXQsIGZpZWxkLCB2YWx1ZSkge1xuICAgIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICB0YXJnZXRbZmllbGQub25lb2YubG9jYWxOYW1lXSA9IHtcbiAgICAgICAgICAgIGNhc2U6IGZpZWxkLmxvY2FsTmFtZSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRhcmdldFtmaWVsZC5sb2NhbE5hbWVdID0gdmFsdWU7XG4gICAgfVxufVxuLyoqXG4gKiBSZXNldHMgdGhlIGZpZWxkLCBzbyB0aGF0IHVuc2FmZUlzU2V0KCkgd2lsbCByZXR1cm4gZmFsc2UuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZUNsZWFyKFxuLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiBgYW55YCBpcyB0aGUgYmVzdCBjaG9pY2UgZm9yIGR5bmFtaWMgYWNjZXNzXG50YXJnZXQsIGZpZWxkKSB7XG4gICAgY29uc3QgbmFtZSA9IGZpZWxkLmxvY2FsTmFtZTtcbiAgICBpZiAoZmllbGQub25lb2YpIHtcbiAgICAgICAgY29uc3Qgb25lb2ZMb2NhbE5hbWUgPSBmaWVsZC5vbmVvZi5sb2NhbE5hbWU7XG4gICAgICAgIGlmICh0YXJnZXRbb25lb2ZMb2NhbE5hbWVdLmNhc2UgPT09IG5hbWUpIHtcbiAgICAgICAgICAgIHRhcmdldFtvbmVvZkxvY2FsTmFtZV0gPSB7IGNhc2U6IHVuZGVmaW5lZCB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGZpZWxkLnByZXNlbmNlICE9IElNUExJQ0lUKSB7XG4gICAgICAgIC8vIEZpZWxkcyB3aXRoIGV4cGxpY2l0IHByZXNlbmNlIGhhdmUgcHJvcGVydGllcyBvbiB0aGUgcHJvdG90eXBlIGNoYWluXG4gICAgICAgIC8vIGZvciBkZWZhdWx0IC8gemVybyB2YWx1ZXMgKGV4Y2VwdCBmb3IgcHJvdG8zKS4gQnkgZGVsZXRpbmcgdGhlaXIgb3duXG4gICAgICAgIC8vIHByb3BlcnR5LCB0aGUgZmllbGQgaXMgcmVzZXQuXG4gICAgICAgIGRlbGV0ZSB0YXJnZXRbbmFtZV07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzd2l0Y2ggKGZpZWxkLmZpZWxkS2luZCkge1xuICAgICAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgICAgIHRhcmdldFtuYW1lXSA9IHt9O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImxpc3RcIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbmFtZV0gPSBbXTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJlbnVtXCI6XG4gICAgICAgICAgICAgICAgdGFyZ2V0W25hbWVdID0gZmllbGQuZW51bS52YWx1ZXNbMF0ubnVtYmVyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInNjYWxhclwiOlxuICAgICAgICAgICAgICAgIHRhcmdldFtuYW1lXSA9IHNjYWxhclplcm9WYWx1ZShmaWVsZC5zY2FsYXIsIGZpZWxkLmxvbmdBc1N0cmluZyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/registry.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/registry.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFileRegistry: () => (/* binding */ createFileRegistry),\n/* harmony export */   createMutableRegistry: () => (/* binding */ createMutableRegistry),\n/* harmony export */   createRegistry: () => (/* binding */ createRegistry),\n/* harmony export */   maximumEdition: () => (/* binding */ maximumEdition),\n/* harmony export */   minimumEdition: () => (/* binding */ minimumEdition)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _wire_text_format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wire/text-format.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-format.js\");\n/* harmony import */ var _reflect_nested_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect/nested-types.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/nested-types.js\");\n/* harmony import */ var _reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflect/unsafe.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/unsafe.js\");\n/* harmony import */ var _reflect_names_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect/names.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/names.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Create a registry from the given inputs.\n *\n * An input can be:\n * - Any message, enum, service, or extension descriptor, which adds just the\n *   descriptor for this type.\n * - A file descriptor, which adds all typed defined in this file.\n * - A registry, which adds all types from the registry.\n *\n * For duplicate descriptors (same type name), the one given last wins.\n */\nfunction createRegistry(...input) {\n    return initBaseRegistry(input);\n}\n/**\n * Create a registry that allows adding and removing descriptors.\n */\nfunction createMutableRegistry(...input) {\n    const reg = initBaseRegistry(input);\n    return Object.assign(Object.assign({}, reg), { remove(desc) {\n            var _a;\n            if (desc.kind == \"extension\") {\n                (_a = reg.extendees.get(desc.extendee.typeName)) === null || _a === void 0 ? void 0 : _a.delete(desc.number);\n            }\n            reg.types.delete(desc.typeName);\n        } });\n}\nfunction createFileRegistry(...args) {\n    const registry = createBaseRegistry();\n    if (!args.length) {\n        return registry;\n    }\n    if (\"$typeName\" in args[0] &&\n        args[0].$typeName == \"google.protobuf.FileDescriptorSet\") {\n        for (const file of args[0].file) {\n            addFile(file, registry);\n        }\n        return registry;\n    }\n    if (\"$typeName\" in args[0]) {\n        const input = args[0];\n        const resolve = args[1];\n        const seen = new Set();\n        function recurseDeps(file) {\n            const deps = [];\n            for (const protoFileName of file.dependency) {\n                if (registry.getFile(protoFileName) != undefined) {\n                    continue;\n                }\n                if (seen.has(protoFileName)) {\n                    continue;\n                }\n                const dep = resolve(protoFileName);\n                if (!dep) {\n                    throw new Error(`Unable to resolve ${protoFileName}, imported by ${file.name}`);\n                }\n                if (\"kind\" in dep) {\n                    registry.addFile(dep, false, true);\n                }\n                else {\n                    seen.add(dep.name);\n                    deps.push(dep);\n                }\n            }\n            return deps.concat(...deps.map(recurseDeps));\n        }\n        for (const file of [input, ...recurseDeps(input)].reverse()) {\n            addFile(file, registry);\n        }\n    }\n    else {\n        for (const fileReg of args) {\n            for (const file of fileReg.files) {\n                registry.addFile(file);\n            }\n        }\n    }\n    return registry;\n}\n/**\n * @private\n */\nfunction createBaseRegistry() {\n    const types = new Map();\n    const extendees = new Map();\n    const files = new Map();\n    return {\n        kind: \"registry\",\n        types,\n        extendees,\n        [Symbol.iterator]() {\n            return types.values();\n        },\n        get files() {\n            return files.values();\n        },\n        addFile(file, skipTypes, withDeps) {\n            files.set(file.proto.name, file);\n            if (!skipTypes) {\n                for (const type of (0,_reflect_nested_types_js__WEBPACK_IMPORTED_MODULE_0__.nestedTypes)(file)) {\n                    this.add(type);\n                }\n            }\n            if (withDeps) {\n                for (const f of file.dependencies) {\n                    this.addFile(f, skipTypes, withDeps);\n                }\n            }\n        },\n        add(desc) {\n            if (desc.kind == \"extension\") {\n                let numberToExt = extendees.get(desc.extendee.typeName);\n                if (!numberToExt) {\n                    extendees.set(desc.extendee.typeName, \n                    // biome-ignore lint/suspicious/noAssignInExpressions: no\n                    (numberToExt = new Map()));\n                }\n                numberToExt.set(desc.number, desc);\n            }\n            types.set(desc.typeName, desc);\n        },\n        get(typeName) {\n            return types.get(typeName);\n        },\n        getFile(fileName) {\n            return files.get(fileName);\n        },\n        getMessage(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"message\" ? t : undefined;\n        },\n        getEnum(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"enum\" ? t : undefined;\n        },\n        getExtension(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"extension\" ? t : undefined;\n        },\n        getExtensionFor(extendee, no) {\n            var _a;\n            return (_a = extendees.get(extendee.typeName)) === null || _a === void 0 ? void 0 : _a.get(no);\n        },\n        getService(typeName) {\n            const t = types.get(typeName);\n            return (t === null || t === void 0 ? void 0 : t.kind) == \"service\" ? t : undefined;\n        },\n    };\n}\n/**\n * @private\n */\nfunction initBaseRegistry(inputs) {\n    const registry = createBaseRegistry();\n    for (const input of inputs) {\n        switch (input.kind) {\n            case \"registry\":\n                for (const n of input) {\n                    registry.add(n);\n                }\n                break;\n            case \"file\":\n                registry.addFile(input);\n                break;\n            default:\n                registry.add(input);\n                break;\n        }\n    }\n    return registry;\n}\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO2: const $name: Edition.$localName = $number;\nconst EDITION_PROTO2 = 998;\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO3: const $name: Edition.$localName = $number;\nconst EDITION_PROTO3 = 999;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_STRING: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_STRING = 9;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_GROUP: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_GROUP = 10;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_MESSAGE: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_MESSAGE = 11;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_BYTES: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_BYTES = 12;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Type.TYPE_ENUM: const $name: FieldDescriptorProto_Type.$localName = $number;\nconst TYPE_ENUM = 14;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Label.LABEL_REPEATED: const $name: FieldDescriptorProto_Label.$localName = $number;\nconst LABEL_REPEATED = 3;\n// bootstrap-inject google.protobuf.FieldDescriptorProto.Label.LABEL_REQUIRED: const $name: FieldDescriptorProto_Label.$localName = $number;\nconst LABEL_REQUIRED = 2;\n// bootstrap-inject google.protobuf.FieldOptions.JSType.JS_STRING: const $name: FieldOptions_JSType.$localName = $number;\nconst JS_STRING = 1;\n// bootstrap-inject google.protobuf.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN: const $name: MethodOptions_IdempotencyLevel.$localName = $number;\nconst IDEMPOTENCY_UNKNOWN = 0;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.EXPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst EXPLICIT = 1;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// bootstrap-inject google.protobuf.FeatureSet.RepeatedFieldEncoding.PACKED: const $name: FeatureSet_RepeatedFieldEncoding.$localName = $number;\nconst PACKED = 1;\n// bootstrap-inject google.protobuf.FeatureSet.MessageEncoding.DELIMITED: const $name: FeatureSet_MessageEncoding.$localName = $number;\nconst DELIMITED = 2;\n// bootstrap-inject google.protobuf.FeatureSet.EnumType.OPEN: const $name: FeatureSet_EnumType.$localName = $number;\nconst OPEN = 1;\n// biome-ignore format: want this to read well\n// bootstrap-inject defaults: EDITION_PROTO2 to EDITION_2023: export const minimumEdition: SupportedEdition = $minimumEdition, maximumEdition: SupportedEdition = $maximumEdition;\n// generated from protoc v31.1\nconst minimumEdition = 998, maximumEdition = 1000;\nconst featureDefaults = {\n    // EDITION_PROTO2\n    998: {\n        fieldPresence: 1, // EXPLICIT,\n        enumType: 2, // CLOSED,\n        repeatedFieldEncoding: 2, // EXPANDED,\n        utf8Validation: 3, // NONE,\n        messageEncoding: 1, // LENGTH_PREFIXED,\n        jsonFormat: 2, // LEGACY_BEST_EFFORT,\n        enforceNamingStyle: 2, // STYLE_LEGACY,\n        defaultSymbolVisibility: 1, // EXPORT_ALL,\n    },\n    // EDITION_PROTO3\n    999: {\n        fieldPresence: 2, // IMPLICIT,\n        enumType: 1, // OPEN,\n        repeatedFieldEncoding: 1, // PACKED,\n        utf8Validation: 2, // VERIFY,\n        messageEncoding: 1, // LENGTH_PREFIXED,\n        jsonFormat: 1, // ALLOW,\n        enforceNamingStyle: 2, // STYLE_LEGACY,\n        defaultSymbolVisibility: 1, // EXPORT_ALL,\n    },\n    // EDITION_2023\n    1000: {\n        fieldPresence: 1, // EXPLICIT,\n        enumType: 1, // OPEN,\n        repeatedFieldEncoding: 1, // PACKED,\n        utf8Validation: 2, // VERIFY,\n        messageEncoding: 1, // LENGTH_PREFIXED,\n        jsonFormat: 1, // ALLOW,\n        enforceNamingStyle: 2, // STYLE_LEGACY,\n        defaultSymbolVisibility: 1, // EXPORT_ALL,\n    },\n};\n/**\n * Create a descriptor for a file, add it to the registry.\n */\nfunction addFile(proto, reg) {\n    var _a, _b;\n    const file = {\n        kind: \"file\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        edition: getFileEdition(proto),\n        name: proto.name.replace(/\\.proto$/, \"\"),\n        dependencies: findFileDependencies(proto, reg),\n        enums: [],\n        messages: [],\n        extensions: [],\n        services: [],\n        toString() {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${proto.name}`;\n        },\n    };\n    const mapEntriesStore = new Map();\n    const mapEntries = {\n        get(typeName) {\n            return mapEntriesStore.get(typeName);\n        },\n        add(desc) {\n            var _a;\n            assert(((_a = desc.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry) === true);\n            mapEntriesStore.set(desc.typeName, desc);\n        },\n    };\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, undefined, reg);\n    }\n    for (const messageProto of proto.messageType) {\n        addMessage(messageProto, file, undefined, reg, mapEntries);\n    }\n    for (const serviceProto of proto.service) {\n        addService(serviceProto, file, reg);\n    }\n    addExtensions(file, reg);\n    for (const mapEntry of mapEntriesStore.values()) {\n        // to create a map field, we need access to the map entry's fields\n        addFields(mapEntry, reg, mapEntries);\n    }\n    for (const message of file.messages) {\n        addFields(message, reg, mapEntries);\n        addExtensions(message, reg);\n    }\n    reg.addFile(file, true);\n}\n/**\n * Create descriptors for extensions, and add them to the message / file,\n * and to our cart.\n * Recurses into nested types.\n */\nfunction addExtensions(desc, reg) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const proto of desc.proto.extension) {\n                const ext = newField(proto, desc, reg);\n                desc.extensions.push(ext);\n                reg.add(ext);\n            }\n            break;\n        case \"message\":\n            for (const proto of desc.proto.extension) {\n                const ext = newField(proto, desc, reg);\n                desc.nestedExtensions.push(ext);\n                reg.add(ext);\n            }\n            for (const message of desc.nestedMessages) {\n                addExtensions(message, reg);\n            }\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups, and add them to the message.\n * Recurses into nested types.\n */\nfunction addFields(message, reg, mapEntries) {\n    const allOneofs = message.proto.oneofDecl.map((proto) => newOneof(proto, message));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field) {\n        const oneof = findOneof(proto, allOneofs);\n        const field = newField(proto, message, reg, oneof, mapEntries);\n        message.fields.push(field);\n        message.field[field.localName] = field;\n        if (oneof === undefined) {\n            message.members.push(field);\n        }\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o) => oneofsSeen.has(o))) {\n        message.oneofs.push(oneof);\n    }\n    for (const child of message.nestedMessages) {\n        addFields(child, reg, mapEntries);\n    }\n}\n/**\n * Create a descriptor for an enumeration, and add it our cart and to the\n * parent type, if any.\n */\nfunction addEnum(proto, file, parent, reg) {\n    var _a, _b, _c, _d, _e;\n    const sharedPrefix = findEnumSharedPrefix(proto.name, proto.value);\n    const desc = {\n        kind: \"enum\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        open: true,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        value: {},\n        values: [],\n        sharedPrefix,\n        toString() {\n            return `enum ${this.typeName}`;\n        },\n    };\n    desc.open = isEnumOpen(desc);\n    reg.add(desc);\n    for (const p of proto.value) {\n        const name = p.name;\n        desc.values.push(\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        (desc.value[p.number] = {\n            kind: \"enum_value\",\n            proto: p,\n            deprecated: (_d = (_c = p.options) === null || _c === void 0 ? void 0 : _c.deprecated) !== null && _d !== void 0 ? _d : false,\n            parent: desc,\n            name,\n            localName: (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.safeObjectProperty)(sharedPrefix == undefined\n                ? name\n                : name.substring(sharedPrefix.length)),\n            number: p.number,\n            toString() {\n                return `enum value ${desc.typeName}.${name}`;\n            },\n        }));\n    }\n    ((_e = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _e !== void 0 ? _e : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message, including nested types, and add it to our\n * cart. Note that this does not create descriptors fields.\n */\nfunction addMessage(proto, file, parent, reg, mapEntries) {\n    var _a, _b, _c, _d;\n    const desc = {\n        kind: \"message\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        fields: [],\n        field: {},\n        oneofs: [],\n        members: [],\n        nestedEnums: [],\n        nestedMessages: [],\n        nestedExtensions: [],\n        toString() {\n            return `message ${this.typeName}`;\n        },\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) {\n        mapEntries.add(desc);\n    }\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        reg.add(desc);\n    }\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, desc, reg);\n    }\n    for (const messageProto of proto.nestedType) {\n        addMessage(messageProto, file, desc, reg, mapEntries);\n    }\n}\n/**\n * Create a descriptor for a service, including methods, and add it to our\n * cart.\n */\nfunction addService(proto, file, reg) {\n    var _a, _b;\n    const desc = {\n        kind: \"service\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        name: proto.name,\n        typeName: makeTypeName(proto, undefined, file),\n        methods: [],\n        method: {},\n        toString() {\n            return `service ${this.typeName}`;\n        },\n    };\n    file.services.push(desc);\n    reg.add(desc);\n    for (const methodProto of proto.method) {\n        const method = newMethod(methodProto, desc, reg);\n        desc.methods.push(method);\n        desc.method[method.localName] = method;\n    }\n}\n/**\n * Create a descriptor for a method.\n */\nfunction newMethod(proto, parent, reg) {\n    var _a, _b, _c, _d;\n    let methodKind;\n    if (proto.clientStreaming && proto.serverStreaming) {\n        methodKind = \"bidi_streaming\";\n    }\n    else if (proto.clientStreaming) {\n        methodKind = \"client_streaming\";\n    }\n    else if (proto.serverStreaming) {\n        methodKind = \"server_streaming\";\n    }\n    else {\n        methodKind = \"unary\";\n    }\n    const input = reg.getMessage(trimLeadingDot(proto.inputType));\n    const output = reg.getMessage(trimLeadingDot(proto.outputType));\n    assert(input, `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    assert(output, `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: \"rpc\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        parent,\n        name,\n        localName: (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.safeObjectProperty)(name.length\n            ? (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.safeObjectProperty)(name[0].toLowerCase() + name.substring(1))\n            : name),\n        methodKind,\n        input,\n        output,\n        idempotency: (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.idempotencyLevel) !== null && _d !== void 0 ? _d : IDEMPOTENCY_UNKNOWN,\n        toString() {\n            return `rpc ${parent.typeName}.${name}`;\n        },\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */\nfunction newOneof(proto, parent) {\n    return {\n        kind: \"oneof\",\n        proto,\n        deprecated: false,\n        parent,\n        fields: [],\n        name: proto.name,\n        localName: (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.safeObjectProperty)((0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.protoCamelCase)(proto.name)),\n        toString() {\n            return `oneof ${parent.typeName}.${this.name}`;\n        },\n    };\n}\nfunction newField(proto, parentOrFile, reg, oneof, mapEntries) {\n    var _a, _b, _c;\n    const isExtension = mapEntries === undefined;\n    const field = {\n        kind: \"field\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        name: proto.name,\n        number: proto.number,\n        scalar: undefined,\n        message: undefined,\n        enum: undefined,\n        presence: getFieldPresence(proto, oneof, isExtension, parentOrFile),\n        listKind: undefined,\n        mapKind: undefined,\n        mapKey: undefined,\n        delimitedEncoding: undefined,\n        packed: undefined,\n        longAsString: false,\n        getDefaultValue: undefined,\n    };\n    if (isExtension) {\n        // extension field\n        const file = parentOrFile.kind == \"file\" ? parentOrFile : parentOrFile.file;\n        const parent = parentOrFile.kind == \"file\" ? undefined : parentOrFile;\n        const typeName = makeTypeName(proto, parent, file);\n        field.kind = \"extension\";\n        field.file = file;\n        field.parent = parent;\n        field.oneof = undefined;\n        field.typeName = typeName;\n        field.jsonName = `[${typeName}]`; // option json_name is not allowed on extension fields\n        field.toString = () => `extension ${typeName}`;\n        const extendee = reg.getMessage(trimLeadingDot(proto.extendee));\n        assert(extendee, `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n        field.extendee = extendee;\n    }\n    else {\n        // regular field\n        const parent = parentOrFile;\n        assert(parent.kind == \"message\");\n        field.parent = parent;\n        field.oneof = oneof;\n        field.localName = oneof\n            ? (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.protoCamelCase)(proto.name)\n            : (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.safeObjectProperty)((0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_1__.protoCamelCase)(proto.name));\n        field.jsonName = proto.jsonName;\n        field.toString = () => `field ${parent.typeName}.${proto.name}`;\n    }\n    const label = proto.label;\n    const type = proto.type;\n    const jstype = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.jstype;\n    if (label === LABEL_REPEATED) {\n        // list or map field\n        const mapEntry = type == TYPE_MESSAGE\n            ? mapEntries === null || mapEntries === void 0 ? void 0 : mapEntries.get(trimLeadingDot(proto.typeName))\n            : undefined;\n        if (mapEntry) {\n            // map field\n            field.fieldKind = \"map\";\n            const { key, value } = findMapEntryFields(mapEntry);\n            field.mapKey = key.scalar;\n            field.mapKind = value.fieldKind;\n            field.message = value.message;\n            field.delimitedEncoding = false; // map fields are always LENGTH_PREFIXED\n            field.enum = value.enum;\n            field.scalar = value.scalar;\n            return field;\n        }\n        // list field\n        field.fieldKind = \"list\";\n        switch (type) {\n            case TYPE_MESSAGE:\n            case TYPE_GROUP:\n                field.listKind = \"message\";\n                field.message = reg.getMessage(trimLeadingDot(proto.typeName));\n                assert(field.message);\n                field.delimitedEncoding = isDelimitedEncoding(proto, parentOrFile);\n                break;\n            case TYPE_ENUM:\n                field.listKind = \"enum\";\n                field.enum = reg.getEnum(trimLeadingDot(proto.typeName));\n                assert(field.enum);\n                break;\n            default:\n                field.listKind = \"scalar\";\n                field.scalar = type;\n                field.longAsString = jstype == JS_STRING;\n                break;\n        }\n        field.packed = isPackedField(proto, parentOrFile);\n        return field;\n    }\n    // singular\n    switch (type) {\n        case TYPE_MESSAGE:\n        case TYPE_GROUP:\n            field.fieldKind = \"message\";\n            field.message = reg.getMessage(trimLeadingDot(proto.typeName));\n            assert(field.message, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            field.delimitedEncoding = isDelimitedEncoding(proto, parentOrFile);\n            field.getDefaultValue = () => undefined;\n            break;\n        case TYPE_ENUM: {\n            const enumeration = reg.getEnum(trimLeadingDot(proto.typeName));\n            assert(enumeration !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            field.fieldKind = \"enum\";\n            field.enum = reg.getEnum(trimLeadingDot(proto.typeName));\n            field.getDefaultValue = () => {\n                return (0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_2__.unsafeIsSetExplicit)(proto, \"defaultValue\")\n                    ? (0,_wire_text_format_js__WEBPACK_IMPORTED_MODULE_3__.parseTextFormatEnumValue)(enumeration, proto.defaultValue)\n                    : undefined;\n            };\n            break;\n        }\n        default: {\n            field.fieldKind = \"scalar\";\n            field.scalar = type;\n            field.longAsString = jstype == JS_STRING;\n            field.getDefaultValue = () => {\n                return (0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_2__.unsafeIsSetExplicit)(proto, \"defaultValue\")\n                    ? (0,_wire_text_format_js__WEBPACK_IMPORTED_MODULE_3__.parseTextFormatScalarValue)(type, proto.defaultValue)\n                    : undefined;\n            };\n            break;\n        }\n    }\n    return field;\n}\n/**\n * Parse the \"syntax\" and \"edition\" fields, returning one of the supported\n * editions.\n */\nfunction getFileEdition(proto) {\n    switch (proto.syntax) {\n        case \"\":\n        case \"proto2\":\n            return EDITION_PROTO2;\n        case \"proto3\":\n            return EDITION_PROTO3;\n        case \"editions\":\n            if (proto.edition in featureDefaults) {\n                return proto.edition;\n            }\n            throw new Error(`${proto.name}: unsupported edition`);\n        default:\n            throw new Error(`${proto.name}: unsupported syntax \"${proto.syntax}\"`);\n    }\n}\n/**\n * Resolve dependencies of FileDescriptorProto to DescFile.\n */\nfunction findFileDependencies(proto, reg) {\n    return proto.dependency.map((wantName) => {\n        const dep = reg.getFile(wantName);\n        if (!dep) {\n            throw new Error(`Cannot find ${wantName}, imported by ${proto.name}`);\n        }\n        return dep;\n    });\n}\n/**\n * Finds a prefix shared by enum values, for example `my_enum_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nfunction findEnumSharedPrefix(enumName, values) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const value of values) {\n        if (!value.name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = value.name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages, enumerations, and services is\n * constructed by concatenating the package name (if present), parent\n * message names (for nested types), and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present), parent message names (for\n * extensions declared within a message), and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */\nfunction makeTypeName(proto, parent, file) {\n    let typeName;\n    if (parent) {\n        typeName = `${parent.typeName}.${proto.name}`;\n    }\n    else if (file.proto.package.length > 0) {\n        typeName = `${file.proto.package}.${proto.name}`;\n    }\n    else {\n        typeName = `${proto.name}`;\n    }\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */\nfunction trimLeadingDot(typeName) {\n    return typeName.startsWith(\".\") ? typeName.substring(1) : typeName;\n}\n/**\n * Did the user put the field in a oneof group?\n * Synthetic oneofs for proto3 optionals are ignored.\n */\nfunction findOneof(proto, allOneofs) {\n    if (!(0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_2__.unsafeIsSetExplicit)(proto, \"oneofIndex\")) {\n        return undefined;\n    }\n    if (proto.proto3Optional) {\n        return undefined;\n    }\n    const oneof = allOneofs[proto.oneofIndex];\n    assert(oneof, `invalid FieldDescriptorProto: oneof #${proto.oneofIndex} for field #${proto.number} not found`);\n    return oneof;\n}\n/**\n * Presence of the field.\n * See https://protobuf.dev/programming-guides/field_presence/\n */\nfunction getFieldPresence(proto, oneof, isExtension, parent) {\n    if (proto.label == LABEL_REQUIRED) {\n        // proto2 required is LEGACY_REQUIRED\n        return LEGACY_REQUIRED;\n    }\n    if (proto.label == LABEL_REPEATED) {\n        // repeated fields (including maps) do not track presence\n        return IMPLICIT;\n    }\n    if (!!oneof || proto.proto3Optional) {\n        // oneof is always explicit\n        return EXPLICIT;\n    }\n    if (isExtension) {\n        // extensions always track presence\n        return EXPLICIT;\n    }\n    const resolved = resolveFeature(\"fieldPresence\", { proto, parent });\n    if (resolved == IMPLICIT &&\n        (proto.type == TYPE_MESSAGE || proto.type == TYPE_GROUP)) {\n        // singular message field cannot be implicit\n        return EXPLICIT;\n    }\n    return resolved;\n}\n/**\n * Pack this repeated field?\n */\nfunction isPackedField(proto, parent) {\n    if (proto.label != LABEL_REPEATED) {\n        return false;\n    }\n    switch (proto.type) {\n        case TYPE_STRING:\n        case TYPE_BYTES:\n        case TYPE_GROUP:\n        case TYPE_MESSAGE:\n            // length-delimited types cannot be packed\n            return false;\n    }\n    const o = proto.options;\n    if (o && (0,_reflect_unsafe_js__WEBPACK_IMPORTED_MODULE_2__.unsafeIsSetExplicit)(o, \"packed\")) {\n        // prefer the field option over edition features\n        return o.packed;\n    }\n    return (PACKED ==\n        resolveFeature(\"repeatedFieldEncoding\", {\n            proto,\n            parent,\n        }));\n}\n/**\n * Find the key and value fields of a synthetic map entry message.\n */\nfunction findMapEntryFields(mapEntry) {\n    const key = mapEntry.fields.find((f) => f.number === 1);\n    const value = mapEntry.fields.find((f) => f.number === 2);\n    assert(key &&\n        key.fieldKind == \"scalar\" &&\n        key.scalar != _descriptors_js__WEBPACK_IMPORTED_MODULE_4__.ScalarType.BYTES &&\n        key.scalar != _descriptors_js__WEBPACK_IMPORTED_MODULE_4__.ScalarType.FLOAT &&\n        key.scalar != _descriptors_js__WEBPACK_IMPORTED_MODULE_4__.ScalarType.DOUBLE &&\n        value &&\n        value.fieldKind != \"list\" &&\n        value.fieldKind != \"map\");\n    return { key, value };\n}\n/**\n * Enumerations can be open or closed.\n * See https://protobuf.dev/programming-guides/enum/\n */\nfunction isEnumOpen(desc) {\n    var _a;\n    return (OPEN ==\n        resolveFeature(\"enumType\", {\n            proto: desc.proto,\n            parent: (_a = desc.parent) !== null && _a !== void 0 ? _a : desc.file,\n        }));\n}\n/**\n * Encode the message delimited (a.k.a. proto2 group encoding), or\n * length-prefixed?\n */\nfunction isDelimitedEncoding(proto, parent) {\n    if (proto.type == TYPE_GROUP) {\n        return true;\n    }\n    return (DELIMITED ==\n        resolveFeature(\"messageEncoding\", {\n            proto,\n            parent,\n        }));\n}\nfunction resolveFeature(name, ref) {\n    var _a, _b;\n    const featureSet = (_a = ref.proto.options) === null || _a === void 0 ? void 0 : _a.features;\n    if (featureSet) {\n        const val = featureSet[name];\n        if (val != 0) {\n            return val;\n        }\n    }\n    if (\"kind\" in ref) {\n        if (ref.kind == \"message\") {\n            return resolveFeature(name, (_b = ref.parent) !== null && _b !== void 0 ? _b : ref.file);\n        }\n        const editionDefaults = featureDefaults[ref.edition];\n        if (!editionDefaults) {\n            throw new Error(`feature default for edition ${ref.edition} not found`);\n        }\n        return editionDefaults[name];\n    }\n    return resolveFeature(name, ref.parent);\n}\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/registry.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-binary.js":
/*!***************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-binary.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toBinary: () => (/* binding */ toBinary),\n/* harmony export */   writeField: () => (/* binding */ writeField)\n/* harmony export */ });\n/* harmony import */ var _reflect_reflect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect/reflect.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js\");\n/* harmony import */ var _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wire/binary-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js\");\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n};\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction toBinary(schema, message, options) {\n    return writeFields(new _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter(), makeWriteOptions(options), (0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_1__.reflect)(schema, message)).finish();\n}\nfunction writeFields(writer, opts, msg) {\n    var _a;\n    for (const f of msg.sortedFields) {\n        if (!msg.isSet(f)) {\n            if (f.presence == LEGACY_REQUIRED) {\n                throw new Error(`cannot encode ${f} to binary: required field not set`);\n            }\n            continue;\n        }\n        writeField(writer, opts, msg, f);\n    }\n    if (opts.writeUnknownFields) {\n        for (const { no, wireType, data } of (_a = msg.getUnknown()) !== null && _a !== void 0 ? _a : []) {\n            writer.tag(no, wireType).raw(data);\n        }\n    }\n    return writer;\n}\n/**\n * @private\n */\nfunction writeField(writer, opts, msg, field) {\n    var _a;\n    switch (field.fieldKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, msg.desc.typeName, field.name, (_a = field.scalar) !== null && _a !== void 0 ? _a : _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, field.number, msg.get(field));\n            break;\n        case \"list\":\n            writeListField(writer, opts, field, msg.get(field));\n            break;\n        case \"message\":\n            writeMessageField(writer, opts, field, msg.get(field));\n            break;\n        case \"map\":\n            for (const [key, val] of msg.get(field)) {\n                writeMapEntry(writer, opts, field, key, val);\n            }\n            break;\n    }\n}\nfunction writeScalar(writer, msgName, fieldName, scalarType, fieldNo, value) {\n    writeScalarValue(writer.tag(fieldNo, writeTypeOfScalar(scalarType)), msgName, fieldName, scalarType, value);\n}\nfunction writeMessageField(writer, opts, field, message) {\n    if (field.delimitedEncoding) {\n        writeFields(writer.tag(field.number, _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.StartGroup), opts, message).tag(field.number, _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup);\n    }\n    else {\n        writeFields(writer.tag(field.number, _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).fork(), opts, message).join();\n    }\n}\nfunction writeListField(writer, opts, field, list) {\n    var _a;\n    if (field.listKind == \"message\") {\n        for (const item of list) {\n            writeMessageField(writer, opts, field, item);\n        }\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32;\n    if (field.packed) {\n        if (!list.size) {\n            return;\n        }\n        writer.tag(field.number, _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).fork();\n        for (const item of list) {\n            writeScalarValue(writer, field.parent.typeName, field.name, scalarType, item);\n        }\n        writer.join();\n        return;\n    }\n    for (const item of list) {\n        writeScalar(writer, field.parent.typeName, field.name, scalarType, field.number, item);\n    }\n}\nfunction writeMapEntry(writer, opts, field, key, value) {\n    var _a;\n    writer.tag(field.number, _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).fork();\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.parent.typeName, field.name, field.mapKey, 1, key);\n    // write value, expecting value field number = 2\n    switch (field.mapKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, field.parent.typeName, field.name, (_a = field.scalar) !== null && _a !== void 0 ? _a : _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            writeFields(writer.tag(2, _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).fork(), opts, value).join();\n            break;\n    }\n    writer.join();\n}\nfunction writeScalarValue(writer, msgName, fieldName, type, value) {\n    try {\n        switch (type) {\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n                writer.string(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n                writer.bool(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n                writer.double(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n                writer.float(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n                writer.int32(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64:\n                writer.int64(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64:\n                writer.uint64(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n                writer.fixed64(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n                writer.bytes(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n                writer.fixed32(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n                writer.sfixed32(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n                writer.sfixed64(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT64:\n                writer.sint64(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n                writer.uint32(value);\n                break;\n            case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n                writer.sint32(value);\n                break;\n        }\n    }\n    catch (e) {\n        if (e instanceof Error) {\n            throw new Error(`cannot encode field ${msgName}.${fieldName} to binary: ${e.message}`);\n        }\n        throw e;\n    }\n}\nfunction writeTypeOfScalar(type) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            return _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            return _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Bit64;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            return _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Bit32;\n        default:\n            return _wire_binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Varint;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-binary.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-json.js":
/*!*************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-json.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enumToJson: () => (/* binding */ enumToJson),\n/* harmony export */   toJson: () => (/* binding */ toJson),\n/* harmony export */   toJsonString: () => (/* binding */ toJsonString)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _reflect_names_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reflect/names.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/names.js\");\n/* harmony import */ var _reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect/reflect.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect.js\");\n/* harmony import */ var _wkt_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./wkt/index.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/any.js\");\n/* harmony import */ var _wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wkt/wrappers.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js\");\n/* harmony import */ var _wire_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./wire/index.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/base64-encoding.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extensions.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/extensions.js\");\n/* harmony import */ var _reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflect/reflect-check.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/reflect/reflect-check.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    alwaysEmitImplicit: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n};\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\n/**\n * Serialize the message to a JSON value, a JavaScript value that can be\n * passed to JSON.stringify().\n */\nfunction toJson(schema, message, options) {\n    return reflectToJson((0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(schema, message), makeWriteOptions(options));\n}\n/**\n * Serialize the message to a JSON string.\n */\nfunction toJsonString(schema, message, options) {\n    var _a;\n    const jsonValue = toJson(schema, message, options);\n    return JSON.stringify(jsonValue, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n}\n/**\n * Serialize a single enum value to JSON.\n */\nfunction enumToJson(descEnum, value) {\n    var _a;\n    if (descEnum.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    const name = (_a = descEnum.value[value]) === null || _a === void 0 ? void 0 : _a.name;\n    if (name === undefined) {\n        throw new Error(`${value} is not a value in ${descEnum}`);\n    }\n    return name;\n}\nfunction reflectToJson(msg, opts) {\n    var _a;\n    const wktJson = tryWktToJson(msg, opts);\n    if (wktJson !== undefined)\n        return wktJson;\n    const json = {};\n    for (const f of msg.sortedFields) {\n        if (!msg.isSet(f)) {\n            if (f.presence == LEGACY_REQUIRED) {\n                throw new Error(`cannot encode ${f} to JSON: required field not set`);\n            }\n            if (!opts.alwaysEmitImplicit || f.presence !== IMPLICIT) {\n                // Fields with implicit presence omit zero values (e.g. empty string) by default\n                continue;\n            }\n        }\n        const jsonValue = fieldToJson(f, msg.get(f), opts);\n        if (jsonValue !== undefined) {\n            json[jsonName(f, opts)] = jsonValue;\n        }\n    }\n    if (opts.registry) {\n        const tagSeen = new Set();\n        for (const { no } of (_a = msg.getUnknown()) !== null && _a !== void 0 ? _a : []) {\n            // Same tag can appear multiple times, so we\n            // keep track and skip identical ones.\n            if (!tagSeen.has(no)) {\n                tagSeen.add(no);\n                const extension = opts.registry.getExtensionFor(msg.desc, no);\n                if (!extension) {\n                    continue;\n                }\n                const value = (0,_extensions_js__WEBPACK_IMPORTED_MODULE_1__.getExtension)(msg.message, extension);\n                const [container, field] = (0,_extensions_js__WEBPACK_IMPORTED_MODULE_1__.createExtensionContainer)(extension, value);\n                const jsonValue = fieldToJson(field, container.get(field), opts);\n                if (jsonValue !== undefined) {\n                    json[extension.jsonName] = jsonValue;\n                }\n            }\n        }\n    }\n    return json;\n}\nfunction fieldToJson(f, val, opts) {\n    switch (f.fieldKind) {\n        case \"scalar\":\n            return scalarToJson(f, val);\n        case \"message\":\n            return reflectToJson(val, opts);\n        case \"enum\":\n            return enumToJsonInternal(f.enum, val, opts.enumAsInteger);\n        case \"list\":\n            return listToJson(val, opts);\n        case \"map\":\n            return mapToJson(val, opts);\n    }\n}\nfunction mapToJson(map, opts) {\n    const f = map.field();\n    const jsonObj = {};\n    switch (f.mapKind) {\n        case \"scalar\":\n            for (const [entryKey, entryValue] of map) {\n                jsonObj[entryKey] = scalarToJson(f, entryValue);\n            }\n            break;\n        case \"message\":\n            for (const [entryKey, entryValue] of map) {\n                jsonObj[entryKey] = reflectToJson(entryValue, opts);\n            }\n            break;\n        case \"enum\":\n            for (const [entryKey, entryValue] of map) {\n                jsonObj[entryKey] = enumToJsonInternal(f.enum, entryValue, opts.enumAsInteger);\n            }\n            break;\n    }\n    return opts.alwaysEmitImplicit || map.size > 0 ? jsonObj : undefined;\n}\nfunction listToJson(list, opts) {\n    const f = list.field();\n    const jsonArr = [];\n    switch (f.listKind) {\n        case \"scalar\":\n            for (const item of list) {\n                jsonArr.push(scalarToJson(f, item));\n            }\n            break;\n        case \"enum\":\n            for (const item of list) {\n                jsonArr.push(enumToJsonInternal(f.enum, item, opts.enumAsInteger));\n            }\n            break;\n        case \"message\":\n            for (const item of list) {\n                jsonArr.push(reflectToJson(item, opts));\n            }\n            break;\n    }\n    return opts.alwaysEmitImplicit || jsonArr.length > 0 ? jsonArr : undefined;\n}\nfunction enumToJsonInternal(desc, value, enumAsInteger) {\n    var _a;\n    if (typeof value != \"number\") {\n        throw new Error(`cannot encode ${desc} to JSON: expected number, got ${(0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.formatVal)(value)}`);\n    }\n    if (desc.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    const val = desc.value[value];\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction scalarToJson(field, value) {\n    var _a, _b, _c, _d, _e, _f;\n    switch (field.scalar) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32:\n            if (typeof value != \"number\") {\n                throw new Error(`cannot encode ${field} to JSON: ${(_a = (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.checkField)(field, value)) === null || _a === void 0 ? void 0 : _a.message}`);\n            }\n            return value;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            if (typeof value != \"number\") {\n                throw new Error(`cannot encode ${field} to JSON: ${(_b = (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.checkField)(field, value)) === null || _b === void 0 ? void 0 : _b.message}`);\n            }\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value;\n        // string:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.STRING:\n            if (typeof value != \"string\") {\n                throw new Error(`cannot encode ${field} to JSON: ${(_c = (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.checkField)(field, value)) === null || _c === void 0 ? void 0 : _c.message}`);\n            }\n            return value;\n        // bool:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL:\n            if (typeof value != \"boolean\") {\n                throw new Error(`cannot encode ${field} to JSON: ${(_d = (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.checkField)(field, value)) === null || _d === void 0 ? void 0 : _d.message}`);\n            }\n            return value;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT64:\n            if (typeof value != \"bigint\" && typeof value != \"string\") {\n                throw new Error(`cannot encode ${field} to JSON: ${(_e = (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.checkField)(field, value)) === null || _e === void 0 ? void 0 : _e.message}`);\n            }\n            return value.toString();\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BYTES:\n            if (value instanceof Uint8Array) {\n                return (0,_wire_index_js__WEBPACK_IMPORTED_MODULE_4__.base64Encode)(value);\n            }\n            throw new Error(`cannot encode ${field} to JSON: ${(_f = (0,_reflect_reflect_check_js__WEBPACK_IMPORTED_MODULE_2__.checkField)(field, value)) === null || _f === void 0 ? void 0 : _f.message}`);\n    }\n}\nfunction jsonName(f, opts) {\n    return opts.useProtoFieldName ? f.name : f.jsonName;\n}\n// returns a json value if wkt, otherwise returns undefined.\nfunction tryWktToJson(msg, opts) {\n    if (!msg.desc.typeName.startsWith(\"google.protobuf.\")) {\n        return undefined;\n    }\n    switch (msg.desc.typeName) {\n        case \"google.protobuf.Any\":\n            return anyToJson(msg.message, opts);\n        case \"google.protobuf.Timestamp\":\n            return timestampToJson(msg.message);\n        case \"google.protobuf.Duration\":\n            return durationToJson(msg.message);\n        case \"google.protobuf.FieldMask\":\n            return fieldMaskToJson(msg.message);\n        case \"google.protobuf.Struct\":\n            return structToJson(msg.message);\n        case \"google.protobuf.Value\":\n            return valueToJson(msg.message);\n        case \"google.protobuf.ListValue\":\n            return listValueToJson(msg.message);\n        default:\n            if ((0,_wkt_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.isWrapperDesc)(msg.desc)) {\n                const valueField = msg.desc.fields[0];\n                return scalarToJson(valueField, msg.get(valueField));\n            }\n            return undefined;\n    }\n}\nfunction anyToJson(val, opts) {\n    if (val.typeUrl === \"\") {\n        return {};\n    }\n    const { registry } = opts;\n    let message;\n    let desc;\n    if (registry) {\n        message = (0,_wkt_index_js__WEBPACK_IMPORTED_MODULE_6__.anyUnpack)(val, registry);\n        if (message) {\n            desc = registry.getMessage(message.$typeName);\n        }\n    }\n    if (!desc || !message) {\n        throw new Error(`cannot encode message ${val.$typeName} to JSON: \"${val.typeUrl}\" is not in the type registry`);\n    }\n    let json = reflectToJson((0,_reflect_reflect_js__WEBPACK_IMPORTED_MODULE_0__.reflect)(desc, message), opts);\n    if (desc.typeName.startsWith(\"google.protobuf.\") ||\n        json === null ||\n        Array.isArray(json) ||\n        typeof json !== \"object\") {\n        json = { value: json };\n    }\n    json[\"@type\"] = val.typeUrl;\n    return json;\n}\nfunction durationToJson(val) {\n    if (Number(val.seconds) > 315576000000 ||\n        Number(val.seconds) < -315576000000) {\n        throw new Error(`cannot encode message ${val.$typeName} to JSON: value out of range`);\n    }\n    let text = val.seconds.toString();\n    if (val.nanos !== 0) {\n        let nanosStr = Math.abs(val.nanos).toString();\n        nanosStr = \"0\".repeat(9 - nanosStr.length) + nanosStr;\n        if (nanosStr.substring(3) === \"000000\") {\n            nanosStr = nanosStr.substring(0, 3);\n        }\n        else if (nanosStr.substring(6) === \"000\") {\n            nanosStr = nanosStr.substring(0, 6);\n        }\n        text += \".\" + nanosStr;\n        if (val.nanos < 0 && Number(val.seconds) == 0) {\n            text = \"-\" + text;\n        }\n    }\n    return text + \"s\";\n}\nfunction fieldMaskToJson(val) {\n    return val.paths\n        .map((p) => {\n        if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) {\n            throw new Error(`cannot encode message ${val.$typeName} to JSON: lowerCamelCase of path name \"` +\n                p +\n                '\" is irreversible');\n        }\n        return (0,_reflect_names_js__WEBPACK_IMPORTED_MODULE_7__.protoCamelCase)(p);\n    })\n        .join(\",\");\n}\nfunction structToJson(val) {\n    const json = {};\n    for (const [k, v] of Object.entries(val.fields)) {\n        json[k] = valueToJson(v);\n    }\n    return json;\n}\nfunction valueToJson(val) {\n    switch (val.kind.case) {\n        case \"nullValue\":\n            return null;\n        case \"numberValue\":\n            if (!Number.isFinite(val.kind.value)) {\n                throw new Error(`${val.$typeName} cannot be NaN or Infinity`);\n            }\n            return val.kind.value;\n        case \"boolValue\":\n            return val.kind.value;\n        case \"stringValue\":\n            return val.kind.value;\n        case \"structValue\":\n            return structToJson(val.kind.value);\n        case \"listValue\":\n            return listValueToJson(val.kind.value);\n        default:\n            throw new Error(`${val.$typeName} must have a value`);\n    }\n}\nfunction listValueToJson(val) {\n    return val.values.map(valueToJson);\n}\nfunction timestampToJson(val) {\n    const ms = Number(val.seconds) * 1000;\n    if (ms < Date.parse(\"0001-01-01T00:00:00Z\") ||\n        ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n        throw new Error(`cannot encode message ${val.$typeName} to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n    }\n    if (val.nanos < 0) {\n        throw new Error(`cannot encode message ${val.$typeName} to JSON: nanos must not be negative`);\n    }\n    let z = \"Z\";\n    if (val.nanos > 0) {\n        const nanosStr = (val.nanos + 1000000000).toString().substring(1);\n        if (nanosStr.substring(3) === \"000000\") {\n            z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n        }\n        else if (nanosStr.substring(6) === \"000\") {\n            z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n        }\n        else {\n            z = \".\" + nanosStr + \"Z\";\n        }\n    }\n    return new Date(ms).toISOString().replace(\".000Z\", z);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-json.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/base64-encoding.js":
/*!**************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/base64-encoding.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: () => (/* binding */ base64Decode),\n/* harmony export */   base64Encode: () => (/* binding */ base64Encode)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nfunction base64Decode(base64Str) {\n    const table = getDecodeTable();\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = (base64Str.length * 3) / 4;\n    if (base64Str[base64Str.length - 2] == \"=\")\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == \"=\")\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // previous byte\n    for (let i = 0; i < base64Str.length; i++) {\n        b = table[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            switch (base64Str[i]) {\n                // @ts-ignore TS7029: Fallthrough case in switch -- ignore instead of expect-error for compiler settings without noFallthroughCasesInSwitch: true\n                case \"=\":\n                    groupPos = 0; // reset state when padding found\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\t\":\n                case \" \":\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(\"invalid base64 string\");\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = ((p & 3) << 6) | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(\"invalid base64 string\");\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encode a byte array to a base64 string.\n *\n * By default, this function uses the standard base64 encoding with padding.\n *\n * To encode without padding, use encoding = \"std_raw\".\n *\n * To encode with the URL encoding, use encoding = \"url\", which replaces the\n * characters +/ by their URL-safe counterparts -_, and omits padding.\n */\nfunction base64Encode(bytes, encoding = \"std\") {\n    const table = getEncodeTable(encoding);\n    const pad = encoding == \"std\";\n    let base64 = \"\", groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += table[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += table[p | (b >> 4)];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += table[p | (b >> 6)];\n                base64 += table[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // add output padding\n    if (groupPos) {\n        base64 += table[p];\n        if (pad) {\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n    }\n    return base64;\n}\n// lookup table from base64 character to byte\nlet encodeTableStd;\nlet encodeTableUrl;\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decodeTable;\nfunction getEncodeTable(encoding) {\n    if (!encodeTableStd) {\n        encodeTableStd =\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n        encodeTableUrl = encodeTableStd.slice(0, -2).concat(\"-\", \"_\");\n    }\n    return encoding == \"url\"\n        ? // biome-ignore lint/style/noNonNullAssertion: TS fails to narrow down\n            encodeTableUrl\n        : encodeTableStd;\n}\nfunction getDecodeTable() {\n    if (!decodeTable) {\n        decodeTable = [];\n        const encodeTable = getEncodeTable(\"std\");\n        for (let i = 0; i < encodeTable.length; i++)\n            decodeTable[encodeTable[i].charCodeAt(0)] = i;\n        // support base64url variants\n        decodeTable[\"-\".charCodeAt(0)] = encodeTable.indexOf(\"+\");\n        decodeTable[\"_\".charCodeAt(0)] = encodeTable.indexOf(\"/\");\n    }\n    return decodeTable;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/base64-encoding.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js":
/*!**************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryReader: () => (/* binding */ BinaryReader),\n/* harmony export */   BinaryWriter: () => (/* binding */ BinaryWriter),\n/* harmony export */   FLOAT32_MAX: () => (/* binding */ FLOAT32_MAX),\n/* harmony export */   FLOAT32_MIN: () => (/* binding */ FLOAT32_MIN),\n/* harmony export */   INT32_MAX: () => (/* binding */ INT32_MAX),\n/* harmony export */   INT32_MIN: () => (/* binding */ INT32_MIN),\n/* harmony export */   UINT32_MAX: () => (/* binding */ UINT32_MAX),\n/* harmony export */   WireType: () => (/* binding */ WireType)\n/* harmony export */ });\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../proto-int64.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _text_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text-encoding.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-encoding.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n/**\n * Maximum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nconst FLOAT32_MAX = 3.4028234663852886e38;\n/**\n * Minimum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nconst FLOAT32_MIN = -3.4028234663852886e38;\n/**\n * Maximum value for an unsigned 32-bit integer (Protobuf UINT32, FIXED32).\n */\nconst UINT32_MAX = 0xffffffff;\n/**\n * Maximum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nconst INT32_MAX = 0x7fffffff;\n/**\n * Minimum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nconst INT32_MIN = -0x80000000;\nclass BinaryWriter {\n    constructor(encodeUtf8 = (0,_text_encoding_js__WEBPACK_IMPORTED_MODULE_0__.getTextEncoding)().encodeUtf8) {\n        this.encodeUtf8 = encodeUtf8;\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n            this.buf = [];\n        }\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        (0,_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.encodeUtf8(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0,_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value);\n        (0,_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        const tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        (0,_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        const tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(value);\n        (0,_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nclass BinaryReader {\n    constructor(buf, decodeUtf8 = (0,_text_encoding_js__WEBPACK_IMPORTED_MODULE_0__.getTextEncoding)().decodeUtf8) {\n        this.decodeUtf8 = decodeUtf8;\n        this.varint64 = _varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = _varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32read;\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // @ts-ignore TS7029: Fallthrough case in switch -- ignore instead of expect-error for compiler settings without noFallthroughCasesInSwitch: true\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        // biome-ignore lint/suspicious/noAssignInExpressions: no\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.decodeUtf8(this.bytes());\n    }\n}\n/**\n * Assert a valid signed protobuf 32-bit integer as a number or string.\n */\nfunction assertInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid int32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > INT32_MAX ||\n        arg < INT32_MIN)\n        throw new Error(\"invalid int32: \" + arg);\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer as a number or string.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid uint32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > UINT32_MAX ||\n        arg < 0)\n        throw new Error(\"invalid uint32: \" + arg);\n}\n/**\n * Assert a valid protobuf float value as a number or string.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg == \"string\") {\n        const o = arg;\n        arg = Number(arg);\n        if (Number.isNaN(arg) && o !== \"NaN\") {\n            throw new Error(\"invalid float32: \" + o);\n        }\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid float32: \" + typeof arg);\n    }\n    if (Number.isFinite(arg) &&\n        (arg > FLOAT32_MAX || arg < FLOAT32_MIN))\n        throw new Error(\"invalid float32: \" + arg);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/binary-encoding.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-encoding.js":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-encoding.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configureTextEncoding: () => (/* binding */ configureTextEncoding),\n/* harmony export */   getTextEncoding: () => (/* binding */ getTextEncoding)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst symbol = Symbol.for(\"@bufbuild/protobuf/text-encoding\");\n/**\n * Protobuf-ES requires the Text Encoding API to convert UTF-8 from and to\n * binary. This WHATWG API is widely available, but it is not part of the\n * ECMAScript standard. On runtimes where it is not available, use this\n * function to provide your own implementation.\n *\n * Note that the Text Encoding API does not provide a way to validate UTF-8.\n * Our implementation falls back to use encodeURIComponent().\n */\nfunction configureTextEncoding(textEncoding) {\n    globalThis[symbol] = textEncoding;\n}\nfunction getTextEncoding() {\n    if (globalThis[symbol] == undefined) {\n        const te = new globalThis.TextEncoder();\n        const td = new globalThis.TextDecoder();\n        globalThis[symbol] = {\n            encodeUtf8(text) {\n                return te.encode(text);\n            },\n            decodeUtf8(bytes) {\n                return td.decode(bytes);\n            },\n            checkUtf8(text) {\n                try {\n                    encodeURIComponent(text);\n                    return true;\n                }\n                catch (_) {\n                    return false;\n                }\n            },\n        };\n    }\n    return globalThis[symbol];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3dpcmUvdGV4dC1lbmNvZGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3dpcmUvdGV4dC1lbmNvZGluZy5qcz8zNTIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5jb25zdCBzeW1ib2wgPSBTeW1ib2wuZm9yKFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmL3RleHQtZW5jb2RpbmdcIik7XG4vKipcbiAqIFByb3RvYnVmLUVTIHJlcXVpcmVzIHRoZSBUZXh0IEVuY29kaW5nIEFQSSB0byBjb252ZXJ0IFVURi04IGZyb20gYW5kIHRvXG4gKiBiaW5hcnkuIFRoaXMgV0hBVFdHIEFQSSBpcyB3aWRlbHkgYXZhaWxhYmxlLCBidXQgaXQgaXMgbm90IHBhcnQgb2YgdGhlXG4gKiBFQ01BU2NyaXB0IHN0YW5kYXJkLiBPbiBydW50aW1lcyB3aGVyZSBpdCBpcyBub3QgYXZhaWxhYmxlLCB1c2UgdGhpc1xuICogZnVuY3Rpb24gdG8gcHJvdmlkZSB5b3VyIG93biBpbXBsZW1lbnRhdGlvbi5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIFRleHQgRW5jb2RpbmcgQVBJIGRvZXMgbm90IHByb3ZpZGUgYSB3YXkgdG8gdmFsaWRhdGUgVVRGLTguXG4gKiBPdXIgaW1wbGVtZW50YXRpb24gZmFsbHMgYmFjayB0byB1c2UgZW5jb2RlVVJJQ29tcG9uZW50KCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVUZXh0RW5jb2RpbmcodGV4dEVuY29kaW5nKSB7XG4gICAgZ2xvYmFsVGhpc1tzeW1ib2xdID0gdGV4dEVuY29kaW5nO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFRleHRFbmNvZGluZygpIHtcbiAgICBpZiAoZ2xvYmFsVGhpc1tzeW1ib2xdID09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCB0ZSA9IG5ldyBnbG9iYWxUaGlzLlRleHRFbmNvZGVyKCk7XG4gICAgICAgIGNvbnN0IHRkID0gbmV3IGdsb2JhbFRoaXMuVGV4dERlY29kZXIoKTtcbiAgICAgICAgZ2xvYmFsVGhpc1tzeW1ib2xdID0ge1xuICAgICAgICAgICAgZW5jb2RlVXRmOCh0ZXh0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRlLmVuY29kZSh0ZXh0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZWNvZGVVdGY4KGJ5dGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRkLmRlY29kZShieXRlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hlY2tVdGY4KHRleHQpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQodGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoXykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFRoaXNbc3ltYm9sXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-encoding.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-format.js":
/*!**********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-format.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTextFormatEnumValue: () => (/* binding */ parseTextFormatEnumValue),\n/* harmony export */   parseTextFormatScalarValue: () => (/* binding */ parseTextFormatScalarValue)\n/* harmony export */ });\n/* harmony import */ var _descriptors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../descriptors.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/descriptors.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto-int64.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse an enum value from the Protobuf text format.\n *\n * @private\n */\nfunction parseTextFormatEnumValue(descEnum, value) {\n    const enumValue = descEnum.values.find((v) => v.name === value);\n    if (!enumValue) {\n        throw new Error(`cannot parse ${descEnum} default value: ${value}`);\n    }\n    return enumValue.number;\n}\n/**\n * Parse a scalar value from the Protobuf text format.\n *\n * @private\n */\nfunction parseTextFormatScalarValue(type, value) {\n    switch (type) {\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return value;\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES: {\n            const u = unescapeBytesDefaultValue(value);\n            if (u === false) {\n                throw new Error(`cannot parse ${_descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType[type]} default value: ${value}`);\n            }\n            return u;\n        }\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            return _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.parse(value);\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n            return _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.uParse(value);\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FLOAT:\n            switch (value) {\n                case \"inf\":\n                    return Number.POSITIVE_INFINITY;\n                case \"-inf\":\n                    return Number.NEGATIVE_INFINITY;\n                case \"nan\":\n                    return Number.NaN;\n                default:\n                    return parseFloat(value);\n            }\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return value === \"true\";\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED32:\n        case _descriptors_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED32:\n            return parseInt(value, 10);\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        },\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case \"\\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case \"\\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case \"b\":\n                            b.push(0x08);\n                            break;\n                        case \"f\":\n                            b.push(0x0c);\n                            break;\n                        case \"n\":\n                            b.push(0x0a);\n                            break;\n                        case \"r\":\n                            b.push(0x0d);\n                            break;\n                        case \"t\":\n                            b.push(0x09);\n                            break;\n                        case \"v\":\n                            b.push(0x0b);\n                            break;\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 8);\n                            if (Number.isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"x\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (Number.isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"u\": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (Number.isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, n, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                            break;\n                        }\n                        case \"U\": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, tc.lo, true);\n                            view.setInt32(4, tc.hi, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/text-format.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js":
/*!*****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   int64FromString: () => (/* binding */ int64FromString),\n/* harmony export */   int64ToString: () => (/* binding */ int64ToString),\n/* harmony export */   uInt64ToString: () => (/* binding */ uInt64ToString),\n/* harmony export */   varint32read: () => (/* binding */ varint32read),\n/* harmony export */   varint32write: () => (/* binding */ varint32write),\n/* harmony export */   varint64read: () => (/* binding */ varint64read),\n/* harmony export */   varint64write: () => (/* binding */ varint64write)\n/* harmony export */ });\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1fffff) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xffffff;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;\n    const high = (hi >> 16) & 0xffff;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return (digitC.toString() +\n        decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA));\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3dpcmUvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RDtBQUM1RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixhQUFhO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxPQUFPLFNBQVM7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9DQUFvQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHV0by9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGJ1ZmJ1aWxkK3Byb3RvYnVmQDIuNy4wL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vd2lyZS92YXJpbnQuanM/N2NkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAwOCBHb29nbGUgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vXG4vLyBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXRcbi8vIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmVcbi8vIG1ldDpcbi8vXG4vLyAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0XG4vLyBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4vLyAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmVcbi8vIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXJcbi8vIGluIHRoZSBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGVcbi8vIGRpc3RyaWJ1dGlvbi5cbi8vICogTmVpdGhlciB0aGUgbmFtZSBvZiBHb29nbGUgSW5jLiBub3IgdGhlIG5hbWVzIG9mIGl0c1xuLy8gY29udHJpYnV0b3JzIG1heSBiZSB1c2VkIHRvIGVuZG9yc2Ugb3IgcHJvbW90ZSBwcm9kdWN0cyBkZXJpdmVkIGZyb21cbi8vIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uXG4vL1xuLy8gVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SU1xuLy8gXCJBUyBJU1wiIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVFxuLy8gTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SXG4vLyBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVFxuLy8gT1dORVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsXG4vLyBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UXG4vLyBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSxcbi8vIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWVxuLy8gVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVFxuLy8gKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFXG4vLyBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuLy9cbi8vIENvZGUgZ2VuZXJhdGVkIGJ5IHRoZSBQcm90b2NvbCBCdWZmZXIgY29tcGlsZXIgaXMgb3duZWQgYnkgdGhlIG93bmVyXG4vLyBvZiB0aGUgaW5wdXQgZmlsZSB1c2VkIHdoZW4gZ2VuZXJhdGluZyBpdC4gIFRoaXMgY29kZSBpcyBub3Rcbi8vIHN0YW5kYWxvbmUgYW5kIHJlcXVpcmVzIGEgc3VwcG9ydCBsaWJyYXJ5IHRvIGJlIGxpbmtlZCB3aXRoIGl0LiAgVGhpc1xuLy8gc3VwcG9ydCBsaWJyYXJ5IGlzIGl0c2VsZiBjb3ZlcmVkIGJ5IHRoZSBhYm92ZSBsaWNlbnNlLlxuLyoqXG4gKiBSZWFkIGEgNjQgYml0IHZhcmludCBhcyB0d28gSlMgbnVtYmVycy5cbiAqXG4gKiBSZXR1cm5zIHR1cGxlOlxuICogWzBdOiBsb3cgYml0c1xuICogWzFdOiBoaWdoIGJpdHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAwOCBHb29nbGUgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb3RvY29sYnVmZmVycy9wcm90b2J1Zi9ibG9iLzhhNzE5MjdkNzRhNGNlMzRlZmUyZDg3NjlmZGExOThmNTJkMjBkMTIvanMvZXhwZXJpbWVudGFsL3J1bnRpbWUva2VybmVsL2J1ZmZlcl9kZWNvZGVyLmpzI0wxNzVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhcmludDY0cmVhZCgpIHtcbiAgICBsZXQgbG93Qml0cyA9IDA7XG4gICAgbGV0IGhpZ2hCaXRzID0gMDtcbiAgICBmb3IgKGxldCBzaGlmdCA9IDA7IHNoaWZ0IDwgMjg7IHNoaWZ0ICs9IDcpIHtcbiAgICAgICAgbGV0IGIgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICAgICAgbG93Qml0cyB8PSAoYiAmIDB4N2YpIDw8IHNoaWZ0O1xuICAgICAgICBpZiAoKGIgJiAweDgwKSA9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmFzc2VydEJvdW5kcygpO1xuICAgICAgICAgICAgcmV0dXJuIFtsb3dCaXRzLCBoaWdoQml0c107XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IG1pZGRsZUJ5dGUgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICAvLyBsYXN0IGZvdXIgYml0cyBvZiB0aGUgZmlyc3QgMzIgYml0IG51bWJlclxuICAgIGxvd0JpdHMgfD0gKG1pZGRsZUJ5dGUgJiAweDBmKSA8PCAyODtcbiAgICAvLyAzIHVwcGVyIGJpdHMgYXJlIHBhcnQgb2YgdGhlIG5leHQgMzIgYml0IG51bWJlclxuICAgIGhpZ2hCaXRzID0gKG1pZGRsZUJ5dGUgJiAweDcwKSA+PiA0O1xuICAgIGlmICgobWlkZGxlQnl0ZSAmIDB4ODApID09IDApIHtcbiAgICAgICAgdGhpcy5hc3NlcnRCb3VuZHMoKTtcbiAgICAgICAgcmV0dXJuIFtsb3dCaXRzLCBoaWdoQml0c107XG4gICAgfVxuICAgIGZvciAobGV0IHNoaWZ0ID0gMzsgc2hpZnQgPD0gMzE7IHNoaWZ0ICs9IDcpIHtcbiAgICAgICAgbGV0IGIgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICAgICAgaGlnaEJpdHMgfD0gKGIgJiAweDdmKSA8PCBzaGlmdDtcbiAgICAgICAgaWYgKChiICYgMHg4MCkgPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5hc3NlcnRCb3VuZHMoKTtcbiAgICAgICAgICAgIHJldHVybiBbbG93Qml0cywgaGlnaEJpdHNdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgdmFyaW50XCIpO1xufVxuLyoqXG4gKiBXcml0ZSBhIDY0IGJpdCB2YXJpbnQsIGdpdmVuIGFzIHR3byBKUyBudW1iZXJzLCB0byB0aGUgZ2l2ZW4gYnl0ZXMgYXJyYXkuXG4gKlxuICogQ29weXJpZ2h0IDIwMDggR29vZ2xlIEluYy4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm90b2NvbGJ1ZmZlcnMvcHJvdG9idWYvYmxvYi84YTcxOTI3ZDc0YTRjZTM0ZWZlMmQ4NzY5ZmRhMTk4ZjUyZDIwZDEyL2pzL2V4cGVyaW1lbnRhbC9ydW50aW1lL2tlcm5lbC93cml0ZXIuanMjTDM0NFxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFyaW50NjR3cml0ZShsbywgaGksIGJ5dGVzKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyODsgaSA9IGkgKyA3KSB7XG4gICAgICAgIGNvbnN0IHNoaWZ0ID0gbG8gPj4+IGk7XG4gICAgICAgIGNvbnN0IGhhc05leHQgPSAhKHNoaWZ0ID4+PiA3ID09IDAgJiYgaGkgPT0gMCk7XG4gICAgICAgIGNvbnN0IGJ5dGUgPSAoaGFzTmV4dCA/IHNoaWZ0IHwgMHg4MCA6IHNoaWZ0KSAmIDB4ZmY7XG4gICAgICAgIGJ5dGVzLnB1c2goYnl0ZSk7XG4gICAgICAgIGlmICghaGFzTmV4dCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNwbGl0Qml0cyA9ICgobG8gPj4+IDI4KSAmIDB4MGYpIHwgKChoaSAmIDB4MDcpIDw8IDQpO1xuICAgIGNvbnN0IGhhc01vcmVCaXRzID0gIShoaSA+PiAzID09IDApO1xuICAgIGJ5dGVzLnB1c2goKGhhc01vcmVCaXRzID8gc3BsaXRCaXRzIHwgMHg4MCA6IHNwbGl0Qml0cykgJiAweGZmKTtcbiAgICBpZiAoIWhhc01vcmVCaXRzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDM7IGkgPCAzMTsgaSA9IGkgKyA3KSB7XG4gICAgICAgIGNvbnN0IHNoaWZ0ID0gaGkgPj4+IGk7XG4gICAgICAgIGNvbnN0IGhhc05leHQgPSAhKHNoaWZ0ID4+PiA3ID09IDApO1xuICAgICAgICBjb25zdCBieXRlID0gKGhhc05leHQgPyBzaGlmdCB8IDB4ODAgOiBzaGlmdCkgJiAweGZmO1xuICAgICAgICBieXRlcy5wdXNoKGJ5dGUpO1xuICAgICAgICBpZiAoIWhhc05leHQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBieXRlcy5wdXNoKChoaSA+Pj4gMzEpICYgMHgwMSk7XG59XG4vLyBjb25zdGFudHMgZm9yIGJpbmFyeSBtYXRoXG5jb25zdCBUV09fUFdSXzMyX0RCTCA9IDB4MTAwMDAwMDAwO1xuLyoqXG4gKiBQYXJzZSBkZWNpbWFsIHN0cmluZyBvZiA2NCBiaXQgaW50ZWdlciB2YWx1ZSBhcyB0d28gSlMgbnVtYmVycy5cbiAqXG4gKiBDb3B5cmlnaHQgMjAwOCBHb29nbGUgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb3RvY29sYnVmZmVycy9wcm90b2J1Zi1qYXZhc2NyaXB0L2Jsb2IvYTQyOGM1ODI3M2FiYWQwN2M2NjA3MWQ5NzUzYmM0ZDEyODlkZTQyNi9leHBlcmltZW50YWwvcnVudGltZS9pbnQ2NC5qcyNMMTBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGludDY0RnJvbVN0cmluZyhkZWMpIHtcbiAgICAvLyBDaGVjayBmb3IgbWludXMgc2lnbi5cbiAgICBjb25zdCBtaW51cyA9IGRlY1swXSA9PT0gXCItXCI7XG4gICAgaWYgKG1pbnVzKSB7XG4gICAgICAgIGRlYyA9IGRlYy5zbGljZSgxKTtcbiAgICB9XG4gICAgLy8gV29yayA2IGRlY2ltYWwgZGlnaXRzIGF0IGEgdGltZSwgYWN0aW5nIGxpa2Ugd2UncmUgY29udmVydGluZyBiYXNlIDFlNlxuICAgIC8vIGRpZ2l0cyB0byBiaW5hcnkuIFRoaXMgaXMgc2FmZSB0byBkbyB3aXRoIGZsb2F0aW5nIHBvaW50IG1hdGggYmVjYXVzZVxuICAgIC8vIE51bWJlci5pc1NhZmVJbnRlZ2VyKEFMTF8zMl9CSVRTICogMWU2KSA9PSB0cnVlLlxuICAgIGNvbnN0IGJhc2UgPSAxZTY7XG4gICAgbGV0IGxvd0JpdHMgPSAwO1xuICAgIGxldCBoaWdoQml0cyA9IDA7XG4gICAgZnVuY3Rpb24gYWRkMWU2ZGlnaXQoYmVnaW4sIGVuZCkge1xuICAgICAgICAvLyBOb3RlOiBOdW1iZXIoJycpIGlzIDAuXG4gICAgICAgIGNvbnN0IGRpZ2l0MWU2ID0gTnVtYmVyKGRlYy5zbGljZShiZWdpbiwgZW5kKSk7XG4gICAgICAgIGhpZ2hCaXRzICo9IGJhc2U7XG4gICAgICAgIGxvd0JpdHMgPSBsb3dCaXRzICogYmFzZSArIGRpZ2l0MWU2O1xuICAgICAgICAvLyBDYXJyeSBiaXRzIGZyb20gbG93Qml0cyB0b1xuICAgICAgICBpZiAobG93Qml0cyA+PSBUV09fUFdSXzMyX0RCTCkge1xuICAgICAgICAgICAgaGlnaEJpdHMgPSBoaWdoQml0cyArICgobG93Qml0cyAvIFRXT19QV1JfMzJfREJMKSB8IDApO1xuICAgICAgICAgICAgbG93Qml0cyA9IGxvd0JpdHMgJSBUV09fUFdSXzMyX0RCTDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhZGQxZTZkaWdpdCgtMjQsIC0xOCk7XG4gICAgYWRkMWU2ZGlnaXQoLTE4LCAtMTIpO1xuICAgIGFkZDFlNmRpZ2l0KC0xMiwgLTYpO1xuICAgIGFkZDFlNmRpZ2l0KC02KTtcbiAgICByZXR1cm4gbWludXMgPyBuZWdhdGUobG93Qml0cywgaGlnaEJpdHMpIDogbmV3Qml0cyhsb3dCaXRzLCBoaWdoQml0cyk7XG59XG4vKipcbiAqIExvc3NsZXNzbHkgY29udmVydHMgYSA2NC1iaXQgc2lnbmVkIGludGVnZXIgaW4gMzI6MzIgc3BsaXQgcmVwcmVzZW50YXRpb25cbiAqIGludG8gYSBkZWNpbWFsIHN0cmluZy5cbiAqXG4gKiBDb3B5cmlnaHQgMjAwOCBHb29nbGUgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb3RvY29sYnVmZmVycy9wcm90b2J1Zi1qYXZhc2NyaXB0L2Jsb2IvYTQyOGM1ODI3M2FiYWQwN2M2NjA3MWQ5NzUzYmM0ZDEyODlkZTQyNi9leHBlcmltZW50YWwvcnVudGltZS9pbnQ2NC5qcyNMMTBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGludDY0VG9TdHJpbmcobG8sIGhpKSB7XG4gICAgbGV0IGJpdHMgPSBuZXdCaXRzKGxvLCBoaSk7XG4gICAgLy8gSWYgd2UncmUgdHJlYXRpbmcgdGhlIGlucHV0IGFzIGEgc2lnbmVkIHZhbHVlIGFuZCB0aGUgaGlnaCBiaXQgaXMgc2V0LCBkb1xuICAgIC8vIGEgbWFudWFsIHR3bydzIGNvbXBsZW1lbnQgY29udmVyc2lvbiBiZWZvcmUgdGhlIGRlY2ltYWwgY29udmVyc2lvbi5cbiAgICBjb25zdCBuZWdhdGl2ZSA9IGJpdHMuaGkgJiAweDgwMDAwMDAwO1xuICAgIGlmIChuZWdhdGl2ZSkge1xuICAgICAgICBiaXRzID0gbmVnYXRlKGJpdHMubG8sIGJpdHMuaGkpO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB1SW50NjRUb1N0cmluZyhiaXRzLmxvLCBiaXRzLmhpKTtcbiAgICByZXR1cm4gbmVnYXRpdmUgPyBcIi1cIiArIHJlc3VsdCA6IHJlc3VsdDtcbn1cbi8qKlxuICogTG9zc2xlc3NseSBjb252ZXJ0cyBhIDY0LWJpdCB1bnNpZ25lZCBpbnRlZ2VyIGluIDMyOjMyIHNwbGl0IHJlcHJlc2VudGF0aW9uXG4gKiBpbnRvIGEgZGVjaW1hbCBzdHJpbmcuXG4gKlxuICogQ29weXJpZ2h0IDIwMDggR29vZ2xlIEluYy4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm90b2NvbGJ1ZmZlcnMvcHJvdG9idWYtamF2YXNjcmlwdC9ibG9iL2E0MjhjNTgyNzNhYmFkMDdjNjYwNzFkOTc1M2JjNGQxMjg5ZGU0MjYvZXhwZXJpbWVudGFsL3J1bnRpbWUvaW50NjQuanMjTDEwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1SW50NjRUb1N0cmluZyhsbywgaGkpIHtcbiAgICAoeyBsbywgaGkgfSA9IHRvVW5zaWduZWQobG8sIGhpKSk7XG4gICAgLy8gU2tpcCB0aGUgZXhwZW5zaXZlIGNvbnZlcnNpb24gaWYgdGhlIG51bWJlciBpcyBzbWFsbCBlbm91Z2ggdG8gdXNlIHRoZVxuICAgIC8vIGJ1aWx0LWluIGNvbnZlcnNpb25zLlxuICAgIC8vIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSID0gMHgwMDFGRkZGRiBGRkZGRkZGRiwgdGh1cyBhbnkgbnVtYmVyIHdpdGhcbiAgICAvLyBoaWdoQml0cyA8PSAweDFGRkZGRiBjYW4gYmUgc2FmZWx5IGV4cHJlc3NlZCB3aXRoIGEgZG91YmxlIGFuZCByZXRhaW5cbiAgICAvLyBpbnRlZ2VyIHByZWNpc2lvbi5cbiAgICAvLyBQcm92ZW4gYnk6IE51bWJlci5pc1NhZmVJbnRlZ2VyKDB4MUZGRkZGICogMioqMzIgKyAweEZGRkZGRkZGKSA9PSB0cnVlLlxuICAgIGlmIChoaSA8PSAweDFmZmZmZikge1xuICAgICAgICByZXR1cm4gU3RyaW5nKFRXT19QV1JfMzJfREJMICogaGkgKyBsbyk7XG4gICAgfVxuICAgIC8vIFdoYXQgdGhpcyBjb2RlIGlzIGRvaW5nIGlzIGVzc2VudGlhbGx5IGNvbnZlcnRpbmcgdGhlIGlucHV0IG51bWJlciBmcm9tXG4gICAgLy8gYmFzZS0yIHRvIGJhc2UtMWU3LCB3aGljaCBhbGxvd3MgdXMgdG8gcmVwcmVzZW50IHRoZSA2NC1iaXQgcmFuZ2Ugd2l0aFxuICAgIC8vIG9ubHkgMyAodmVyeSBsYXJnZSkgZGlnaXRzLiBUaG9zZSBkaWdpdHMgYXJlIHRoZW4gdHJpdmlhbCB0byBjb252ZXJ0IHRvXG4gICAgLy8gYSBiYXNlLTEwIHN0cmluZy5cbiAgICAvLyBUaGUgbWFnaWMgbnVtYmVycyB1c2VkIGhlcmUgYXJlIC1cbiAgICAvLyAyXjI0ID0gMTY3NzcyMTYgPSAoMSw2Nzc3MjE2KSBpbiBiYXNlLTFlNy5cbiAgICAvLyAyXjQ4ID0gMjgxNDc0OTc2NzEwNjU2ID0gKDIsODE0NzQ5Nyw2NzEwNjU2KSBpbiBiYXNlLTFlNy5cbiAgICAvLyBTcGxpdCAzMjozMiByZXByZXNlbnRhdGlvbiBpbnRvIDE2OjI0OjI0IHJlcHJlc2VudGF0aW9uIHNvIG91clxuICAgIC8vIGludGVybWVkaWF0ZSBkaWdpdHMgZG9uJ3Qgb3ZlcmZsb3cuXG4gICAgY29uc3QgbG93ID0gbG8gJiAweGZmZmZmZjtcbiAgICBjb25zdCBtaWQgPSAoKGxvID4+PiAyNCkgfCAoaGkgPDwgOCkpICYgMHhmZmZmZmY7XG4gICAgY29uc3QgaGlnaCA9IChoaSA+PiAxNikgJiAweGZmZmY7XG4gICAgLy8gQXNzZW1ibGUgb3VyIHRocmVlIGJhc2UtMWU3IGRpZ2l0cywgaWdub3JpbmcgY2Fycmllcy4gVGhlIG1heGltdW1cbiAgICAvLyB2YWx1ZSBpbiBhIGRpZ2l0IGF0IHRoaXMgc3RlcCBpcyByZXByZXNlbnRhYmxlIGFzIGEgNDgtYml0IGludGVnZXIsIHdoaWNoXG4gICAgLy8gY2FuIGJlIHN0b3JlZCBpbiBhIDY0LWJpdCBmbG9hdGluZyBwb2ludCBudW1iZXIuXG4gICAgbGV0IGRpZ2l0QSA9IGxvdyArIG1pZCAqIDY3NzcyMTYgKyBoaWdoICogNjcxMDY1NjtcbiAgICBsZXQgZGlnaXRCID0gbWlkICsgaGlnaCAqIDgxNDc0OTc7XG4gICAgbGV0IGRpZ2l0QyA9IGhpZ2ggKiAyO1xuICAgIC8vIEFwcGx5IGNhcnJpZXMgZnJvbSBBIHRvIEIgYW5kIGZyb20gQiB0byBDLlxuICAgIGNvbnN0IGJhc2UgPSAxMDAwMDAwMDtcbiAgICBpZiAoZGlnaXRBID49IGJhc2UpIHtcbiAgICAgICAgZGlnaXRCICs9IE1hdGguZmxvb3IoZGlnaXRBIC8gYmFzZSk7XG4gICAgICAgIGRpZ2l0QSAlPSBiYXNlO1xuICAgIH1cbiAgICBpZiAoZGlnaXRCID49IGJhc2UpIHtcbiAgICAgICAgZGlnaXRDICs9IE1hdGguZmxvb3IoZGlnaXRCIC8gYmFzZSk7XG4gICAgICAgIGRpZ2l0QiAlPSBiYXNlO1xuICAgIH1cbiAgICAvLyBJZiBkaWdpdEMgaXMgMCwgdGhlbiB3ZSBzaG91bGQgaGF2ZSByZXR1cm5lZCBpbiB0aGUgdHJpdmlhbCBjb2RlIHBhdGhcbiAgICAvLyBhdCB0aGUgdG9wIGZvciBub24tc2FmZSBpbnRlZ2Vycy4gR2l2ZW4gdGhpcywgd2UgY2FuIGFzc3VtZSBib3RoIGRpZ2l0QlxuICAgIC8vIGFuZCBkaWdpdEEgbmVlZCBsZWFkaW5nIHplcm9zLlxuICAgIHJldHVybiAoZGlnaXRDLnRvU3RyaW5nKCkgK1xuICAgICAgICBkZWNpbWFsRnJvbTFlN1dpdGhMZWFkaW5nWmVyb3MoZGlnaXRCKSArXG4gICAgICAgIGRlY2ltYWxGcm9tMWU3V2l0aExlYWRpbmdaZXJvcyhkaWdpdEEpKTtcbn1cbmZ1bmN0aW9uIHRvVW5zaWduZWQobG8sIGhpKSB7XG4gICAgcmV0dXJuIHsgbG86IGxvID4+PiAwLCBoaTogaGkgPj4+IDAgfTtcbn1cbmZ1bmN0aW9uIG5ld0JpdHMobG8sIGhpKSB7XG4gICAgcmV0dXJuIHsgbG86IGxvIHwgMCwgaGk6IGhpIHwgMCB9O1xufVxuLyoqXG4gKiBSZXR1cm5zIHR3bydzIGNvbXBsaW1lbnQgbmVnYXRpb24gb2YgaW5wdXQuXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL09wZXJhdG9ycy9CaXR3aXNlX09wZXJhdG9ycyNTaWduZWRfMzItYml0X2ludGVnZXJzXG4gKi9cbmZ1bmN0aW9uIG5lZ2F0ZShsb3dCaXRzLCBoaWdoQml0cykge1xuICAgIGhpZ2hCaXRzID0gfmhpZ2hCaXRzO1xuICAgIGlmIChsb3dCaXRzKSB7XG4gICAgICAgIGxvd0JpdHMgPSB+bG93Qml0cyArIDE7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBJZiBsb3dCaXRzIGlzIDAsIHRoZW4gYml0d2lzZS1ub3QgaXMgMHhGRkZGRkZGRixcbiAgICAgICAgLy8gYWRkaW5nIDEgdG8gdGhhdCwgcmVzdWx0cyBpbiAweDEwMDAwMDAwMCwgd2hpY2ggbGVhdmVzXG4gICAgICAgIC8vIHRoZSBsb3cgYml0cyAweDAgYW5kIHNpbXBseSBhZGRzIG9uZSB0byB0aGUgaGlnaCBiaXRzLlxuICAgICAgICBoaWdoQml0cyArPSAxO1xuICAgIH1cbiAgICByZXR1cm4gbmV3Qml0cyhsb3dCaXRzLCBoaWdoQml0cyk7XG59XG4vKipcbiAqIFJldHVybnMgZGVjaW1hbCByZXByZXNlbnRhdGlvbiBvZiBkaWdpdDFlNyB3aXRoIGxlYWRpbmcgemVyb3MuXG4gKi9cbmNvbnN0IGRlY2ltYWxGcm9tMWU3V2l0aExlYWRpbmdaZXJvcyA9IChkaWdpdDFlNykgPT4ge1xuICAgIGNvbnN0IHBhcnRpYWwgPSBTdHJpbmcoZGlnaXQxZTcpO1xuICAgIHJldHVybiBcIjAwMDAwMDBcIi5zbGljZShwYXJ0aWFsLmxlbmd0aCkgKyBwYXJ0aWFsO1xufTtcbi8qKlxuICogV3JpdGUgYSAzMiBiaXQgdmFyaW50LCBzaWduZWQgb3IgdW5zaWduZWQuIFNhbWUgYXMgYHZhcmludDY0d3JpdGUoMCwgdmFsdWUsIGJ5dGVzKWBcbiAqXG4gKiBDb3B5cmlnaHQgMjAwOCBHb29nbGUgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb3RvY29sYnVmZmVycy9wcm90b2J1Zi9ibG9iLzFiMTg4MzNmNGYyYTJmNjgxZjRlNGEyNWNkZjNiMGE0MzExNWVjMjYvanMvYmluYXJ5L2VuY29kZXIuanMjTDE0NFxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFyaW50MzJ3cml0ZSh2YWx1ZSwgYnl0ZXMpIHtcbiAgICBpZiAodmFsdWUgPj0gMCkge1xuICAgICAgICAvLyB3cml0ZSB2YWx1ZSBhcyB2YXJpbnQgMzJcbiAgICAgICAgd2hpbGUgKHZhbHVlID4gMHg3Zikge1xuICAgICAgICAgICAgYnl0ZXMucHVzaCgodmFsdWUgJiAweDdmKSB8IDB4ODApO1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZSA+Pj4gNztcbiAgICAgICAgfVxuICAgICAgICBieXRlcy5wdXNoKHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgOTsgaSsrKSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKCh2YWx1ZSAmIDEyNykgfCAxMjgpO1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZSA+PiA3O1xuICAgICAgICB9XG4gICAgICAgIGJ5dGVzLnB1c2goMSk7XG4gICAgfVxufVxuLyoqXG4gKiBSZWFkIGFuIHVuc2lnbmVkIDMyIGJpdCB2YXJpbnQuXG4gKlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm90b2NvbGJ1ZmZlcnMvcHJvdG9idWYvYmxvYi84YTcxOTI3ZDc0YTRjZTM0ZWZlMmQ4NzY5ZmRhMTk4ZjUyZDIwZDEyL2pzL2V4cGVyaW1lbnRhbC9ydW50aW1lL2tlcm5lbC9idWZmZXJfZGVjb2Rlci5qcyNMMjIwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YXJpbnQzMnJlYWQoKSB7XG4gICAgbGV0IGIgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICBsZXQgcmVzdWx0ID0gYiAmIDB4N2Y7XG4gICAgaWYgKChiICYgMHg4MCkgPT0gMCkge1xuICAgICAgICB0aGlzLmFzc2VydEJvdW5kcygpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBiID0gdGhpcy5idWZbdGhpcy5wb3MrK107XG4gICAgcmVzdWx0IHw9IChiICYgMHg3ZikgPDwgNztcbiAgICBpZiAoKGIgJiAweDgwKSA9PSAwKSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0Qm91bmRzKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGIgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICByZXN1bHQgfD0gKGIgJiAweDdmKSA8PCAxNDtcbiAgICBpZiAoKGIgJiAweDgwKSA9PSAwKSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0Qm91bmRzKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGIgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICByZXN1bHQgfD0gKGIgJiAweDdmKSA8PCAyMTtcbiAgICBpZiAoKGIgJiAweDgwKSA9PSAwKSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0Qm91bmRzKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIEV4dHJhY3Qgb25seSBsYXN0IDQgYml0c1xuICAgIGIgPSB0aGlzLmJ1Zlt0aGlzLnBvcysrXTtcbiAgICByZXN1bHQgfD0gKGIgJiAweDBmKSA8PCAyODtcbiAgICBmb3IgKGxldCByZWFkQnl0ZXMgPSA1OyAoYiAmIDB4ODApICE9PSAwICYmIHJlYWRCeXRlcyA8IDEwOyByZWFkQnl0ZXMrKylcbiAgICAgICAgYiA9IHRoaXMuYnVmW3RoaXMucG9zKytdO1xuICAgIGlmICgoYiAmIDB4ODApICE9IDApXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgdmFyaW50XCIpO1xuICAgIHRoaXMuYXNzZXJ0Qm91bmRzKCk7XG4gICAgLy8gUmVzdWx0IGNhbiBoYXZlIDMyIGJpdHMsIGNvbnZlcnQgaXQgdG8gdW5zaWduZWRcbiAgICByZXR1cm4gcmVzdWx0ID4+PiAwO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wire/varint.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/any.js":
/*!*************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/any.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anyIs: () => (/* binding */ anyIs),\n/* harmony export */   anyPack: () => (/* binding */ anyPack),\n/* harmony export */   anyUnpack: () => (/* binding */ anyUnpack),\n/* harmony export */   anyUnpackTo: () => (/* binding */ anyUnpackTo)\n/* harmony export */ });\n/* harmony import */ var _gen_google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gen/google/protobuf/any_pb.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/any_pb.js\");\n/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../create.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/create.js\");\n/* harmony import */ var _to_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../to-binary.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/to-binary.js\");\n/* harmony import */ var _from_binary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../from-binary.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-binary.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\nfunction anyPack(schema, message, into) {\n    let ret = false;\n    if (!into) {\n        into = (0,_create_js__WEBPACK_IMPORTED_MODULE_0__.create)(_gen_google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_1__.AnySchema);\n        ret = true;\n    }\n    into.value = (0,_to_binary_js__WEBPACK_IMPORTED_MODULE_2__.toBinary)(schema, message);\n    into.typeUrl = typeNameToUrl(message.$typeName);\n    return ret ? into : undefined;\n}\nfunction anyIs(any, descOrTypeName) {\n    if (any.typeUrl === \"\") {\n        return false;\n    }\n    const want = typeof descOrTypeName == \"string\"\n        ? descOrTypeName\n        : descOrTypeName.typeName;\n    const got = typeUrlToName(any.typeUrl);\n    return want === got;\n}\nfunction anyUnpack(any, registryOrMessageDesc) {\n    if (any.typeUrl === \"\") {\n        return undefined;\n    }\n    const desc = registryOrMessageDesc.kind == \"message\"\n        ? registryOrMessageDesc\n        : registryOrMessageDesc.getMessage(typeUrlToName(any.typeUrl));\n    if (!desc || !anyIs(any, desc)) {\n        return undefined;\n    }\n    return (0,_from_binary_js__WEBPACK_IMPORTED_MODULE_3__.fromBinary)(desc, any.value);\n}\n/**\n * Same as anyUnpack but unpacks into the target message.\n */\nfunction anyUnpackTo(any, schema, message) {\n    if (!anyIs(any, schema)) {\n        return undefined;\n    }\n    return (0,_from_binary_js__WEBPACK_IMPORTED_MODULE_3__.mergeFromBinary)(schema, message, any.value);\n}\nfunction typeNameToUrl(name) {\n    return `type.googleapis.com/${name}`;\n}\nfunction typeUrlToName(url) {\n    const slash = url.lastIndexOf(\"/\");\n    const name = slash >= 0 ? url.substring(slash + 1) : url;\n    if (!name.length) {\n        throw new Error(`invalid type url: ${url}`);\n    }\n    return name;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3drdC9hbnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0RDtBQUN0QjtBQUNLO0FBQ3FCO0FBQ3pEO0FBQ1A7QUFDQTtBQUNBLGVBQWUsa0RBQU0sQ0FBQyxxRUFBUztBQUMvQjtBQUNBO0FBQ0EsaUJBQWlCLHVEQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJEQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFlO0FBQzFCO0FBQ0E7QUFDQSxrQ0FBa0MsS0FBSztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLElBQUk7QUFDakQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS93a3QvYW55LmpzP2QwNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNSBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IEFueVNjaGVtYSB9IGZyb20gXCIuL2dlbi9nb29nbGUvcHJvdG9idWYvYW55X3BiLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tIFwiLi4vY3JlYXRlLmpzXCI7XG5pbXBvcnQgeyB0b0JpbmFyeSB9IGZyb20gXCIuLi90by1iaW5hcnkuanNcIjtcbmltcG9ydCB7IGZyb21CaW5hcnksIG1lcmdlRnJvbUJpbmFyeSB9IGZyb20gXCIuLi9mcm9tLWJpbmFyeS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGFueVBhY2soc2NoZW1hLCBtZXNzYWdlLCBpbnRvKSB7XG4gICAgbGV0IHJldCA9IGZhbHNlO1xuICAgIGlmICghaW50bykge1xuICAgICAgICBpbnRvID0gY3JlYXRlKEFueVNjaGVtYSk7XG4gICAgICAgIHJldCA9IHRydWU7XG4gICAgfVxuICAgIGludG8udmFsdWUgPSB0b0JpbmFyeShzY2hlbWEsIG1lc3NhZ2UpO1xuICAgIGludG8udHlwZVVybCA9IHR5cGVOYW1lVG9VcmwobWVzc2FnZS4kdHlwZU5hbWUpO1xuICAgIHJldHVybiByZXQgPyBpbnRvIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFueUlzKGFueSwgZGVzY09yVHlwZU5hbWUpIHtcbiAgICBpZiAoYW55LnR5cGVVcmwgPT09IFwiXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB3YW50ID0gdHlwZW9mIGRlc2NPclR5cGVOYW1lID09IFwic3RyaW5nXCJcbiAgICAgICAgPyBkZXNjT3JUeXBlTmFtZVxuICAgICAgICA6IGRlc2NPclR5cGVOYW1lLnR5cGVOYW1lO1xuICAgIGNvbnN0IGdvdCA9IHR5cGVVcmxUb05hbWUoYW55LnR5cGVVcmwpO1xuICAgIHJldHVybiB3YW50ID09PSBnb3Q7XG59XG5leHBvcnQgZnVuY3Rpb24gYW55VW5wYWNrKGFueSwgcmVnaXN0cnlPck1lc3NhZ2VEZXNjKSB7XG4gICAgaWYgKGFueS50eXBlVXJsID09PSBcIlwiKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGRlc2MgPSByZWdpc3RyeU9yTWVzc2FnZURlc2Mua2luZCA9PSBcIm1lc3NhZ2VcIlxuICAgICAgICA/IHJlZ2lzdHJ5T3JNZXNzYWdlRGVzY1xuICAgICAgICA6IHJlZ2lzdHJ5T3JNZXNzYWdlRGVzYy5nZXRNZXNzYWdlKHR5cGVVcmxUb05hbWUoYW55LnR5cGVVcmwpKTtcbiAgICBpZiAoIWRlc2MgfHwgIWFueUlzKGFueSwgZGVzYykpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGZyb21CaW5hcnkoZGVzYywgYW55LnZhbHVlKTtcbn1cbi8qKlxuICogU2FtZSBhcyBhbnlVbnBhY2sgYnV0IHVucGFja3MgaW50byB0aGUgdGFyZ2V0IG1lc3NhZ2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbnlVbnBhY2tUbyhhbnksIHNjaGVtYSwgbWVzc2FnZSkge1xuICAgIGlmICghYW55SXMoYW55LCBzY2hlbWEpKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBtZXJnZUZyb21CaW5hcnkoc2NoZW1hLCBtZXNzYWdlLCBhbnkudmFsdWUpO1xufVxuZnVuY3Rpb24gdHlwZU5hbWVUb1VybChuYW1lKSB7XG4gICAgcmV0dXJuIGB0eXBlLmdvb2dsZWFwaXMuY29tLyR7bmFtZX1gO1xufVxuZnVuY3Rpb24gdHlwZVVybFRvTmFtZSh1cmwpIHtcbiAgICBjb25zdCBzbGFzaCA9IHVybC5sYXN0SW5kZXhPZihcIi9cIik7XG4gICAgY29uc3QgbmFtZSA9IHNsYXNoID49IDAgPyB1cmwuc3Vic3RyaW5nKHNsYXNoICsgMSkgOiB1cmw7XG4gICAgaWYgKCFuYW1lLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgdHlwZSB1cmw6ICR7dXJsfWApO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/any.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/any_pb.js":
/*!************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/any_pb.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnySchema: () => (/* binding */ AnySchema),\n/* harmony export */   file_google_protobuf_any: () => (/* binding */ file_google_protobuf_any)\n/* harmony export */ });\n/* harmony import */ var _codegenv2_file_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../codegenv2/file.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/file.js\");\n/* harmony import */ var _codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../codegenv2/message.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/message.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Describes the file google/protobuf/any.proto.\n */\nconst file_google_protobuf_any = /*@__PURE__*/ (0,_codegenv2_file_js__WEBPACK_IMPORTED_MODULE_0__.fileDesc)(\"Chlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvEg9nb29nbGUucHJvdG9idWYiJgoDQW55EhAKCHR5cGVfdXJsGAEgASgJEg0KBXZhbHVlGAIgASgMQnYKE2NvbS5nb29nbGUucHJvdG9idWZCCEFueVByb3RvUAFaLGdvb2dsZS5nb2xhbmcub3JnL3Byb3RvYnVmL3R5cGVzL2tub3duL2FueXBiogIDR1BCqgIeR29vZ2xlLlByb3RvYnVmLldlbGxLbm93blR5cGVzYgZwcm90bzM\");\n/**\n * Describes the message google.protobuf.Any.\n * Use `create(AnySchema)` to create a new message.\n */\nconst AnySchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_any, 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3drdC9nZW4vZ29vZ2xlL3Byb3RvYnVmL2FueV9wYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDeUQ7QUFDTTtBQUMvRDtBQUNBO0FBQ0E7QUFDTywrQ0FBK0MsNERBQVE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0Msa0VBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3drdC9nZW4vZ29vZ2xlL3Byb3RvYnVmL2FueV9wYi5qcz8zYmNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBmaWxlRGVzYyB9IGZyb20gXCIuLi8uLi8uLi8uLi9jb2RlZ2VudjIvZmlsZS5qc1wiO1xuaW1wb3J0IHsgbWVzc2FnZURlc2MgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29kZWdlbnYyL21lc3NhZ2UuanNcIjtcbi8qKlxuICogRGVzY3JpYmVzIHRoZSBmaWxlIGdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8uXG4gKi9cbmV4cG9ydCBjb25zdCBmaWxlX2dvb2dsZV9wcm90b2J1Zl9hbnkgPSAvKkBfX1BVUkVfXyovIGZpbGVEZXNjKFwiQ2hsbmIyOW5iR1V2Y0hKdmRHOWlkV1l2WVc1NUxuQnliM1J2RWc5bmIyOW5iR1V1Y0hKdmRHOWlkV1lpSmdvRFFXNTVFaEFLQ0hSNWNHVmZkWEpzR0FFZ0FTZ0pFZzBLQlhaaGJIVmxHQUlnQVNnTVFuWUtFMk52YlM1bmIyOW5iR1V1Y0hKdmRHOWlkV1pDQ0VGdWVWQnliM1J2VUFGYUxHZHZiMmRzWlM1bmIyeGhibWN1YjNKbkwzQnliM1J2WW5WbUwzUjVjR1Z6TDJ0dWIzZHVMMkZ1ZVhCaW9nSURSMUJDcWdJZVIyOXZaMnhsTGxCeWIzUnZZblZtTGxkbGJHeExibTkzYmxSNWNHVnpZZ1p3Y205MGJ6TVwiKTtcbi8qKlxuICogRGVzY3JpYmVzIHRoZSBtZXNzYWdlIGdvb2dsZS5wcm90b2J1Zi5BbnkuXG4gKiBVc2UgYGNyZWF0ZShBbnlTY2hlbWEpYCB0byBjcmVhdGUgYSBuZXcgbWVzc2FnZS5cbiAqL1xuZXhwb3J0IGNvbnN0IEFueVNjaGVtYSA9IC8qQF9fUFVSRV9fKi8gbWVzc2FnZURlc2MoZmlsZV9nb29nbGVfcHJvdG9idWZfYW55LCAwKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/any_pb.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/descriptor_pb.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/descriptor_pb.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DescriptorProtoSchema: () => (/* binding */ DescriptorProtoSchema),\n/* harmony export */   DescriptorProto_ExtensionRangeSchema: () => (/* binding */ DescriptorProto_ExtensionRangeSchema),\n/* harmony export */   DescriptorProto_ReservedRangeSchema: () => (/* binding */ DescriptorProto_ReservedRangeSchema),\n/* harmony export */   Edition: () => (/* binding */ Edition),\n/* harmony export */   EditionSchema: () => (/* binding */ EditionSchema),\n/* harmony export */   EnumDescriptorProtoSchema: () => (/* binding */ EnumDescriptorProtoSchema),\n/* harmony export */   EnumDescriptorProto_EnumReservedRangeSchema: () => (/* binding */ EnumDescriptorProto_EnumReservedRangeSchema),\n/* harmony export */   EnumOptionsSchema: () => (/* binding */ EnumOptionsSchema),\n/* harmony export */   EnumValueDescriptorProtoSchema: () => (/* binding */ EnumValueDescriptorProtoSchema),\n/* harmony export */   EnumValueOptionsSchema: () => (/* binding */ EnumValueOptionsSchema),\n/* harmony export */   ExtensionRangeOptionsSchema: () => (/* binding */ ExtensionRangeOptionsSchema),\n/* harmony export */   ExtensionRangeOptions_DeclarationSchema: () => (/* binding */ ExtensionRangeOptions_DeclarationSchema),\n/* harmony export */   ExtensionRangeOptions_VerificationState: () => (/* binding */ ExtensionRangeOptions_VerificationState),\n/* harmony export */   ExtensionRangeOptions_VerificationStateSchema: () => (/* binding */ ExtensionRangeOptions_VerificationStateSchema),\n/* harmony export */   FeatureSetDefaultsSchema: () => (/* binding */ FeatureSetDefaultsSchema),\n/* harmony export */   FeatureSetDefaults_FeatureSetEditionDefaultSchema: () => (/* binding */ FeatureSetDefaults_FeatureSetEditionDefaultSchema),\n/* harmony export */   FeatureSetSchema: () => (/* binding */ FeatureSetSchema),\n/* harmony export */   FeatureSet_EnforceNamingStyle: () => (/* binding */ FeatureSet_EnforceNamingStyle),\n/* harmony export */   FeatureSet_EnforceNamingStyleSchema: () => (/* binding */ FeatureSet_EnforceNamingStyleSchema),\n/* harmony export */   FeatureSet_EnumType: () => (/* binding */ FeatureSet_EnumType),\n/* harmony export */   FeatureSet_EnumTypeSchema: () => (/* binding */ FeatureSet_EnumTypeSchema),\n/* harmony export */   FeatureSet_FieldPresence: () => (/* binding */ FeatureSet_FieldPresence),\n/* harmony export */   FeatureSet_FieldPresenceSchema: () => (/* binding */ FeatureSet_FieldPresenceSchema),\n/* harmony export */   FeatureSet_JsonFormat: () => (/* binding */ FeatureSet_JsonFormat),\n/* harmony export */   FeatureSet_JsonFormatSchema: () => (/* binding */ FeatureSet_JsonFormatSchema),\n/* harmony export */   FeatureSet_MessageEncoding: () => (/* binding */ FeatureSet_MessageEncoding),\n/* harmony export */   FeatureSet_MessageEncodingSchema: () => (/* binding */ FeatureSet_MessageEncodingSchema),\n/* harmony export */   FeatureSet_RepeatedFieldEncoding: () => (/* binding */ FeatureSet_RepeatedFieldEncoding),\n/* harmony export */   FeatureSet_RepeatedFieldEncodingSchema: () => (/* binding */ FeatureSet_RepeatedFieldEncodingSchema),\n/* harmony export */   FeatureSet_Utf8Validation: () => (/* binding */ FeatureSet_Utf8Validation),\n/* harmony export */   FeatureSet_Utf8ValidationSchema: () => (/* binding */ FeatureSet_Utf8ValidationSchema),\n/* harmony export */   FeatureSet_VisibilityFeatureSchema: () => (/* binding */ FeatureSet_VisibilityFeatureSchema),\n/* harmony export */   FeatureSet_VisibilityFeature_DefaultSymbolVisibility: () => (/* binding */ FeatureSet_VisibilityFeature_DefaultSymbolVisibility),\n/* harmony export */   FeatureSet_VisibilityFeature_DefaultSymbolVisibilitySchema: () => (/* binding */ FeatureSet_VisibilityFeature_DefaultSymbolVisibilitySchema),\n/* harmony export */   FieldDescriptorProtoSchema: () => (/* binding */ FieldDescriptorProtoSchema),\n/* harmony export */   FieldDescriptorProto_Label: () => (/* binding */ FieldDescriptorProto_Label),\n/* harmony export */   FieldDescriptorProto_LabelSchema: () => (/* binding */ FieldDescriptorProto_LabelSchema),\n/* harmony export */   FieldDescriptorProto_Type: () => (/* binding */ FieldDescriptorProto_Type),\n/* harmony export */   FieldDescriptorProto_TypeSchema: () => (/* binding */ FieldDescriptorProto_TypeSchema),\n/* harmony export */   FieldOptionsSchema: () => (/* binding */ FieldOptionsSchema),\n/* harmony export */   FieldOptions_CType: () => (/* binding */ FieldOptions_CType),\n/* harmony export */   FieldOptions_CTypeSchema: () => (/* binding */ FieldOptions_CTypeSchema),\n/* harmony export */   FieldOptions_EditionDefaultSchema: () => (/* binding */ FieldOptions_EditionDefaultSchema),\n/* harmony export */   FieldOptions_FeatureSupportSchema: () => (/* binding */ FieldOptions_FeatureSupportSchema),\n/* harmony export */   FieldOptions_JSType: () => (/* binding */ FieldOptions_JSType),\n/* harmony export */   FieldOptions_JSTypeSchema: () => (/* binding */ FieldOptions_JSTypeSchema),\n/* harmony export */   FieldOptions_OptionRetention: () => (/* binding */ FieldOptions_OptionRetention),\n/* harmony export */   FieldOptions_OptionRetentionSchema: () => (/* binding */ FieldOptions_OptionRetentionSchema),\n/* harmony export */   FieldOptions_OptionTargetType: () => (/* binding */ FieldOptions_OptionTargetType),\n/* harmony export */   FieldOptions_OptionTargetTypeSchema: () => (/* binding */ FieldOptions_OptionTargetTypeSchema),\n/* harmony export */   FileDescriptorProtoSchema: () => (/* binding */ FileDescriptorProtoSchema),\n/* harmony export */   FileDescriptorSetSchema: () => (/* binding */ FileDescriptorSetSchema),\n/* harmony export */   FileOptionsSchema: () => (/* binding */ FileOptionsSchema),\n/* harmony export */   FileOptions_OptimizeMode: () => (/* binding */ FileOptions_OptimizeMode),\n/* harmony export */   FileOptions_OptimizeModeSchema: () => (/* binding */ FileOptions_OptimizeModeSchema),\n/* harmony export */   GeneratedCodeInfoSchema: () => (/* binding */ GeneratedCodeInfoSchema),\n/* harmony export */   GeneratedCodeInfo_AnnotationSchema: () => (/* binding */ GeneratedCodeInfo_AnnotationSchema),\n/* harmony export */   GeneratedCodeInfo_Annotation_Semantic: () => (/* binding */ GeneratedCodeInfo_Annotation_Semantic),\n/* harmony export */   GeneratedCodeInfo_Annotation_SemanticSchema: () => (/* binding */ GeneratedCodeInfo_Annotation_SemanticSchema),\n/* harmony export */   MessageOptionsSchema: () => (/* binding */ MessageOptionsSchema),\n/* harmony export */   MethodDescriptorProtoSchema: () => (/* binding */ MethodDescriptorProtoSchema),\n/* harmony export */   MethodOptionsSchema: () => (/* binding */ MethodOptionsSchema),\n/* harmony export */   MethodOptions_IdempotencyLevel: () => (/* binding */ MethodOptions_IdempotencyLevel),\n/* harmony export */   MethodOptions_IdempotencyLevelSchema: () => (/* binding */ MethodOptions_IdempotencyLevelSchema),\n/* harmony export */   OneofDescriptorProtoSchema: () => (/* binding */ OneofDescriptorProtoSchema),\n/* harmony export */   OneofOptionsSchema: () => (/* binding */ OneofOptionsSchema),\n/* harmony export */   ServiceDescriptorProtoSchema: () => (/* binding */ ServiceDescriptorProtoSchema),\n/* harmony export */   ServiceOptionsSchema: () => (/* binding */ ServiceOptionsSchema),\n/* harmony export */   SourceCodeInfoSchema: () => (/* binding */ SourceCodeInfoSchema),\n/* harmony export */   SourceCodeInfo_LocationSchema: () => (/* binding */ SourceCodeInfo_LocationSchema),\n/* harmony export */   SymbolVisibility: () => (/* binding */ SymbolVisibility),\n/* harmony export */   SymbolVisibilitySchema: () => (/* binding */ SymbolVisibilitySchema),\n/* harmony export */   UninterpretedOptionSchema: () => (/* binding */ UninterpretedOptionSchema),\n/* harmony export */   UninterpretedOption_NamePartSchema: () => (/* binding */ UninterpretedOption_NamePartSchema),\n/* harmony export */   file_google_protobuf_descriptor: () => (/* binding */ file_google_protobuf_descriptor)\n/* harmony export */ });\n/* harmony import */ var _codegenv2_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../codegenv2/boot.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/boot.js\");\n/* harmony import */ var _codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../codegenv2/message.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/message.js\");\n/* harmony import */ var _codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../codegenv2/enum.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/enum.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Describes the file google/protobuf/descriptor.proto.\n */\nconst file_google_protobuf_descriptor = /*@__PURE__*/ (0,_codegenv2_boot_js__WEBPACK_IMPORTED_MODULE_0__.boot)({ \"name\": \"google/protobuf/descriptor.proto\", \"package\": \"google.protobuf\", \"messageType\": [{ \"name\": \"FileDescriptorSet\", \"field\": [{ \"name\": \"file\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FileDescriptorProto\" }], \"extensionRange\": [{ \"start\": 536000000, \"end\": 536000001 }] }, { \"name\": \"FileDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"package\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"dependency\", \"number\": 3, \"type\": 9, \"label\": 3 }, { \"name\": \"public_dependency\", \"number\": 10, \"type\": 5, \"label\": 3 }, { \"name\": \"weak_dependency\", \"number\": 11, \"type\": 5, \"label\": 3 }, { \"name\": \"option_dependency\", \"number\": 15, \"type\": 9, \"label\": 3 }, { \"name\": \"message_type\", \"number\": 4, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto\" }, { \"name\": \"enum_type\", \"number\": 5, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumDescriptorProto\" }, { \"name\": \"service\", \"number\": 6, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.ServiceDescriptorProto\" }, { \"name\": \"extension\", \"number\": 7, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldDescriptorProto\" }, { \"name\": \"options\", \"number\": 8, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FileOptions\" }, { \"name\": \"source_code_info\", \"number\": 9, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.SourceCodeInfo\" }, { \"name\": \"syntax\", \"number\": 12, \"type\": 9, \"label\": 1 }, { \"name\": \"edition\", \"number\": 14, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }] }, { \"name\": \"DescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"field\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldDescriptorProto\" }, { \"name\": \"extension\", \"number\": 6, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldDescriptorProto\" }, { \"name\": \"nested_type\", \"number\": 3, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto\" }, { \"name\": \"enum_type\", \"number\": 4, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumDescriptorProto\" }, { \"name\": \"extension_range\", \"number\": 5, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto.ExtensionRange\" }, { \"name\": \"oneof_decl\", \"number\": 8, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.OneofDescriptorProto\" }, { \"name\": \"options\", \"number\": 7, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.MessageOptions\" }, { \"name\": \"reserved_range\", \"number\": 9, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.DescriptorProto.ReservedRange\" }, { \"name\": \"reserved_name\", \"number\": 10, \"type\": 9, \"label\": 3 }, { \"name\": \"visibility\", \"number\": 11, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.SymbolVisibility\" }], \"nestedType\": [{ \"name\": \"ExtensionRange\", \"field\": [{ \"name\": \"start\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 2, \"type\": 5, \"label\": 1 }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.ExtensionRangeOptions\" }] }, { \"name\": \"ReservedRange\", \"field\": [{ \"name\": \"start\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 2, \"type\": 5, \"label\": 1 }] }] }, { \"name\": \"ExtensionRangeOptions\", \"field\": [{ \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }, { \"name\": \"declaration\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.ExtensionRangeOptions.Declaration\", \"options\": { \"retention\": 2 } }, { \"name\": \"features\", \"number\": 50, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"verification\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.ExtensionRangeOptions.VerificationState\", \"defaultValue\": \"UNVERIFIED\", \"options\": { \"retention\": 2 } }], \"nestedType\": [{ \"name\": \"Declaration\", \"field\": [{ \"name\": \"number\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"full_name\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"type\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"reserved\", \"number\": 5, \"type\": 8, \"label\": 1 }, { \"name\": \"repeated\", \"number\": 6, \"type\": 8, \"label\": 1 }] }], \"enumType\": [{ \"name\": \"VerificationState\", \"value\": [{ \"name\": \"DECLARATION\", \"number\": 0 }, { \"name\": \"UNVERIFIED\", \"number\": 1 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"FieldDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"number\", \"number\": 3, \"type\": 5, \"label\": 1 }, { \"name\": \"label\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldDescriptorProto.Label\" }, { \"name\": \"type\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldDescriptorProto.Type\" }, { \"name\": \"type_name\", \"number\": 6, \"type\": 9, \"label\": 1 }, { \"name\": \"extendee\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"default_value\", \"number\": 7, \"type\": 9, \"label\": 1 }, { \"name\": \"oneof_index\", \"number\": 9, \"type\": 5, \"label\": 1 }, { \"name\": \"json_name\", \"number\": 10, \"type\": 9, \"label\": 1 }, { \"name\": \"options\", \"number\": 8, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions\" }, { \"name\": \"proto3_optional\", \"number\": 17, \"type\": 8, \"label\": 1 }], \"enumType\": [{ \"name\": \"Type\", \"value\": [{ \"name\": \"TYPE_DOUBLE\", \"number\": 1 }, { \"name\": \"TYPE_FLOAT\", \"number\": 2 }, { \"name\": \"TYPE_INT64\", \"number\": 3 }, { \"name\": \"TYPE_UINT64\", \"number\": 4 }, { \"name\": \"TYPE_INT32\", \"number\": 5 }, { \"name\": \"TYPE_FIXED64\", \"number\": 6 }, { \"name\": \"TYPE_FIXED32\", \"number\": 7 }, { \"name\": \"TYPE_BOOL\", \"number\": 8 }, { \"name\": \"TYPE_STRING\", \"number\": 9 }, { \"name\": \"TYPE_GROUP\", \"number\": 10 }, { \"name\": \"TYPE_MESSAGE\", \"number\": 11 }, { \"name\": \"TYPE_BYTES\", \"number\": 12 }, { \"name\": \"TYPE_UINT32\", \"number\": 13 }, { \"name\": \"TYPE_ENUM\", \"number\": 14 }, { \"name\": \"TYPE_SFIXED32\", \"number\": 15 }, { \"name\": \"TYPE_SFIXED64\", \"number\": 16 }, { \"name\": \"TYPE_SINT32\", \"number\": 17 }, { \"name\": \"TYPE_SINT64\", \"number\": 18 }] }, { \"name\": \"Label\", \"value\": [{ \"name\": \"LABEL_OPTIONAL\", \"number\": 1 }, { \"name\": \"LABEL_REPEATED\", \"number\": 3 }, { \"name\": \"LABEL_REQUIRED\", \"number\": 2 }] }] }, { \"name\": \"OneofDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"options\", \"number\": 2, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.OneofOptions\" }] }, { \"name\": \"EnumDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"value\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumValueDescriptorProto\" }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.EnumOptions\" }, { \"name\": \"reserved_range\", \"number\": 4, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.EnumDescriptorProto.EnumReservedRange\" }, { \"name\": \"reserved_name\", \"number\": 5, \"type\": 9, \"label\": 3 }, { \"name\": \"visibility\", \"number\": 6, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.SymbolVisibility\" }], \"nestedType\": [{ \"name\": \"EnumReservedRange\", \"field\": [{ \"name\": \"start\", \"number\": 1, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 2, \"type\": 5, \"label\": 1 }] }] }, { \"name\": \"EnumValueDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"number\", \"number\": 2, \"type\": 5, \"label\": 1 }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.EnumValueOptions\" }] }, { \"name\": \"ServiceDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"method\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.MethodDescriptorProto\" }, { \"name\": \"options\", \"number\": 3, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.ServiceOptions\" }] }, { \"name\": \"MethodDescriptorProto\", \"field\": [{ \"name\": \"name\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"input_type\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"output_type\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"options\", \"number\": 4, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.MethodOptions\" }, { \"name\": \"client_streaming\", \"number\": 5, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"server_streaming\", \"number\": 6, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }] }, { \"name\": \"FileOptions\", \"field\": [{ \"name\": \"java_package\", \"number\": 1, \"type\": 9, \"label\": 1 }, { \"name\": \"java_outer_classname\", \"number\": 8, \"type\": 9, \"label\": 1 }, { \"name\": \"java_multiple_files\", \"number\": 10, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"java_generate_equals_and_hash\", \"number\": 20, \"type\": 8, \"label\": 1, \"options\": { \"deprecated\": true } }, { \"name\": \"java_string_check_utf8\", \"number\": 27, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"optimize_for\", \"number\": 9, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FileOptions.OptimizeMode\", \"defaultValue\": \"SPEED\" }, { \"name\": \"go_package\", \"number\": 11, \"type\": 9, \"label\": 1 }, { \"name\": \"cc_generic_services\", \"number\": 16, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"java_generic_services\", \"number\": 17, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"py_generic_services\", \"number\": 18, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated\", \"number\": 23, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"cc_enable_arenas\", \"number\": 31, \"type\": 8, \"label\": 1, \"defaultValue\": \"true\" }, { \"name\": \"objc_class_prefix\", \"number\": 36, \"type\": 9, \"label\": 1 }, { \"name\": \"csharp_namespace\", \"number\": 37, \"type\": 9, \"label\": 1 }, { \"name\": \"swift_prefix\", \"number\": 39, \"type\": 9, \"label\": 1 }, { \"name\": \"php_class_prefix\", \"number\": 40, \"type\": 9, \"label\": 1 }, { \"name\": \"php_namespace\", \"number\": 41, \"type\": 9, \"label\": 1 }, { \"name\": \"php_metadata_namespace\", \"number\": 44, \"type\": 9, \"label\": 1 }, { \"name\": \"ruby_package\", \"number\": 45, \"type\": 9, \"label\": 1 }, { \"name\": \"features\", \"number\": 50, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"enumType\": [{ \"name\": \"OptimizeMode\", \"value\": [{ \"name\": \"SPEED\", \"number\": 1 }, { \"name\": \"CODE_SIZE\", \"number\": 2 }, { \"name\": \"LITE_RUNTIME\", \"number\": 3 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"MessageOptions\", \"field\": [{ \"name\": \"message_set_wire_format\", \"number\": 1, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"no_standard_descriptor_accessor\", \"number\": 2, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"map_entry\", \"number\": 7, \"type\": 8, \"label\": 1 }, { \"name\": \"deprecated_legacy_json_field_conflicts\", \"number\": 11, \"type\": 8, \"label\": 1, \"options\": { \"deprecated\": true } }, { \"name\": \"features\", \"number\": 12, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"FieldOptions\", \"field\": [{ \"name\": \"ctype\", \"number\": 1, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.CType\", \"defaultValue\": \"STRING\" }, { \"name\": \"packed\", \"number\": 2, \"type\": 8, \"label\": 1 }, { \"name\": \"jstype\", \"number\": 6, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.JSType\", \"defaultValue\": \"JS_NORMAL\" }, { \"name\": \"lazy\", \"number\": 5, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"unverified_lazy\", \"number\": 15, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"weak\", \"number\": 10, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"debug_redact\", \"number\": 16, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"retention\", \"number\": 17, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.OptionRetention\" }, { \"name\": \"targets\", \"number\": 19, \"type\": 14, \"label\": 3, \"typeName\": \".google.protobuf.FieldOptions.OptionTargetType\" }, { \"name\": \"edition_defaults\", \"number\": 20, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FieldOptions.EditionDefault\" }, { \"name\": \"features\", \"number\": 21, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"feature_support\", \"number\": 22, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.FeatureSupport\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"nestedType\": [{ \"name\": \"EditionDefault\", \"field\": [{ \"name\": \"edition\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"value\", \"number\": 2, \"type\": 9, \"label\": 1 }] }, { \"name\": \"FeatureSupport\", \"field\": [{ \"name\": \"edition_introduced\", \"number\": 1, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"edition_deprecated\", \"number\": 2, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"deprecation_warning\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"edition_removed\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }] }], \"enumType\": [{ \"name\": \"CType\", \"value\": [{ \"name\": \"STRING\", \"number\": 0 }, { \"name\": \"CORD\", \"number\": 1 }, { \"name\": \"STRING_PIECE\", \"number\": 2 }] }, { \"name\": \"JSType\", \"value\": [{ \"name\": \"JS_NORMAL\", \"number\": 0 }, { \"name\": \"JS_STRING\", \"number\": 1 }, { \"name\": \"JS_NUMBER\", \"number\": 2 }] }, { \"name\": \"OptionRetention\", \"value\": [{ \"name\": \"RETENTION_UNKNOWN\", \"number\": 0 }, { \"name\": \"RETENTION_RUNTIME\", \"number\": 1 }, { \"name\": \"RETENTION_SOURCE\", \"number\": 2 }] }, { \"name\": \"OptionTargetType\", \"value\": [{ \"name\": \"TARGET_TYPE_UNKNOWN\", \"number\": 0 }, { \"name\": \"TARGET_TYPE_FILE\", \"number\": 1 }, { \"name\": \"TARGET_TYPE_EXTENSION_RANGE\", \"number\": 2 }, { \"name\": \"TARGET_TYPE_MESSAGE\", \"number\": 3 }, { \"name\": \"TARGET_TYPE_FIELD\", \"number\": 4 }, { \"name\": \"TARGET_TYPE_ONEOF\", \"number\": 5 }, { \"name\": \"TARGET_TYPE_ENUM\", \"number\": 6 }, { \"name\": \"TARGET_TYPE_ENUM_ENTRY\", \"number\": 7 }, { \"name\": \"TARGET_TYPE_SERVICE\", \"number\": 8 }, { \"name\": \"TARGET_TYPE_METHOD\", \"number\": 9 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"OneofOptions\", \"field\": [{ \"name\": \"features\", \"number\": 1, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"EnumOptions\", \"field\": [{ \"name\": \"allow_alias\", \"number\": 2, \"type\": 8, \"label\": 1 }, { \"name\": \"deprecated\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"deprecated_legacy_json_field_conflicts\", \"number\": 6, \"type\": 8, \"label\": 1, \"options\": { \"deprecated\": true } }, { \"name\": \"features\", \"number\": 7, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"EnumValueOptions\", \"field\": [{ \"name\": \"deprecated\", \"number\": 1, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"features\", \"number\": 2, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"debug_redact\", \"number\": 3, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"feature_support\", \"number\": 4, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FieldOptions.FeatureSupport\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"ServiceOptions\", \"field\": [{ \"name\": \"features\", \"number\": 34, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"deprecated\", \"number\": 33, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"MethodOptions\", \"field\": [{ \"name\": \"deprecated\", \"number\": 33, \"type\": 8, \"label\": 1, \"defaultValue\": \"false\" }, { \"name\": \"idempotency_level\", \"number\": 34, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.MethodOptions.IdempotencyLevel\", \"defaultValue\": \"IDEMPOTENCY_UNKNOWN\" }, { \"name\": \"features\", \"number\": 35, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"uninterpreted_option\", \"number\": 999, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption\" }], \"enumType\": [{ \"name\": \"IdempotencyLevel\", \"value\": [{ \"name\": \"IDEMPOTENCY_UNKNOWN\", \"number\": 0 }, { \"name\": \"NO_SIDE_EFFECTS\", \"number\": 1 }, { \"name\": \"IDEMPOTENT\", \"number\": 2 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 536870912 }] }, { \"name\": \"UninterpretedOption\", \"field\": [{ \"name\": \"name\", \"number\": 2, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.UninterpretedOption.NamePart\" }, { \"name\": \"identifier_value\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"positive_int_value\", \"number\": 4, \"type\": 4, \"label\": 1 }, { \"name\": \"negative_int_value\", \"number\": 5, \"type\": 3, \"label\": 1 }, { \"name\": \"double_value\", \"number\": 6, \"type\": 1, \"label\": 1 }, { \"name\": \"string_value\", \"number\": 7, \"type\": 12, \"label\": 1 }, { \"name\": \"aggregate_value\", \"number\": 8, \"type\": 9, \"label\": 1 }], \"nestedType\": [{ \"name\": \"NamePart\", \"field\": [{ \"name\": \"name_part\", \"number\": 1, \"type\": 9, \"label\": 2 }, { \"name\": \"is_extension\", \"number\": 2, \"type\": 8, \"label\": 2 }] }] }, { \"name\": \"FeatureSet\", \"field\": [{ \"name\": \"field_presence\", \"number\": 1, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.FieldPresence\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"EXPLICIT\", \"edition\": 900 }, { \"value\": \"IMPLICIT\", \"edition\": 999 }, { \"value\": \"EXPLICIT\", \"edition\": 1000 }] } }, { \"name\": \"enum_type\", \"number\": 2, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.EnumType\", \"options\": { \"retention\": 1, \"targets\": [6, 1], \"editionDefaults\": [{ \"value\": \"CLOSED\", \"edition\": 900 }, { \"value\": \"OPEN\", \"edition\": 999 }] } }, { \"name\": \"repeated_field_encoding\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.RepeatedFieldEncoding\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"EXPANDED\", \"edition\": 900 }, { \"value\": \"PACKED\", \"edition\": 999 }] } }, { \"name\": \"utf8_validation\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.Utf8Validation\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"NONE\", \"edition\": 900 }, { \"value\": \"VERIFY\", \"edition\": 999 }] } }, { \"name\": \"message_encoding\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.MessageEncoding\", \"options\": { \"retention\": 1, \"targets\": [4, 1], \"editionDefaults\": [{ \"value\": \"LENGTH_PREFIXED\", \"edition\": 900 }] } }, { \"name\": \"json_format\", \"number\": 6, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.JsonFormat\", \"options\": { \"retention\": 1, \"targets\": [3, 6, 1], \"editionDefaults\": [{ \"value\": \"LEGACY_BEST_EFFORT\", \"edition\": 900 }, { \"value\": \"ALLOW\", \"edition\": 999 }] } }, { \"name\": \"enforce_naming_style\", \"number\": 7, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.EnforceNamingStyle\", \"options\": { \"retention\": 2, \"targets\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"editionDefaults\": [{ \"value\": \"STYLE_LEGACY\", \"edition\": 900 }, { \"value\": \"STYLE2024\", \"edition\": 1001 }] } }, { \"name\": \"default_symbol_visibility\", \"number\": 8, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet.VisibilityFeature.DefaultSymbolVisibility\", \"options\": { \"retention\": 2, \"targets\": [1], \"editionDefaults\": [{ \"value\": \"EXPORT_ALL\", \"edition\": 900 }, { \"value\": \"EXPORT_TOP_LEVEL\", \"edition\": 1001 }] } }], \"nestedType\": [{ \"name\": \"VisibilityFeature\", \"enumType\": [{ \"name\": \"DefaultSymbolVisibility\", \"value\": [{ \"name\": \"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\", \"number\": 0 }, { \"name\": \"EXPORT_ALL\", \"number\": 1 }, { \"name\": \"EXPORT_TOP_LEVEL\", \"number\": 2 }, { \"name\": \"LOCAL_ALL\", \"number\": 3 }, { \"name\": \"STRICT\", \"number\": 4 }] }] }], \"enumType\": [{ \"name\": \"FieldPresence\", \"value\": [{ \"name\": \"FIELD_PRESENCE_UNKNOWN\", \"number\": 0 }, { \"name\": \"EXPLICIT\", \"number\": 1 }, { \"name\": \"IMPLICIT\", \"number\": 2 }, { \"name\": \"LEGACY_REQUIRED\", \"number\": 3 }] }, { \"name\": \"EnumType\", \"value\": [{ \"name\": \"ENUM_TYPE_UNKNOWN\", \"number\": 0 }, { \"name\": \"OPEN\", \"number\": 1 }, { \"name\": \"CLOSED\", \"number\": 2 }] }, { \"name\": \"RepeatedFieldEncoding\", \"value\": [{ \"name\": \"REPEATED_FIELD_ENCODING_UNKNOWN\", \"number\": 0 }, { \"name\": \"PACKED\", \"number\": 1 }, { \"name\": \"EXPANDED\", \"number\": 2 }] }, { \"name\": \"Utf8Validation\", \"value\": [{ \"name\": \"UTF8_VALIDATION_UNKNOWN\", \"number\": 0 }, { \"name\": \"VERIFY\", \"number\": 2 }, { \"name\": \"NONE\", \"number\": 3 }] }, { \"name\": \"MessageEncoding\", \"value\": [{ \"name\": \"MESSAGE_ENCODING_UNKNOWN\", \"number\": 0 }, { \"name\": \"LENGTH_PREFIXED\", \"number\": 1 }, { \"name\": \"DELIMITED\", \"number\": 2 }] }, { \"name\": \"JsonFormat\", \"value\": [{ \"name\": \"JSON_FORMAT_UNKNOWN\", \"number\": 0 }, { \"name\": \"ALLOW\", \"number\": 1 }, { \"name\": \"LEGACY_BEST_EFFORT\", \"number\": 2 }] }, { \"name\": \"EnforceNamingStyle\", \"value\": [{ \"name\": \"ENFORCE_NAMING_STYLE_UNKNOWN\", \"number\": 0 }, { \"name\": \"STYLE2024\", \"number\": 1 }, { \"name\": \"STYLE_LEGACY\", \"number\": 2 }] }], \"extensionRange\": [{ \"start\": 1000, \"end\": 9995 }, { \"start\": 9995, \"end\": 10000 }, { \"start\": 10000, \"end\": 10001 }] }, { \"name\": \"FeatureSetDefaults\", \"field\": [{ \"name\": \"defaults\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\" }, { \"name\": \"minimum_edition\", \"number\": 4, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"maximum_edition\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }], \"nestedType\": [{ \"name\": \"FeatureSetEditionDefault\", \"field\": [{ \"name\": \"edition\", \"number\": 3, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.Edition\" }, { \"name\": \"overridable_features\", \"number\": 4, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }, { \"name\": \"fixed_features\", \"number\": 5, \"type\": 11, \"label\": 1, \"typeName\": \".google.protobuf.FeatureSet\" }] }] }, { \"name\": \"SourceCodeInfo\", \"field\": [{ \"name\": \"location\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.SourceCodeInfo.Location\" }], \"nestedType\": [{ \"name\": \"Location\", \"field\": [{ \"name\": \"path\", \"number\": 1, \"type\": 5, \"label\": 3, \"options\": { \"packed\": true } }, { \"name\": \"span\", \"number\": 2, \"type\": 5, \"label\": 3, \"options\": { \"packed\": true } }, { \"name\": \"leading_comments\", \"number\": 3, \"type\": 9, \"label\": 1 }, { \"name\": \"trailing_comments\", \"number\": 4, \"type\": 9, \"label\": 1 }, { \"name\": \"leading_detached_comments\", \"number\": 6, \"type\": 9, \"label\": 3 }] }], \"extensionRange\": [{ \"start\": 536000000, \"end\": 536000001 }] }, { \"name\": \"GeneratedCodeInfo\", \"field\": [{ \"name\": \"annotation\", \"number\": 1, \"type\": 11, \"label\": 3, \"typeName\": \".google.protobuf.GeneratedCodeInfo.Annotation\" }], \"nestedType\": [{ \"name\": \"Annotation\", \"field\": [{ \"name\": \"path\", \"number\": 1, \"type\": 5, \"label\": 3, \"options\": { \"packed\": true } }, { \"name\": \"source_file\", \"number\": 2, \"type\": 9, \"label\": 1 }, { \"name\": \"begin\", \"number\": 3, \"type\": 5, \"label\": 1 }, { \"name\": \"end\", \"number\": 4, \"type\": 5, \"label\": 1 }, { \"name\": \"semantic\", \"number\": 5, \"type\": 14, \"label\": 1, \"typeName\": \".google.protobuf.GeneratedCodeInfo.Annotation.Semantic\" }], \"enumType\": [{ \"name\": \"Semantic\", \"value\": [{ \"name\": \"NONE\", \"number\": 0 }, { \"name\": \"SET\", \"number\": 1 }, { \"name\": \"ALIAS\", \"number\": 2 }] }] }] }], \"enumType\": [{ \"name\": \"Edition\", \"value\": [{ \"name\": \"EDITION_UNKNOWN\", \"number\": 0 }, { \"name\": \"EDITION_LEGACY\", \"number\": 900 }, { \"name\": \"EDITION_PROTO2\", \"number\": 998 }, { \"name\": \"EDITION_PROTO3\", \"number\": 999 }, { \"name\": \"EDITION_2023\", \"number\": 1000 }, { \"name\": \"EDITION_2024\", \"number\": 1001 }, { \"name\": \"EDITION_1_TEST_ONLY\", \"number\": 1 }, { \"name\": \"EDITION_2_TEST_ONLY\", \"number\": 2 }, { \"name\": \"EDITION_99997_TEST_ONLY\", \"number\": 99997 }, { \"name\": \"EDITION_99998_TEST_ONLY\", \"number\": 99998 }, { \"name\": \"EDITION_99999_TEST_ONLY\", \"number\": 99999 }, { \"name\": \"EDITION_MAX\", \"number\": 2147483647 }] }, { \"name\": \"SymbolVisibility\", \"value\": [{ \"name\": \"VISIBILITY_UNSET\", \"number\": 0 }, { \"name\": \"VISIBILITY_LOCAL\", \"number\": 1 }, { \"name\": \"VISIBILITY_EXPORT\", \"number\": 2 }] }] });\n/**\n * Describes the message google.protobuf.FileDescriptorSet.\n * Use `create(FileDescriptorSetSchema)` to create a new message.\n */\nconst FileDescriptorSetSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 0);\n/**\n * Describes the message google.protobuf.FileDescriptorProto.\n * Use `create(FileDescriptorProtoSchema)` to create a new message.\n */\nconst FileDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 1);\n/**\n * Describes the message google.protobuf.DescriptorProto.\n * Use `create(DescriptorProtoSchema)` to create a new message.\n */\nconst DescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 2);\n/**\n * Describes the message google.protobuf.DescriptorProto.ExtensionRange.\n * Use `create(DescriptorProto_ExtensionRangeSchema)` to create a new message.\n */\nconst DescriptorProto_ExtensionRangeSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 2, 0);\n/**\n * Describes the message google.protobuf.DescriptorProto.ReservedRange.\n * Use `create(DescriptorProto_ReservedRangeSchema)` to create a new message.\n */\nconst DescriptorProto_ReservedRangeSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 2, 1);\n/**\n * Describes the message google.protobuf.ExtensionRangeOptions.\n * Use `create(ExtensionRangeOptionsSchema)` to create a new message.\n */\nconst ExtensionRangeOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 3);\n/**\n * Describes the message google.protobuf.ExtensionRangeOptions.Declaration.\n * Use `create(ExtensionRangeOptions_DeclarationSchema)` to create a new message.\n */\nconst ExtensionRangeOptions_DeclarationSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 3, 0);\n/**\n * The verification state of the extension range.\n *\n * @generated from enum google.protobuf.ExtensionRangeOptions.VerificationState\n */\nvar ExtensionRangeOptions_VerificationState;\n(function (ExtensionRangeOptions_VerificationState) {\n    /**\n     * All the extensions of the range must be declared.\n     *\n     * @generated from enum value: DECLARATION = 0;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"DECLARATION\"] = 0] = \"DECLARATION\";\n    /**\n     * @generated from enum value: UNVERIFIED = 1;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"UNVERIFIED\"] = 1] = \"UNVERIFIED\";\n})(ExtensionRangeOptions_VerificationState || (ExtensionRangeOptions_VerificationState = {}));\n/**\n * Describes the enum google.protobuf.ExtensionRangeOptions.VerificationState.\n */\nconst ExtensionRangeOptions_VerificationStateSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 3, 0);\n/**\n * Describes the message google.protobuf.FieldDescriptorProto.\n * Use `create(FieldDescriptorProtoSchema)` to create a new message.\n */\nconst FieldDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 4);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */\nvar FieldDescriptorProto_Type;\n(function (FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FLOAT\"] = 2] = \"FLOAT\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT64\"] = 3] = \"INT64\";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT64\"] = 4] = \"UINT64\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT32\"] = 5] = \"INT32\";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED64\"] = 6] = \"FIXED64\";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED32\"] = 7] = \"FIXED32\";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BOOL\"] = 8] = \"BOOL\";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"STRING\"] = 9] = \"STRING\";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported after google.protobuf. However, Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.  In Editions, the group wire format\n     * can be enabled via the `message_encoding` feature.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"GROUP\"] = 10] = \"GROUP\";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"MESSAGE\"] = 11] = \"MESSAGE\";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BYTES\"] = 12] = \"BYTES\";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT32\"] = 13] = \"UINT32\";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"ENUM\"] = 14] = \"ENUM\";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT32\"] = 17] = \"SINT32\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT64\"] = 18] = \"SINT64\";\n})(FieldDescriptorProto_Type || (FieldDescriptorProto_Type = {}));\n/**\n * Describes the enum google.protobuf.FieldDescriptorProto.Type.\n */\nconst FieldDescriptorProto_TypeSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 4, 0);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */\nvar FieldDescriptorProto_Label;\n(function (FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REPEATED\"] = 3] = \"REPEATED\";\n    /**\n     * The required label is only allowed in google.protobuf.  In proto3 and Editions\n     * it's explicitly prohibited.  In Editions, the `field_presence` feature\n     * can be used to get this behavior.\n     *\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REQUIRED\"] = 2] = \"REQUIRED\";\n})(FieldDescriptorProto_Label || (FieldDescriptorProto_Label = {}));\n/**\n * Describes the enum google.protobuf.FieldDescriptorProto.Label.\n */\nconst FieldDescriptorProto_LabelSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 4, 1);\n/**\n * Describes the message google.protobuf.OneofDescriptorProto.\n * Use `create(OneofDescriptorProtoSchema)` to create a new message.\n */\nconst OneofDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 5);\n/**\n * Describes the message google.protobuf.EnumDescriptorProto.\n * Use `create(EnumDescriptorProtoSchema)` to create a new message.\n */\nconst EnumDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 6);\n/**\n * Describes the message google.protobuf.EnumDescriptorProto.EnumReservedRange.\n * Use `create(EnumDescriptorProto_EnumReservedRangeSchema)` to create a new message.\n */\nconst EnumDescriptorProto_EnumReservedRangeSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 6, 0);\n/**\n * Describes the message google.protobuf.EnumValueDescriptorProto.\n * Use `create(EnumValueDescriptorProtoSchema)` to create a new message.\n */\nconst EnumValueDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 7);\n/**\n * Describes the message google.protobuf.ServiceDescriptorProto.\n * Use `create(ServiceDescriptorProtoSchema)` to create a new message.\n */\nconst ServiceDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 8);\n/**\n * Describes the message google.protobuf.MethodDescriptorProto.\n * Use `create(MethodDescriptorProtoSchema)` to create a new message.\n */\nconst MethodDescriptorProtoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 9);\n/**\n * Describes the message google.protobuf.FileOptions.\n * Use `create(FileOptionsSchema)` to create a new message.\n */\nconst FileOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 10);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */\nvar FileOptions_OptimizeMode;\n(function (FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing, serialization,\n     *\n     * @generated from enum value: SPEED = 1;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"SPEED\"] = 1] = \"SPEED\";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"CODE_SIZE\"] = 2] = \"CODE_SIZE\";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"LITE_RUNTIME\"] = 3] = \"LITE_RUNTIME\";\n})(FileOptions_OptimizeMode || (FileOptions_OptimizeMode = {}));\n/**\n * Describes the enum google.protobuf.FileOptions.OptimizeMode.\n */\nconst FileOptions_OptimizeModeSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 10, 0);\n/**\n * Describes the message google.protobuf.MessageOptions.\n * Use `create(MessageOptionsSchema)` to create a new message.\n */\nconst MessageOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 11);\n/**\n * Describes the message google.protobuf.FieldOptions.\n * Use `create(FieldOptionsSchema)` to create a new message.\n */\nconst FieldOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 12);\n/**\n * Describes the message google.protobuf.FieldOptions.EditionDefault.\n * Use `create(FieldOptions_EditionDefaultSchema)` to create a new message.\n */\nconst FieldOptions_EditionDefaultSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 12, 0);\n/**\n * Describes the message google.protobuf.FieldOptions.FeatureSupport.\n * Use `create(FieldOptions_FeatureSupportSchema)` to create a new message.\n */\nconst FieldOptions_FeatureSupportSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 12, 1);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */\nvar FieldOptions_CType;\n(function (FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING\"] = 0] = \"STRING\";\n    /**\n     * The option [ctype=CORD] may be applied to a non-repeated field of type\n     * \"bytes\". It indicates that in C++, the data should be stored in a Cord\n     * instead of a string.  For very large strings, this may reduce memory\n     * fragmentation. It may also allow better performance when parsing from a\n     * Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n     * alias the original buffer.\n     *\n     * @generated from enum value: CORD = 1;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"CORD\"] = 1] = \"CORD\";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING_PIECE\"] = 2] = \"STRING_PIECE\";\n})(FieldOptions_CType || (FieldOptions_CType = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.CType.\n */\nconst FieldOptions_CTypeSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 12, 0);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */\nvar FieldOptions_JSType;\n(function (FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NORMAL\"] = 0] = \"JS_NORMAL\";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_STRING\"] = 1] = \"JS_STRING\";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NUMBER\"] = 2] = \"JS_NUMBER\";\n})(FieldOptions_JSType || (FieldOptions_JSType = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.JSType.\n */\nconst FieldOptions_JSTypeSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 12, 1);\n/**\n * If set to RETENTION_SOURCE, the option will be omitted from the binary.\n *\n * @generated from enum google.protobuf.FieldOptions.OptionRetention\n */\nvar FieldOptions_OptionRetention;\n(function (FieldOptions_OptionRetention) {\n    /**\n     * @generated from enum value: RETENTION_UNKNOWN = 0;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_UNKNOWN\"] = 0] = \"RETENTION_UNKNOWN\";\n    /**\n     * @generated from enum value: RETENTION_RUNTIME = 1;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_RUNTIME\"] = 1] = \"RETENTION_RUNTIME\";\n    /**\n     * @generated from enum value: RETENTION_SOURCE = 2;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_SOURCE\"] = 2] = \"RETENTION_SOURCE\";\n})(FieldOptions_OptionRetention || (FieldOptions_OptionRetention = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.OptionRetention.\n */\nconst FieldOptions_OptionRetentionSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 12, 2);\n/**\n * This indicates the types of entities that the field may apply to when used\n * as an option. If it is unset, then the field may be freely used as an\n * option on any kind of entity.\n *\n * @generated from enum google.protobuf.FieldOptions.OptionTargetType\n */\nvar FieldOptions_OptionTargetType;\n(function (FieldOptions_OptionTargetType) {\n    /**\n     * @generated from enum value: TARGET_TYPE_UNKNOWN = 0;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_UNKNOWN\"] = 0] = \"TARGET_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FILE = 1;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FILE\"] = 1] = \"TARGET_TYPE_FILE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_EXTENSION_RANGE = 2;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_EXTENSION_RANGE\"] = 2] = \"TARGET_TYPE_EXTENSION_RANGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_MESSAGE = 3;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_MESSAGE\"] = 3] = \"TARGET_TYPE_MESSAGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FIELD = 4;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FIELD\"] = 4] = \"TARGET_TYPE_FIELD\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ONEOF = 5;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ONEOF\"] = 5] = \"TARGET_TYPE_ONEOF\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM = 6;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM\"] = 6] = \"TARGET_TYPE_ENUM\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM_ENTRY = 7;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM_ENTRY\"] = 7] = \"TARGET_TYPE_ENUM_ENTRY\";\n    /**\n     * @generated from enum value: TARGET_TYPE_SERVICE = 8;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_SERVICE\"] = 8] = \"TARGET_TYPE_SERVICE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_METHOD = 9;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_METHOD\"] = 9] = \"TARGET_TYPE_METHOD\";\n})(FieldOptions_OptionTargetType || (FieldOptions_OptionTargetType = {}));\n/**\n * Describes the enum google.protobuf.FieldOptions.OptionTargetType.\n */\nconst FieldOptions_OptionTargetTypeSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 12, 3);\n/**\n * Describes the message google.protobuf.OneofOptions.\n * Use `create(OneofOptionsSchema)` to create a new message.\n */\nconst OneofOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 13);\n/**\n * Describes the message google.protobuf.EnumOptions.\n * Use `create(EnumOptionsSchema)` to create a new message.\n */\nconst EnumOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 14);\n/**\n * Describes the message google.protobuf.EnumValueOptions.\n * Use `create(EnumValueOptionsSchema)` to create a new message.\n */\nconst EnumValueOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 15);\n/**\n * Describes the message google.protobuf.ServiceOptions.\n * Use `create(ServiceOptionsSchema)` to create a new message.\n */\nconst ServiceOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 16);\n/**\n * Describes the message google.protobuf.MethodOptions.\n * Use `create(MethodOptionsSchema)` to create a new message.\n */\nconst MethodOptionsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 17);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */\nvar MethodOptions_IdempotencyLevel;\n(function (MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = 0] = \"IDEMPOTENCY_UNKNOWN\";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = 1] = \"NO_SIDE_EFFECTS\";\n    /**\n     * idempotent, but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENT\"] = 2] = \"IDEMPOTENT\";\n})(MethodOptions_IdempotencyLevel || (MethodOptions_IdempotencyLevel = {}));\n/**\n * Describes the enum google.protobuf.MethodOptions.IdempotencyLevel.\n */\nconst MethodOptions_IdempotencyLevelSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 17, 0);\n/**\n * Describes the message google.protobuf.UninterpretedOption.\n * Use `create(UninterpretedOptionSchema)` to create a new message.\n */\nconst UninterpretedOptionSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 18);\n/**\n * Describes the message google.protobuf.UninterpretedOption.NamePart.\n * Use `create(UninterpretedOption_NamePartSchema)` to create a new message.\n */\nconst UninterpretedOption_NamePartSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 18, 0);\n/**\n * Describes the message google.protobuf.FeatureSet.\n * Use `create(FeatureSetSchema)` to create a new message.\n */\nconst FeatureSetSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 19);\n/**\n * Describes the message google.protobuf.FeatureSet.VisibilityFeature.\n * Use `create(FeatureSet_VisibilityFeatureSchema)` to create a new message.\n */\nconst FeatureSet_VisibilityFeatureSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 19, 0);\n/**\n * @generated from enum google.protobuf.FeatureSet.VisibilityFeature.DefaultSymbolVisibility\n */\nvar FeatureSet_VisibilityFeature_DefaultSymbolVisibility;\n(function (FeatureSet_VisibilityFeature_DefaultSymbolVisibility) {\n    /**\n     * @generated from enum value: DEFAULT_SYMBOL_VISIBILITY_UNKNOWN = 0;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\"] = 0] = \"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\";\n    /**\n     * Default pre-EDITION_2024, all UNSET visibility are export.\n     *\n     * @generated from enum value: EXPORT_ALL = 1;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"EXPORT_ALL\"] = 1] = \"EXPORT_ALL\";\n    /**\n     * All top-level symbols default to export, nested default to local.\n     *\n     * @generated from enum value: EXPORT_TOP_LEVEL = 2;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"EXPORT_TOP_LEVEL\"] = 2] = \"EXPORT_TOP_LEVEL\";\n    /**\n     * All symbols default to local.\n     *\n     * @generated from enum value: LOCAL_ALL = 3;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"LOCAL_ALL\"] = 3] = \"LOCAL_ALL\";\n    /**\n     * All symbols local by default. Nested types cannot be exported.\n     * With special case caveat for message { enum {} reserved 1 to max; }\n     * This is the recommended setting for new protos.\n     *\n     * @generated from enum value: STRICT = 4;\n     */\n    FeatureSet_VisibilityFeature_DefaultSymbolVisibility[FeatureSet_VisibilityFeature_DefaultSymbolVisibility[\"STRICT\"] = 4] = \"STRICT\";\n})(FeatureSet_VisibilityFeature_DefaultSymbolVisibility || (FeatureSet_VisibilityFeature_DefaultSymbolVisibility = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.VisibilityFeature.DefaultSymbolVisibility.\n */\nconst FeatureSet_VisibilityFeature_DefaultSymbolVisibilitySchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 0, 0);\n/**\n * @generated from enum google.protobuf.FeatureSet.FieldPresence\n */\nvar FeatureSet_FieldPresence;\n(function (FeatureSet_FieldPresence) {\n    /**\n     * @generated from enum value: FIELD_PRESENCE_UNKNOWN = 0;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"FIELD_PRESENCE_UNKNOWN\"] = 0] = \"FIELD_PRESENCE_UNKNOWN\";\n    /**\n     * @generated from enum value: EXPLICIT = 1;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"EXPLICIT\"] = 1] = \"EXPLICIT\";\n    /**\n     * @generated from enum value: IMPLICIT = 2;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"IMPLICIT\"] = 2] = \"IMPLICIT\";\n    /**\n     * @generated from enum value: LEGACY_REQUIRED = 3;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"LEGACY_REQUIRED\"] = 3] = \"LEGACY_REQUIRED\";\n})(FeatureSet_FieldPresence || (FeatureSet_FieldPresence = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.FieldPresence.\n */\nconst FeatureSet_FieldPresenceSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 0);\n/**\n * @generated from enum google.protobuf.FeatureSet.EnumType\n */\nvar FeatureSet_EnumType;\n(function (FeatureSet_EnumType) {\n    /**\n     * @generated from enum value: ENUM_TYPE_UNKNOWN = 0;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"ENUM_TYPE_UNKNOWN\"] = 0] = \"ENUM_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: OPEN = 1;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"OPEN\"] = 1] = \"OPEN\";\n    /**\n     * @generated from enum value: CLOSED = 2;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"CLOSED\"] = 2] = \"CLOSED\";\n})(FeatureSet_EnumType || (FeatureSet_EnumType = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.EnumType.\n */\nconst FeatureSet_EnumTypeSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 1);\n/**\n * @generated from enum google.protobuf.FeatureSet.RepeatedFieldEncoding\n */\nvar FeatureSet_RepeatedFieldEncoding;\n(function (FeatureSet_RepeatedFieldEncoding) {\n    /**\n     * @generated from enum value: REPEATED_FIELD_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"REPEATED_FIELD_ENCODING_UNKNOWN\"] = 0] = \"REPEATED_FIELD_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: PACKED = 1;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * @generated from enum value: EXPANDED = 2;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"EXPANDED\"] = 2] = \"EXPANDED\";\n})(FeatureSet_RepeatedFieldEncoding || (FeatureSet_RepeatedFieldEncoding = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.RepeatedFieldEncoding.\n */\nconst FeatureSet_RepeatedFieldEncodingSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 2);\n/**\n * @generated from enum google.protobuf.FeatureSet.Utf8Validation\n */\nvar FeatureSet_Utf8Validation;\n(function (FeatureSet_Utf8Validation) {\n    /**\n     * @generated from enum value: UTF8_VALIDATION_UNKNOWN = 0;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"UTF8_VALIDATION_UNKNOWN\"] = 0] = \"UTF8_VALIDATION_UNKNOWN\";\n    /**\n     * @generated from enum value: VERIFY = 2;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"VERIFY\"] = 2] = \"VERIFY\";\n    /**\n     * @generated from enum value: NONE = 3;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"NONE\"] = 3] = \"NONE\";\n})(FeatureSet_Utf8Validation || (FeatureSet_Utf8Validation = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.Utf8Validation.\n */\nconst FeatureSet_Utf8ValidationSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 3);\n/**\n * @generated from enum google.protobuf.FeatureSet.MessageEncoding\n */\nvar FeatureSet_MessageEncoding;\n(function (FeatureSet_MessageEncoding) {\n    /**\n     * @generated from enum value: MESSAGE_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"MESSAGE_ENCODING_UNKNOWN\"] = 0] = \"MESSAGE_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: LENGTH_PREFIXED = 1;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"LENGTH_PREFIXED\"] = 1] = \"LENGTH_PREFIXED\";\n    /**\n     * @generated from enum value: DELIMITED = 2;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"DELIMITED\"] = 2] = \"DELIMITED\";\n})(FeatureSet_MessageEncoding || (FeatureSet_MessageEncoding = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.MessageEncoding.\n */\nconst FeatureSet_MessageEncodingSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 4);\n/**\n * @generated from enum google.protobuf.FeatureSet.JsonFormat\n */\nvar FeatureSet_JsonFormat;\n(function (FeatureSet_JsonFormat) {\n    /**\n     * @generated from enum value: JSON_FORMAT_UNKNOWN = 0;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"JSON_FORMAT_UNKNOWN\"] = 0] = \"JSON_FORMAT_UNKNOWN\";\n    /**\n     * @generated from enum value: ALLOW = 1;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"ALLOW\"] = 1] = \"ALLOW\";\n    /**\n     * @generated from enum value: LEGACY_BEST_EFFORT = 2;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"LEGACY_BEST_EFFORT\"] = 2] = \"LEGACY_BEST_EFFORT\";\n})(FeatureSet_JsonFormat || (FeatureSet_JsonFormat = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.JsonFormat.\n */\nconst FeatureSet_JsonFormatSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 5);\n/**\n * @generated from enum google.protobuf.FeatureSet.EnforceNamingStyle\n */\nvar FeatureSet_EnforceNamingStyle;\n(function (FeatureSet_EnforceNamingStyle) {\n    /**\n     * @generated from enum value: ENFORCE_NAMING_STYLE_UNKNOWN = 0;\n     */\n    FeatureSet_EnforceNamingStyle[FeatureSet_EnforceNamingStyle[\"ENFORCE_NAMING_STYLE_UNKNOWN\"] = 0] = \"ENFORCE_NAMING_STYLE_UNKNOWN\";\n    /**\n     * @generated from enum value: STYLE2024 = 1;\n     */\n    FeatureSet_EnforceNamingStyle[FeatureSet_EnforceNamingStyle[\"STYLE2024\"] = 1] = \"STYLE2024\";\n    /**\n     * @generated from enum value: STYLE_LEGACY = 2;\n     */\n    FeatureSet_EnforceNamingStyle[FeatureSet_EnforceNamingStyle[\"STYLE_LEGACY\"] = 2] = \"STYLE_LEGACY\";\n})(FeatureSet_EnforceNamingStyle || (FeatureSet_EnforceNamingStyle = {}));\n/**\n * Describes the enum google.protobuf.FeatureSet.EnforceNamingStyle.\n */\nconst FeatureSet_EnforceNamingStyleSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 19, 6);\n/**\n * Describes the message google.protobuf.FeatureSetDefaults.\n * Use `create(FeatureSetDefaultsSchema)` to create a new message.\n */\nconst FeatureSetDefaultsSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 20);\n/**\n * Describes the message google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.\n * Use `create(FeatureSetDefaults_FeatureSetEditionDefaultSchema)` to create a new message.\n */\nconst FeatureSetDefaults_FeatureSetEditionDefaultSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 20, 0);\n/**\n * Describes the message google.protobuf.SourceCodeInfo.\n * Use `create(SourceCodeInfoSchema)` to create a new message.\n */\nconst SourceCodeInfoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 21);\n/**\n * Describes the message google.protobuf.SourceCodeInfo.Location.\n * Use `create(SourceCodeInfo_LocationSchema)` to create a new message.\n */\nconst SourceCodeInfo_LocationSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 21, 0);\n/**\n * Describes the message google.protobuf.GeneratedCodeInfo.\n * Use `create(GeneratedCodeInfoSchema)` to create a new message.\n */\nconst GeneratedCodeInfoSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 22);\n/**\n * Describes the message google.protobuf.GeneratedCodeInfo.Annotation.\n * Use `create(GeneratedCodeInfo_AnnotationSchema)` to create a new message.\n */\nconst GeneratedCodeInfo_AnnotationSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_descriptor, 22, 0);\n/**\n * Represents the identified object's effect on the element in the original\n * .proto file.\n *\n * @generated from enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic\n */\nvar GeneratedCodeInfo_Annotation_Semantic;\n(function (GeneratedCodeInfo_Annotation_Semantic) {\n    /**\n     * There is no effect or the effect is indescribable.\n     *\n     * @generated from enum value: NONE = 0;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The element is set or otherwise mutated.\n     *\n     * @generated from enum value: SET = 1;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"SET\"] = 1] = \"SET\";\n    /**\n     * An alias to the element is returned.\n     *\n     * @generated from enum value: ALIAS = 2;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"ALIAS\"] = 2] = \"ALIAS\";\n})(GeneratedCodeInfo_Annotation_Semantic || (GeneratedCodeInfo_Annotation_Semantic = {}));\n/**\n * Describes the enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic.\n */\nconst GeneratedCodeInfo_Annotation_SemanticSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 22, 0, 0);\n/**\n * The full set of known editions.\n *\n * @generated from enum google.protobuf.Edition\n */\nvar Edition;\n(function (Edition) {\n    /**\n     * A placeholder for an unknown edition value.\n     *\n     * @generated from enum value: EDITION_UNKNOWN = 0;\n     */\n    Edition[Edition[\"EDITION_UNKNOWN\"] = 0] = \"EDITION_UNKNOWN\";\n    /**\n     * A placeholder edition for specifying default behaviors *before* a feature\n     * was first introduced.  This is effectively an \"infinite past\".\n     *\n     * @generated from enum value: EDITION_LEGACY = 900;\n     */\n    Edition[Edition[\"EDITION_LEGACY\"] = 900] = \"EDITION_LEGACY\";\n    /**\n     * Legacy syntax \"editions\".  These pre-date editions, but behave much like\n     * distinct editions.  These can't be used to specify the edition of proto\n     * files, but feature definitions must supply proto2/proto3 defaults for\n     * backwards compatibility.\n     *\n     * @generated from enum value: EDITION_PROTO2 = 998;\n     */\n    Edition[Edition[\"EDITION_PROTO2\"] = 998] = \"EDITION_PROTO2\";\n    /**\n     * @generated from enum value: EDITION_PROTO3 = 999;\n     */\n    Edition[Edition[\"EDITION_PROTO3\"] = 999] = \"EDITION_PROTO3\";\n    /**\n     * Editions that have been released.  The specific values are arbitrary and\n     * should not be depended on, but they will always be time-ordered for easy\n     * comparison.\n     *\n     * @generated from enum value: EDITION_2023 = 1000;\n     */\n    Edition[Edition[\"EDITION_2023\"] = 1000] = \"EDITION_2023\";\n    /**\n     * @generated from enum value: EDITION_2024 = 1001;\n     */\n    Edition[Edition[\"EDITION_2024\"] = 1001] = \"EDITION_2024\";\n    /**\n     * Placeholder editions for testing feature resolution.  These should not be\n     * used or relied on outside of tests.\n     *\n     * @generated from enum value: EDITION_1_TEST_ONLY = 1;\n     */\n    Edition[Edition[\"EDITION_1_TEST_ONLY\"] = 1] = \"EDITION_1_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_2_TEST_ONLY = 2;\n     */\n    Edition[Edition[\"EDITION_2_TEST_ONLY\"] = 2] = \"EDITION_2_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99997_TEST_ONLY = 99997;\n     */\n    Edition[Edition[\"EDITION_99997_TEST_ONLY\"] = 99997] = \"EDITION_99997_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99998_TEST_ONLY = 99998;\n     */\n    Edition[Edition[\"EDITION_99998_TEST_ONLY\"] = 99998] = \"EDITION_99998_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99999_TEST_ONLY = 99999;\n     */\n    Edition[Edition[\"EDITION_99999_TEST_ONLY\"] = 99999] = \"EDITION_99999_TEST_ONLY\";\n    /**\n     * Placeholder for specifying unbounded edition support.  This should only\n     * ever be used by plugins that can expect to never require any changes to\n     * support a new edition.\n     *\n     * @generated from enum value: EDITION_MAX = 2147483647;\n     */\n    Edition[Edition[\"EDITION_MAX\"] = 2147483647] = \"EDITION_MAX\";\n})(Edition || (Edition = {}));\n/**\n * Describes the enum google.protobuf.Edition.\n */\nconst EditionSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 0);\n/**\n * Describes the 'visibility' of a symbol with respect to the proto import\n * system. Symbols can only be imported when the visibility rules do not prevent\n * it (ex: local symbols cannot be imported).  Visibility modifiers can only set\n * on `message` and `enum` as they are the only types available to be referenced\n * from other files.\n *\n * @generated from enum google.protobuf.SymbolVisibility\n */\nvar SymbolVisibility;\n(function (SymbolVisibility) {\n    /**\n     * @generated from enum value: VISIBILITY_UNSET = 0;\n     */\n    SymbolVisibility[SymbolVisibility[\"VISIBILITY_UNSET\"] = 0] = \"VISIBILITY_UNSET\";\n    /**\n     * @generated from enum value: VISIBILITY_LOCAL = 1;\n     */\n    SymbolVisibility[SymbolVisibility[\"VISIBILITY_LOCAL\"] = 1] = \"VISIBILITY_LOCAL\";\n    /**\n     * @generated from enum value: VISIBILITY_EXPORT = 2;\n     */\n    SymbolVisibility[SymbolVisibility[\"VISIBILITY_EXPORT\"] = 2] = \"VISIBILITY_EXPORT\";\n})(SymbolVisibility || (SymbolVisibility = {}));\n/**\n * Describes the enum google.protobuf.SymbolVisibility.\n */\nconst SymbolVisibilitySchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_descriptor, 1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/descriptor_pb.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/struct_pb.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/struct_pb.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListValueSchema: () => (/* binding */ ListValueSchema),\n/* harmony export */   NullValue: () => (/* binding */ NullValue),\n/* harmony export */   NullValueSchema: () => (/* binding */ NullValueSchema),\n/* harmony export */   StructSchema: () => (/* binding */ StructSchema),\n/* harmony export */   ValueSchema: () => (/* binding */ ValueSchema),\n/* harmony export */   file_google_protobuf_struct: () => (/* binding */ file_google_protobuf_struct)\n/* harmony export */ });\n/* harmony import */ var _codegenv2_file_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../codegenv2/file.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/file.js\");\n/* harmony import */ var _codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../codegenv2/message.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/message.js\");\n/* harmony import */ var _codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../codegenv2/enum.js */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/codegenv2/enum.js\");\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Describes the file google/protobuf/struct.proto.\n */\nconst file_google_protobuf_struct = /*@__PURE__*/ (0,_codegenv2_file_js__WEBPACK_IMPORTED_MODULE_0__.fileDesc)(\"Chxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvEg9nb29nbGUucHJvdG9idWYihAEKBlN0cnVjdBIzCgZmaWVsZHMYASADKAsyIy5nb29nbGUucHJvdG9idWYuU3RydWN0LkZpZWxkc0VudHJ5GkUKC0ZpZWxkc0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZToCOAEi6gEKBVZhbHVlEjAKCm51bGxfdmFsdWUYASABKA4yGi5nb29nbGUucHJvdG9idWYuTnVsbFZhbHVlSAASFgoMbnVtYmVyX3ZhbHVlGAIgASgBSAASFgoMc3RyaW5nX3ZhbHVlGAMgASgJSAASFAoKYm9vbF92YWx1ZRgEIAEoCEgAEi8KDHN0cnVjdF92YWx1ZRgFIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RIABIwCgpsaXN0X3ZhbHVlGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLkxpc3RWYWx1ZUgAQgYKBGtpbmQiMwoJTGlzdFZhbHVlEiYKBnZhbHVlcxgBIAMoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZSobCglOdWxsVmFsdWUSDgoKTlVMTF9WQUxVRRAAQn8KE2NvbS5nb29nbGUucHJvdG9idWZCC1N0cnVjdFByb3RvUAFaL2dvb2dsZS5nb2xhbmcub3JnL3Byb3RvYnVmL3R5cGVzL2tub3duL3N0cnVjdHBi+AEBogIDR1BCqgIeR29vZ2xlLlByb3RvYnVmLldlbGxLbm93blR5cGVzYgZwcm90bzM\");\n/**\n * Describes the message google.protobuf.Struct.\n * Use `create(StructSchema)` to create a new message.\n */\nconst StructSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_struct, 0);\n/**\n * Describes the message google.protobuf.Value.\n * Use `create(ValueSchema)` to create a new message.\n */\nconst ValueSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_struct, 1);\n/**\n * Describes the message google.protobuf.ListValue.\n * Use `create(ListValueSchema)` to create a new message.\n */\nconst ListValueSchema = /*@__PURE__*/ (0,_codegenv2_message_js__WEBPACK_IMPORTED_MODULE_1__.messageDesc)(file_google_protobuf_struct, 2);\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from enum google.protobuf.NullValue\n */\nvar NullValue;\n(function (NullValue) {\n    /**\n     * Null value.\n     *\n     * @generated from enum value: NULL_VALUE = 0;\n     */\n    NullValue[NullValue[\"NULL_VALUE\"] = 0] = \"NULL_VALUE\";\n})(NullValue || (NullValue = {}));\n/**\n * Describes the enum google.protobuf.NullValue.\n */\nconst NullValueSchema = /*@__PURE__*/ (0,_codegenv2_enum_js__WEBPACK_IMPORTED_MODULE_2__.enumDesc)(file_google_protobuf_struct, 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3drdC9nZW4vZ29vZ2xlL3Byb3RvYnVmL3N0cnVjdF9wYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5RDtBQUNNO0FBQ047QUFDekQ7QUFDQTtBQUNBO0FBQ08sa0RBQWtELDREQUFRO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLGtFQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLGtFQUFXO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0NBQXNDLGtFQUFXO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4QkFBOEI7QUFDL0I7QUFDQTtBQUNBO0FBQ08sc0NBQXNDLDREQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYnVmYnVpbGQrcHJvdG9idWZAMi43LjAvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS93a3QvZ2VuL2dvb2dsZS9wcm90b2J1Zi9zdHJ1Y3RfcGIuanM/ZGM4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI1IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgZmlsZURlc2MgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29kZWdlbnYyL2ZpbGUuanNcIjtcbmltcG9ydCB7IG1lc3NhZ2VEZXNjIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvZGVnZW52Mi9tZXNzYWdlLmpzXCI7XG5pbXBvcnQgeyBlbnVtRGVzYyB9IGZyb20gXCIuLi8uLi8uLi8uLi9jb2RlZ2VudjIvZW51bS5qc1wiO1xuLyoqXG4gKiBEZXNjcmliZXMgdGhlIGZpbGUgZ29vZ2xlL3Byb3RvYnVmL3N0cnVjdC5wcm90by5cbiAqL1xuZXhwb3J0IGNvbnN0IGZpbGVfZ29vZ2xlX3Byb3RvYnVmX3N0cnVjdCA9IC8qQF9fUFVSRV9fKi8gZmlsZURlc2MoXCJDaHhuYjI5bmJHVXZjSEp2ZEc5aWRXWXZjM1J5ZFdOMExuQnliM1J2RWc5bmIyOW5iR1V1Y0hKdmRHOWlkV1lpaEFFS0JsTjBjblZqZEJJekNnWm1hV1ZzWkhNWUFTQURLQXN5SXk1bmIyOW5iR1V1Y0hKdmRHOWlkV1l1VTNSeWRXTjBMa1pwWld4a2MwVnVkSEo1R2tVS0MwWnBaV3hrYzBWdWRISjVFZ3NLQTJ0bGVSZ0JJQUVvQ1JJbENnVjJZV3gxWlJnQ0lBRW9DeklXTG1kdmIyZHNaUzV3Y205MGIySjFaaTVXWVd4MVpUb0NPQUVpNmdFS0JWWmhiSFZsRWpBS0NtNTFiR3hmZG1Gc2RXVVlBU0FCS0E0eUdpNW5iMjluYkdVdWNISnZkRzlpZFdZdVRuVnNiRlpoYkhWbFNBQVNGZ29NYm5WdFltVnlYM1poYkhWbEdBSWdBU2dCU0FBU0Znb01jM1J5YVc1blgzWmhiSFZsR0FNZ0FTZ0pTQUFTRkFvS1ltOXZiRjkyWVd4MVpSZ0VJQUVvQ0VnQUVpOEtESE4wY25WamRGOTJZV3gxWlJnRklBRW9DeklYTG1kdmIyZHNaUzV3Y205MGIySjFaaTVUZEhKMVkzUklBQkl3Q2dwc2FYTjBYM1poYkhWbEdBWWdBU2dMTWhvdVoyOXZaMnhsTG5CeWIzUnZZblZtTGt4cGMzUldZV3gxWlVnQVFnWUtCR3RwYm1RaU13b0pUR2x6ZEZaaGJIVmxFaVlLQm5aaGJIVmxjeGdCSUFNb0N6SVdMbWR2YjJkc1pTNXdjbTkwYjJKMVppNVdZV3gxWlNvYkNnbE9kV3hzVm1Gc2RXVVNEZ29LVGxWTVRGOVdRVXhWUlJBQVFuOEtFMk52YlM1bmIyOW5iR1V1Y0hKdmRHOWlkV1pDQzFOMGNuVmpkRkJ5YjNSdlVBRmFMMmR2YjJkc1pTNW5iMnhoYm1jdWIzSm5MM0J5YjNSdlluVm1MM1I1Y0dWekwydHViM2R1TDNOMGNuVmpkSEJpK0FFQm9nSURSMUJDcWdJZVIyOXZaMnhsTGxCeWIzUnZZblZtTGxkbGJHeExibTkzYmxSNWNHVnpZZ1p3Y205MGJ6TVwiKTtcbi8qKlxuICogRGVzY3JpYmVzIHRoZSBtZXNzYWdlIGdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QuXG4gKiBVc2UgYGNyZWF0ZShTdHJ1Y3RTY2hlbWEpYCB0byBjcmVhdGUgYSBuZXcgbWVzc2FnZS5cbiAqL1xuZXhwb3J0IGNvbnN0IFN0cnVjdFNjaGVtYSA9IC8qQF9fUFVSRV9fKi8gbWVzc2FnZURlc2MoZmlsZV9nb29nbGVfcHJvdG9idWZfc3RydWN0LCAwKTtcbi8qKlxuICogRGVzY3JpYmVzIHRoZSBtZXNzYWdlIGdvb2dsZS5wcm90b2J1Zi5WYWx1ZS5cbiAqIFVzZSBgY3JlYXRlKFZhbHVlU2NoZW1hKWAgdG8gY3JlYXRlIGEgbmV3IG1lc3NhZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCBWYWx1ZVNjaGVtYSA9IC8qQF9fUFVSRV9fKi8gbWVzc2FnZURlc2MoZmlsZV9nb29nbGVfcHJvdG9idWZfc3RydWN0LCAxKTtcbi8qKlxuICogRGVzY3JpYmVzIHRoZSBtZXNzYWdlIGdvb2dsZS5wcm90b2J1Zi5MaXN0VmFsdWUuXG4gKiBVc2UgYGNyZWF0ZShMaXN0VmFsdWVTY2hlbWEpYCB0byBjcmVhdGUgYSBuZXcgbWVzc2FnZS5cbiAqL1xuZXhwb3J0IGNvbnN0IExpc3RWYWx1ZVNjaGVtYSA9IC8qQF9fUFVSRV9fKi8gbWVzc2FnZURlc2MoZmlsZV9nb29nbGVfcHJvdG9idWZfc3RydWN0LCAyKTtcbi8qKlxuICogYE51bGxWYWx1ZWAgaXMgYSBzaW5nbGV0b24gZW51bWVyYXRpb24gdG8gcmVwcmVzZW50IHRoZSBudWxsIHZhbHVlIGZvciB0aGVcbiAqIGBWYWx1ZWAgdHlwZSB1bmlvbi5cbiAqXG4gKiBUaGUgSlNPTiByZXByZXNlbnRhdGlvbiBmb3IgYE51bGxWYWx1ZWAgaXMgSlNPTiBgbnVsbGAuXG4gKlxuICogQGdlbmVyYXRlZCBmcm9tIGVudW0gZ29vZ2xlLnByb3RvYnVmLk51bGxWYWx1ZVxuICovXG5leHBvcnQgdmFyIE51bGxWYWx1ZTtcbihmdW5jdGlvbiAoTnVsbFZhbHVlKSB7XG4gICAgLyoqXG4gICAgICogTnVsbCB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBnZW5lcmF0ZWQgZnJvbSBlbnVtIHZhbHVlOiBOVUxMX1ZBTFVFID0gMDtcbiAgICAgKi9cbiAgICBOdWxsVmFsdWVbTnVsbFZhbHVlW1wiTlVMTF9WQUxVRVwiXSA9IDBdID0gXCJOVUxMX1ZBTFVFXCI7XG59KShOdWxsVmFsdWUgfHwgKE51bGxWYWx1ZSA9IHt9KSk7XG4vKipcbiAqIERlc2NyaWJlcyB0aGUgZW51bSBnb29nbGUucHJvdG9idWYuTnVsbFZhbHVlLlxuICovXG5leHBvcnQgY29uc3QgTnVsbFZhbHVlU2NoZW1hID0gLypAX19QVVJFX18qLyBlbnVtRGVzYyhmaWxlX2dvb2dsZV9wcm90b2J1Zl9zdHJ1Y3QsIDApO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/struct_pb.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js":
/*!******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWrapper: () => (/* binding */ isWrapper),\n/* harmony export */   isWrapperDesc: () => (/* binding */ isWrapperDesc)\n/* harmony export */ });\n// Copyright 2021-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nfunction isWrapper(arg) {\n    return isWrapperTypeName(arg.$typeName);\n}\nfunction isWrapperDesc(messageDesc) {\n    const f = messageDesc.fields[0];\n    return (isWrapperTypeName(messageDesc.typeName) &&\n        f !== undefined &&\n        f.fieldKind == \"scalar\" &&\n        f.name == \"value\" &&\n        f.number == 1);\n}\nfunction isWrapperTypeName(name) {\n    return (name.startsWith(\"google.protobuf.\") &&\n        [\n            \"DoubleValue\",\n            \"FloatValue\",\n            \"Int64Value\",\n            \"UInt64Value\",\n            \"Int32Value\",\n            \"UInt32Value\",\n            \"BoolValue\",\n            \"StringValue\",\n            \"BytesValue\",\n        ].includes(name.substring(16)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3drdC93cmFwcGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1dG8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BidWZidWlsZCtwcm90b2J1ZkAyLjcuMC9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3drdC93cmFwcGVycy5qcz9lZjYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjUgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5leHBvcnQgZnVuY3Rpb24gaXNXcmFwcGVyKGFyZykge1xuICAgIHJldHVybiBpc1dyYXBwZXJUeXBlTmFtZShhcmcuJHR5cGVOYW1lKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1dyYXBwZXJEZXNjKG1lc3NhZ2VEZXNjKSB7XG4gICAgY29uc3QgZiA9IG1lc3NhZ2VEZXNjLmZpZWxkc1swXTtcbiAgICByZXR1cm4gKGlzV3JhcHBlclR5cGVOYW1lKG1lc3NhZ2VEZXNjLnR5cGVOYW1lKSAmJlxuICAgICAgICBmICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgZi5maWVsZEtpbmQgPT0gXCJzY2FsYXJcIiAmJlxuICAgICAgICBmLm5hbWUgPT0gXCJ2YWx1ZVwiICYmXG4gICAgICAgIGYubnVtYmVyID09IDEpO1xufVxuZnVuY3Rpb24gaXNXcmFwcGVyVHlwZU5hbWUobmFtZSkge1xuICAgIHJldHVybiAobmFtZS5zdGFydHNXaXRoKFwiZ29vZ2xlLnByb3RvYnVmLlwiKSAmJlxuICAgICAgICBbXG4gICAgICAgICAgICBcIkRvdWJsZVZhbHVlXCIsXG4gICAgICAgICAgICBcIkZsb2F0VmFsdWVcIixcbiAgICAgICAgICAgIFwiSW50NjRWYWx1ZVwiLFxuICAgICAgICAgICAgXCJVSW50NjRWYWx1ZVwiLFxuICAgICAgICAgICAgXCJJbnQzMlZhbHVlXCIsXG4gICAgICAgICAgICBcIlVJbnQzMlZhbHVlXCIsXG4gICAgICAgICAgICBcIkJvb2xWYWx1ZVwiLFxuICAgICAgICAgICAgXCJTdHJpbmdWYWx1ZVwiLFxuICAgICAgICAgICAgXCJCeXRlc1ZhbHVlXCIsXG4gICAgICAgIF0uaW5jbHVkZXMobmFtZS5zdWJzdHJpbmcoMTYpKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/wrappers.js\n");

/***/ })

};
;