"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf";
exports.ids = ["vendor-chunks/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js ***!
  \***************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertFetchApi: () => (/* binding */ assertFetchApi)\n/* harmony export */ });\n// Copyright 2021-2025 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Asserts that the fetch API is available.\n */\nfunction assertFetchApi() {\n    try {\n        new Headers();\n    }\n    catch (_) {\n        throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bjb25uZWN0cnBjK2Nvbm5lY3Qtd2ViQDIuMV8zN2RlNTBkNWRiN2VmMjJkMDYzYjNkNTM5NWEzZGFiZi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC13ZWIvZGlzdC9lc20vYXNzZXJ0LWZldGNoLWFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXRvL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AY29ubmVjdHJwYytjb25uZWN0LXdlYkAyLjFfMzdkZTUwZDVkYjdlZjIyZDA2M2IzZDUzOTVhM2RhYmYvbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3Qtd2ViL2Rpc3QvZXNtL2Fzc2VydC1mZXRjaC1hcGkuanM/OWViMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI1IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBBc3NlcnRzIHRoYXQgdGhlIGZldGNoIEFQSSBpcyBhdmFpbGFibGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRGZXRjaEFwaSgpIHtcbiAgICB0cnkge1xuICAgICAgICBuZXcgSGVhZGVycygpO1xuICAgIH1cbiAgICBjYXRjaCAoXykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb25uZWN0LXdlYiByZXF1aXJlcyB0aGUgZmV0Y2ggQVBJLiBBcmUgeW91IHJ1bm5pbmcgb24gYW4gb2xkIHZlcnNpb24gb2YgTm9kZS5qcz8gTm9kZS5qcyBpcyBub3Qgc3VwcG9ydGVkIGluIENvbm5lY3QgZm9yIFdlYiAtIHBsZWFzZSBzdGF5IHR1bmVkIGZvciBDb25uZWN0IGZvciBOb2RlLlwiKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectTransport: () => (/* binding */ createConnectTransport)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/from-json.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect@2.1.0_@bufbuild+protobuf@2.7.0/node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert-fetch-api.js */ \"(ssr)/../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\");\n/* harmony import */ var _bufbuild_protobuf_wkt__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bufbuild/protobuf/wkt */ \"(ssr)/../../node_modules/.pnpm/@bufbuild+protobuf@2.7.0/node_modules/@bufbuild/protobuf/dist/esm/wkt/gen/google/protobuf/descriptor_pb.js\");\n// Copyright 2021-2025 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\nconst fetchOptions = {\n    redirect: \"error\",\n};\n/**\n * Create a Transport for the Connect protocol, which makes unary and\n * server-streaming methods available to web browsers. It uses the fetch\n * API to make HTTP requests.\n */\nfunction createConnectTransport(options) {\n    var _a;\n    (0,_assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : false;\n    return {\n        async unary(method, signal, timeoutMs, header, message, contextValues) {\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_2__.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service: method.parent,\n                    method,\n                    requestMethod: \"POST\",\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(options.baseUrl, method),\n                    header: (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_4__.requestHeader)(method.methodKind, useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_5__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    const useGet = options.useHttpGet === true &&\n                        method.idempotency ===\n                            _bufbuild_protobuf_wkt__WEBPACK_IMPORTED_MODULE_6__.MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS;\n                    let body = null;\n                    if (useGet) {\n                        req = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_7__.transformConnectPostToGetRequest)(req, serialize(req.message), useBinaryFormat);\n                    }\n                    else {\n                        body = serialize(req.message);\n                    }\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, fetchOptions), { method: req.requestMethod, headers: req.header, signal: req.signal, body }));\n                    const { isUnaryError, unaryError } = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_8__.validateResponse)(method.methodKind, useBinaryFormat, response.status, response.headers);\n                    if (isUnaryError) {\n                        throw (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_9__.errorFromJson)((await response.json()), (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_10__.appendHeaders)(...(0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_11__.trailerDemux)(response.headers)), unaryError);\n                    }\n                    const [demuxedHeader, demuxedTrailer] = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_11__.trailerDemux)(response.headers);\n                    return {\n                        stream: false,\n                        service: method.parent,\n                        method,\n                        header: demuxedHeader,\n                        message: useBinaryFormat\n                            ? parse(new Uint8Array(await response.arrayBuffer()))\n                            : (0,_bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_12__.fromJson)(method.output, (await response.json()), (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.getJsonOptions)(options.jsonOptions)),\n                        trailer: demuxedTrailer,\n                    };\n                },\n            });\n        },\n        async stream(method, signal, timeoutMs, header, input, contextValues) {\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, trailerTarget, header, signal) {\n                return __asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_13__.createEnvelopeReadableStream)(body).getReader();\n                    let endStreamReceived = false;\n                    for (;;) {\n                        const result = yield __await(reader.read());\n                        if (result.done) {\n                            break;\n                        }\n                        const { flags, data } = result.value;\n                        if ((flags & _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_14__.compressedFlag) === _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_14__.compressedFlag) {\n                            throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_15__.ConnectError(`protocol error: received unsupported compressed output`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_16__.Code.Internal);\n                        }\n                        if ((flags & _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_17__.endStreamFlag) === _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_17__.endStreamFlag) {\n                            endStreamReceived = true;\n                            const endStream = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_17__.endStreamFromJson)(data);\n                            if (endStream.error) {\n                                const error = endStream.error;\n                                header.forEach((value, key) => {\n                                    error.metadata.append(key, value);\n                                });\n                                throw error;\n                            }\n                            endStream.metadata.forEach((value, key) => trailerTarget.set(key, value));\n                            continue;\n                        }\n                        yield yield __await(parse(data));\n                    }\n                    // Node wil not throw an AbortError on `read` if the\n                    // signal is aborted before `getReader` is called.\n                    // As a work around we check at the end and throw.\n                    //\n                    // Ref: https://github.com/nodejs/undici/issues/1940\n                    if (\"throwIfAborted\" in signal) {\n                        // We assume that implementations without `throwIfAborted` (old\n                        // browsers) do honor aborted signals on `read`.\n                        signal.throwIfAborted();\n                    }\n                    if (!endStreamReceived) {\n                        throw \"missing EndStreamResponse\";\n                    }\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.methodKind != \"server_streaming\") {\n                    throw \"The fetch API does not support streaming request bodies\";\n                }\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) {\n                    throw \"missing request message\";\n                }\n                return (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_13__.encodeEnvelope)(0, serialize(r.value));\n            }\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_2__.runStreamingCall)({\n                interceptors: options.interceptors,\n                timeoutMs,\n                signal,\n                req: {\n                    stream: true,\n                    service: method.parent,\n                    method,\n                    requestMethod: \"POST\",\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(options.baseUrl, method),\n                    header: (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_4__.requestHeader)(method.methodKind, useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_5__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, fetchOptions), { method: req.requestMethod, headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n                    (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_8__.validateResponse)(method.methodKind, useBinaryFormat, fRes.status, fRes.headers);\n                    if (fRes.body === null) {\n                        throw \"missing response body\";\n                    }\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, trailer, fRes.headers, req.signal) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@connectrpc+connect-web@2.1_37de50d5db7ef22d063b3d5395a3dabf/node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js\n");

/***/ })

};
;