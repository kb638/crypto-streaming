// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,import_extension=js"
// @generated from file market/v1/price.proto (package market.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file market/v1/price.proto.
 */
export const file_market_v1_price: GenFile = /*@__PURE__*/
  fileDesc("ChVtYXJrZXQvdjEvcHJpY2UucHJvdG8SCW1hcmtldC52MSIfCg1TdHJlYW1SZXF1ZXN0Eg4KBnRpY2tlchgBIAEoCSI7CgtQcmljZVVwZGF0ZRIOCgZ0aWNrZXIYASABKAkSDQoFcHJpY2UYAiABKAESDQoFdHNfbXMYAyABKAMyUgoMUHJpY2VTZXJ2aWNlEkIKDFN0cmVhbVByaWNlcxIYLm1hcmtldC52MS5TdHJlYW1SZXF1ZXN0GhYubWFya2V0LnYxLlByaWNlVXBkYXRlMAFiBnByb3RvMw");

/**
 * Request to stream one ticker (we'll keep it simple: 1 ticker per stream)
 *
 * @generated from message market.v1.StreamRequest
 */
export type StreamRequest = Message<"market.v1.StreamRequest"> & {
  /**
   * e.g. "BTCUSD", "ETHUSD"
   *
   * @generated from field: string ticker = 1;
   */
  ticker: string;
};

/**
 * Describes the message market.v1.StreamRequest.
 * Use `create(StreamRequestSchema)` to create a new message.
 */
export const StreamRequestSchema: GenMessage<StreamRequest> = /*@__PURE__*/
  messageDesc(file_market_v1_price, 0);

/**
 * A price update from TradingView
 *
 * @generated from message market.v1.PriceUpdate
 */
export type PriceUpdate = Message<"market.v1.PriceUpdate"> & {
  /**
   * @generated from field: string ticker = 1;
   */
  ticker: string;

  /**
   * @generated from field: double price = 2;
   */
  price: number;

  /**
   * server timestamp in ms
   *
   * @generated from field: int64 ts_ms = 3;
   */
  tsMs: bigint;
};

/**
 * Describes the message market.v1.PriceUpdate.
 * Use `create(PriceUpdateSchema)` to create a new message.
 */
export const PriceUpdateSchema: GenMessage<PriceUpdate> = /*@__PURE__*/
  messageDesc(file_market_v1_price, 1);

/**
 * Price streaming service
 *
 * @generated from service market.v1.PriceService
 */
export const PriceService: GenService<{
  /**
   * Server-streaming: the server yields many PriceUpdate messages
   *
   * @generated from rpc market.v1.PriceService.StreamPrices
   */
  streamPrices: {
    methodKind: "server_streaming";
    input: typeof StreamRequestSchema;
    output: typeof PriceUpdateSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_market_v1_price, 0);

